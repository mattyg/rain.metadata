{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "deployer",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "meta",
              "type": "bytes"
            }
          ],
          "internalType": "struct DeployerDiscoverableMetaV2ConstructionConfig",
          "name": "config",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "badLender",
          "type": "address"
        }
      ],
      "name": "BadLender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InitializeSignatureFn",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Initializing",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "InvalidSignature",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minimum",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "actual",
          "type": "uint256"
        }
      ],
      "name": "MinimumOutput",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoOrders",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonZeroBeforeArbStack",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "unmeta",
          "type": "bytes"
        }
      ],
      "name": "NotRainMetaV1",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "expectedHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "actualHash",
          "type": "bytes32"
        }
      ],
      "name": "UnexpectedMetaHash",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "orderBook",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IExpressionDeployerV2",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "bytecode",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256[]",
                  "name": "constants",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct EvaluableConfigV2",
              "name": "evaluableConfig",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "implementationData",
              "type": "bytes"
            }
          ],
          "indexed": false,
          "internalType": "struct OrderBookV3ArbOrderTakerConfigV1",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "Initialize",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "subject",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "meta",
          "type": "bytes"
        }
      ],
      "name": "MetaV1",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "minimumInput",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maximumInput",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maximumIORatio",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "handleIO",
                      "type": "bool"
                    },
                    {
                      "components": [
                        {
                          "internalType": "contract IInterpreterV1",
                          "name": "interpreter",
                          "type": "address"
                        },
                        {
                          "internalType": "contract IInterpreterStoreV1",
                          "name": "store",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "expression",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct Evaluable",
                      "name": "evaluable",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint8",
                          "name": "decimals",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "vaultId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IO[]",
                      "name": "validInputs",
                      "type": "tuple[]"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint8",
                          "name": "decimals",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "vaultId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IO[]",
                      "name": "validOutputs",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct Order",
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "inputIOIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "outputIOIndex",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "signer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "context",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct SignedContextV1[]",
                  "name": "signedContext",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct TakeOrderConfig[]",
              "name": "orders",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct TakeOrdersConfigV2",
          "name": "takeOrders",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "minimumSenderOutput",
          "type": "uint256"
        }
      ],
      "name": "arb",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "orderBook",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IExpressionDeployerV2",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "bytecode",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256[]",
                  "name": "constants",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct EvaluableConfigV2",
              "name": "evaluableConfig",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "implementationData",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderBookV3ArbOrderTakerConfigV1",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "inputToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "outputToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "inputAmountSent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalOutputAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "takeOrdersData",
          "type": "bytes"
        }
      ],
      "name": "onTakeOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sI9r",
      "outputs": [
        {
          "internalType": "contract IInterpreterV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sI9rDispatch",
      "outputs": [
        {
          "internalType": "EncodedDispatch",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sI9rStore",
      "outputs": [
        {
          "internalType": "contract IInterpreterStoreV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sOrderBook",
      "outputs": [
        {
          "internalType": "contract IOrderBookV3",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sRouteProcessor3",
      "outputs": [
        {
          "internalType": "contract IRouteProcessor",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620034e8380380620034e8833981016040819052620000349162000383565b600160005560208101517f3d6909481820fc692906b0477e8f98248e84973bc8b8d5ac935132857d4f41259082908290829062000073908390620000d7565b60208101516040517fbea766d03fa1efd3f81cc8634d08320bc62bb0ed9234ac59bbaafa5893fb6b1391620000ac913391309162000491565b60405180910390a18051620000c1906200011e565b50620000ce9050620001b5565b505050620005a7565b805160208201208281146200010e5760405163074fe10f60e41b815260048101849052602481018290526044015b60405180910390fd5b620001198262000273565b505050565b60408051600080825260208201818152828401938490526331a66b6560e01b90935291829182916001600160a01b038616916331a66b65916200016691906044820162000500565b6060604051808303816000875af115801562000186573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001ac919062000537565b50505050505050565b600154610100900460ff16156200021f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840162000105565b60015460ff9081161462000271576001805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6200027e81620002a3565b620002a05780604051630c89984b60e31b81526004016200010591906200058b565b50565b6000600882511015620002b857506000919050565b50600801516001600160401b031667ff0a89c674ee78741490565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156200030e576200030e620002d3565b60405290565b604051601f8201601f191681016001600160401b03811182821017156200033f576200033f620002d3565b604052919050565b6001600160a01b0381168114620002a057600080fd5b60005b838110156200037a57818101518382015260200162000360565b50506000910152565b600060208083850312156200039757600080fd5b82516001600160401b0380821115620003af57600080fd5b9084019060408287031215620003c457600080fd5b620003ce620002e9565b8251620003db8162000347565b81528284015182811115620003ef57600080fd5b80840193505086601f8401126200040557600080fd5b8251828111156200041a576200041a620002d3565b6200042e601f8201601f1916860162000314565b925080835287858286010111156200044557600080fd5b62000456818685018787016200035d565b5092830152509392505050565b600081518084526200047d8160208601602086016200035d565b601f01601f19169290920160200192915050565b60018060a01b0384168152826020820152606060408201526000620004ba606083018462000463565b95945050505050565b600081518084526020808501945080840160005b83811015620004f557815187529582019590820190600101620004d7565b509495945050505050565b6060815260006060820152608060208201526000620005236080830185620004c3565b8281036040840152620004ba8185620004c3565b6000806000606084860312156200054d57600080fd5b83516200055a8162000347565b60208501519093506200056d8162000347565b6040850151909250620005808162000347565b809150509250925092565b602081526000620005a0602083018462000463565b9392505050565b612f3180620005b76000396000f3fe6080604052600436106100b15760003560e01c8063886d16501161006957806398da8d6a1161004e57806398da8d6a1461024d578063c3b7c7c31461026d578063d423a05214610280576100b1565b8063886d16501461020457806389448c3a14610237576100b1565b8063439fab911161009a578063439fab911461015757806361bb39e41461018557806371c1dea7146101d7576100b1565b806301ffc9a714610102578063059bebe614610137575b3480156100bd57600080fd5b50600154610100900460ff1615610100576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b005b34801561010e57600080fd5b5061012261011d366004611ed6565b6102ad565b60405190151581526020015b60405180910390f35b34801561014357600080fd5b50610100610152366004611f44565b610392565b34801561016357600080fd5b506101776101723660046120db565b6104fb565b60405190815260200161012e565b34801561019157600080fd5b506004546101b29073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161012e565b3480156101e357600080fd5b506003546101b29073ffffffffffffffffffffffffffffffffffffffff1681565b34801561021057600080fd5b506001546101b29062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b34801561024357600080fd5b5061017760025481565b34801561025957600080fd5b5061017761026836600461215b565b6108f0565b61010061027b366004612196565b610924565b34801561028c57600080fd5b506005546101b29073ffffffffffffffffffffffffffffffffffffffff1681565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f059bebe600000000000000000000000000000000000000000000000000000000148061034057507fffffffff0000000000000000000000000000000000000000000000000000000082167f439fab9100000000000000000000000000000000000000000000000000000000145b8061038c57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6103a0868686868686611054565b6005546103c89073ffffffffffffffffffffffffffffffffffffffff888116911660006110f7565b60055461040f9073ffffffffffffffffffffffffffffffffffffffff88811691167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6110f7565b600061041d828401846120db565b6005546040517f2646478b00000000000000000000000000000000000000000000000000000000815291925060009173ffffffffffffffffffffffffffffffffffffffff90911690632646478b90610483908b908a908c908b9030908a9060040161224e565b6020604051808303816000875af11580156104a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c691906122a7565b6005549091506104f19073ffffffffffffffffffffffffffffffffffffffff8a8116911660006110f7565b5050505050505050565b600154600090610100900460ff161580801561051b57506001805460ff16105b806105345750303b15801561053457506001805460ff16145b6105c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001681179055801561062257600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61062a6112fc565b600083806020019051810190610640919061237a565b905061064f816040015161136f565b80516001805473ffffffffffffffffffffffffffffffffffffffff90921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff9092169190911790556040517f61f559321bdc3ad3a0e3b8692a91eaffa9773753bfec4e5f4c344cfed245cab7906106ce90339084906124be565b60405180910390a160006106e98260200151602001516113ce565b111561085a5760408051600180825281830190925260009182919060208083019080368337019050509050600081600061ffff168151811061072d5761072d612593565b6020908102919091018101919091528381015180519181015160409182015191517f31a66b6500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909316926331a66b659261079f929186906004016125c2565b6060604051808303816000875af11580156107be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e291906125fb565b600480547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff94851617909155600380549091169390921692909217905560201b77ffffffffffffffffffffffffffffffffffffffff000000001660025550505b7fe0e57eda3f08f2a93bbe980d3df7f9c315eac41181f58b865a13d917fe769fc39250506108886001600055565b80156108ea57600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50919050565b60006040517faf1fbb2100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61092c6112fc565b600154610100900460ff161561096e576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61097b6060830183612648565b90506000036109b6576040517f9c95219f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006109c56060840184612648565b60008181106109d6576109d6612593565b90506020028101906109e891906126b0565b6109f290806126ee565b610a009060a0810190612722565b610a0d6060860186612648565b6000818110610a1e57610a1e612593565b9050602002810190610a3091906126b0565b60200135818110610a4357610a43612593565b610a599260206060909202019081019150612789565b90506000610a6a6060850185612648565b6000818110610a7b57610a7b612593565b9050602002810190610a8d91906126b0565b610a9790806126ee565b610aa59060c0810190612722565b610ab26060870187612648565b6000818110610ac357610ac3612593565b9050602002810190610ad591906126b0565b60400135818110610ae857610ae8612593565b610afe9260206060909202019081019150612789565b6002549091508015610d2d57600354600454600091829173ffffffffffffffffffffffffffffffffffffffff91821691636715f82591168386610bd882604051908082528060200260200182016040528015610b6e57816020015b6060815260200190600190039081610b595790505b506040805160008082526020820190925290610bd2565b610bbf6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b815260200190600190039081610b855790505b506113ec565b6040518563ffffffff1660e01b8152600401610bf794939291906127a6565b600060405180830381865afa158015610c14573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610c5a9190810190612852565b8151919350915015610c98576040517f379fa94000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805115610d2a57600480546040517f946aadc600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169163946aadc691610cf7916000918691016128b6565b600060405180830381600087803b158015610d1157600080fd5b505af1158015610d25573d6000803e3d6000fd5b505050505b50505b600154610d5b9073ffffffffffffffffffffffffffffffffffffffff858116916201000090041660006110f7565b600154610da89073ffffffffffffffffffffffffffffffffffffffff85811691620100009004167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6110f7565b6001546040517f8a44689c00000000000000000000000000000000000000000000000000000000815260009182916201000090910473ffffffffffffffffffffffffffffffffffffffff1690638a44689c90610e08908a90600401612bf3565b60408051808303816000875af1158015610e26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4a9190612e66565b6001549193509150610e7d9073ffffffffffffffffffffffffffffffffffffffff878116916201000090041660006110f7565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015610eea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0e91906122a7565b905086811015610f54576040517f0c08b5bc00000000000000000000000000000000000000000000000000000000815260048101889052602481018290526044016105bc565b8015610f7b57610f7b73ffffffffffffffffffffffffffffffffffffffff871633836116fc565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015610fe8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100c91906122a7565b905080156110355761103573ffffffffffffffffffffffffffffffffffffffff871633836116fc565b61103f3347611752565b505050505050506110506001600055565b5050565b600154610100900460ff1615611096576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015462010000900473ffffffffffffffffffffffffffffffffffffffff1633146110ef576040517f0bc3cde00000000000000000000000000000000000000000000000000000000081523360048201526024016105bc565b505050505050565b80158061119757506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611171573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119591906122a7565b155b611223576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084016105bc565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526112f79084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526118ac565b505050565b600260005403611368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105bc565b6002600055565b6000818060200190518101906113859190612e8a565b600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff929092169190911790555050565b600081516000036113e157506000919050565b506020015160001a90565b60606000825167ffffffffffffffff81111561140a5761140a611fee565b604051908082528060200260200182016040528015611433578160200160208202803683370190505b50905060008084511161144757600061144d565b83516001015b855160010101905060008167ffffffffffffffff81111561147057611470611fee565b6040519080825280602002602001820160405280156114a357816020015b606081526020019060019003908161148e5790505b50905060006114c8604080516002815233602082015230818301526060810190915290565b8282815181106114da576114da612593565b602002602001018190525060005b875181101561153857818060010192505087818151811061150b5761150b612593565b602002602001015183838151811061152557611525612593565b60209081029190910101526001016114e8565b508551156116f25780806001019150508382828151811061155b5761155b612593565b602002602001018190525060005b86518110156116f05761161a87828151811061158757611587612593565b6020026020010151600001516115f76115c48a85815181106115ab576115ab612593565b6020026020010151602001518051602090810291012090565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b89848151811061160957611609612593565b6020026020010151604001516119bb565b611653576040517f52bf9848000000000000000000000000000000000000000000000000000000008152600481018290526024016105bc565b86818151811061166557611665612593565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1685828151811061169957611699612593565b60200260200101818152505081806001019250508681815181106116bf576116bf612593565b6020026020010151602001518383815181106116dd576116dd612593565b6020908102919091010152600101611569565b505b5095945050505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526112f79084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611275565b804710156117bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016105bc565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611816576040519150601f19603f3d011682016040523d82523d6000602084013e61181b565b606091505b50509050806112f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016105bc565b600061190e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611a369092919063ffffffff16565b905080516000148061192f57508080602001905181019061192f9190612ea7565b6112f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016105bc565b60008060006119ca8585611a4d565b909250905060008160048111156119e3576119e3612ec4565b148015611a1b57508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611a2c5750611a2c868686611a92565b9695505050505050565b6060611a458484600085611bef565b949350505050565b6000808251604103611a835760208301516040840151606085015160001a611a7787828585611d08565b94509450505050611a8b565b506000905060025b9250929050565b60008060008573ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b8686604051602401611ac9929190612ef3565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051611b529190612f0c565b600060405180830381855afa9150503d8060008114611b8d576040519150601f19603f3d011682016040523d82523d6000602084013e611b92565b606091505b5091509150818015611ba657506020815110155b8015611a2c575080517f1626ba7e0000000000000000000000000000000000000000000000000000000090611be490830160209081019084016122a7565b149695505050505050565b606082471015611c81576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016105bc565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611caa9190612f0c565b60006040518083038185875af1925050503d8060008114611ce7576040519150601f19603f3d011682016040523d82523d6000602084013e611cec565b606091505b5091509150611cfd87838387611df7565b979650505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611d3f5750600090506003611dee565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611d93573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611de757600060019250925050611dee565b9150600090505b94509492505050565b60608315611e8d578251600003611e865773ffffffffffffffffffffffffffffffffffffffff85163b611e86576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105bc565b5081611a45565b611a458383815115611ea25781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bc9190612f1e565b600060208284031215611ee857600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611f1857600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611f4157600080fd5b50565b60008060008060008060a08789031215611f5d57600080fd5b8635611f6881611f1f565b95506020870135611f7881611f1f565b94506040870135935060608701359250608087013567ffffffffffffffff80821115611fa357600080fd5b818901915089601f830112611fb757600080fd5b813581811115611fc657600080fd5b8a6020828501011115611fd857600080fd5b6020830194508093505050509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561204057612040611fee565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561208d5761208d611fee565b604052919050565b600067ffffffffffffffff8211156120af576120af611fee565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000602082840312156120ed57600080fd5b813567ffffffffffffffff81111561210457600080fd5b8201601f8101841361211557600080fd5b803561212861212382612095565b612046565b81815285602083850101111561213d57600080fd5b81602084016020830137600091810160200191909152949350505050565b60006020828403121561216d57600080fd5b813567ffffffffffffffff81111561218457600080fd5b820160608185031215611f1857600080fd5b600080604083850312156121a957600080fd5b823567ffffffffffffffff8111156121c057600080fd5b830160a081860312156121d257600080fd5b946020939093013593505050565b60005b838110156121fb5781810151838201526020016121e3565b50506000910152565b6000815180845261221c8160208601602086016121e0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600073ffffffffffffffffffffffffffffffffffffffff8089168352876020840152808716604084015285606084015280851660808401525060c060a083015261229b60c0830184612204565b98975050505050505050565b6000602082840312156122b957600080fd5b5051919050565b600082601f8301126122d157600080fd5b81516122df61212382612095565b8181528460208386010111156122f457600080fd5b611a458260208301602087016121e0565b600082601f83011261231657600080fd5b8151602067ffffffffffffffff82111561233257612332611fee565b8160051b612341828201612046565b928352848101820192828101908785111561235b57600080fd5b83870192505b84831015611cfd57825182529183019190830190612361565b60006020828403121561238c57600080fd5b815167ffffffffffffffff808211156123a457600080fd5b90830190606082860312156123b857600080fd5b6123c061201d565b82516123cb81611f1f565b81526020830151828111156123df57600080fd5b8301606081880312156123f157600080fd5b6123f961201d565b815161240481611f1f565b815260208201518481111561241857600080fd5b612424898285016122c0565b60208301525060408201518481111561243c57600080fd5b61244889828501612305565b604083015250806020840152505060408301518281111561246857600080fd5b612474878286016122c0565b60408301525095945050505050565b600081518084526020808501945080840160005b838110156124b357815187529582019590820190600101612497565b509495945050505050565b600073ffffffffffffffffffffffffffffffffffffffff80851683526040602084015280845116604084015260208401516060808501528181511660a085015260208101519150606060c085015261251a610100850183612204565b9150604081015190507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff608483030160e08501526125578282612483565b91505060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848303016080850152611a2c8282612204565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6060815260006125d56060830186612204565b82810360208401526125e78186612483565b90508281036040840152611a2c8185612483565b60008060006060848603121561261057600080fd5b835161261b81611f1f565b602085015190935061262c81611f1f565b604085015190925061263d81611f1f565b809150509250925092565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261267d57600080fd5b83018035915067ffffffffffffffff82111561269857600080fd5b6020019150600581901b3603821315611a8b57600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818336030181126126e457600080fd5b9190910192915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126126e457600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261275757600080fd5b83018035915067ffffffffffffffff82111561277257600080fd5b6020019150606081023603821315611a8b57600080fd5b60006020828403121561279b57600080fd5b8135611f1881611f1f565b60006080820173ffffffffffffffffffffffffffffffffffffffff87168352602086818501528560408501526080606085015281855180845260a08601915060a08160051b870101935082870160005b82811015612842577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60888703018452612830868351612483565b955092840192908401906001016127f6565b50939a9950505050505050505050565b6000806040838503121561286557600080fd5b825167ffffffffffffffff8082111561287d57600080fd5b61288986838701612305565b9350602085015191508082111561289f57600080fd5b506128ac85828601612305565b9150509250929050565b828152604060208201526000611a456040830184612483565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261290457600080fd5b830160208101925035905067ffffffffffffffff81111561292457600080fd5b8060051b3603821315611a8b57600080fd5b8015158114611f4157600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261297957600080fd5b830160208101925035905067ffffffffffffffff81111561299957600080fd5b606081023603821315611a8b57600080fd5b818352600060208085019450826000805b86811015612a1b5782356129cf81611f1f565b73ffffffffffffffffffffffffffffffffffffffff1688528284013560ff81168082146129fa578384fd5b898601525060408381013590890152606097880197909201916001016129bc565b50959695505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612a5c57600080fd5b830160208101925035905067ffffffffffffffff811115612a7c57600080fd5b803603821315611a8b57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b81835260006020808501808196506005915085821b81018560005b88811015612be5578383038a5281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1893603018112612b2e57600080fd5b880160608135612b3d81611f1f565b73ffffffffffffffffffffffffffffffffffffffff168552612b61828901836128cf565b828a8801528083880152608092507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811115612b9c57600080fd5b881b808288850137860190506040612bb684820185612a27565b9450838884030182890152612bce8484018683612a8b565b9e8b019e9750505093880193505050600101612aef565b509098975050505050505050565b6000602080835260c083018435828501526040828601358186015260608187013581870152612c24818801886128cf565b60a060808981018290529582905260e095868a01600584901b8b0188018560005b86811015612e0f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff208e840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81893603018112612ca657600080fd5b88018035368290037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21018112612cdb57600080fd5b86855281018035612ceb81611f1f565b73ffffffffffffffffffffffffffffffffffffffff90811686890152818f013590612d1582612936565b901515868a0152818d013590612d2a82611f1f565b90811660c0870152818c013590612d4082611f1f565b908116868f01528188013590612d5582611f1f565b16610100860152612d6881890182612944565b8e610120880152612d7e610160880182846129ab565b915050612d8e60c0830183612944565b92507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8087830301610140880152612dc68284836129ab565b925050508d8201358e8601528b8201358c860152612de68b8301836128cf565b92508582038c870152612dfa828483612ad4565b968f019695505050918c019150600101612c45565b5050612e1d838e018e612a27565b9a5098507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08c820301848d0152612e55818b8b612a8b565b9d9c50505050505050505050505050565b60008060408385031215612e7957600080fd5b505080516020909101519092909150565b600060208284031215612e9c57600080fd5b8151611f1881611f1f565b600060208284031215612eb957600080fd5b8151611f1881612936565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b828152604060208201526000611a456040830184612204565b600082516126e48184602087016121e0565b602081526000611f18602083018461220456",
    "sourceMap": "532:1523:36:-:0;;;725:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:2;454:75:36;1821:22:2;1109:11:19;;;;462:66:36;;848:6;;462:66;;848:6;;1075:46:19;;462:66:36;;1075:23:19;:46::i;:::-;1188:11;;;;1136:64;;;;;;1143:10;;1179:4;;1136:64;:::i;:::-;;;;;;;;1250:15;;1210:56;;:39;:56::i;:::-;-1:-1:-1;2674:22:35::1;::::0;-1:-1:-1;2674:20:35::1;:22::i;:::-;2517:186:::0;;725:137:36;532:1523;;1424:292:32;1538:16;;;;;;1568:28;;;1564:112;;1619:46;;-1:-1:-1;;;1619:46:32;;;;;3081:25:43;;;3122:18;;;3115:34;;;3054:18;;1619:46:32;;;;;;;;1564:112;1685:24;1703:5;1685:17;:24::i;:::-;1506:210;1424:292;;:::o;1308:309:27:-;1513:16;;;1371:26;1513:16;;;;;;1531;;;;;;;;;;-1:-1:-1;;;1460:88:27;;;1371:26;;;;;-1:-1:-1;;;;;1460:48:27;;;;;:88;;1513:16;1460:88;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;1308:309:27:o;5917:280:1:-;5985:13;;;;;;;5984:14;5976:66;;;;-1:-1:-1;;;5976:66:1;;5028:2:43;5976:66:1;;;5010:21:43;5067:2;5047:18;;;5040:30;5106:34;5086:18;;;5079:62;-1:-1:-1;;;5157:18:43;;;5150:37;5204:19;;5976:66:1;4826:403:43;5976:66:1;6056:12;;6072:15;6056:12;;;:31;6052:139;;6103:12;:30;;-1:-1:-1;;6103:30:1;6118:15;6103:30;;;;;;6152:28;;5376:36:43;;;6152:28:1;;5364:2:43;5349:18;6152:28:1;;;;;;;6052:139;5917:280::o;1075:155:32:-;1151:19;1164:5;1151:12;:19::i;:::-;1146:78;;1207:5;1193:20;;-1:-1:-1;;;1193:20:32;;;;;;;;:::i;1146:78::-;1075:155;:::o;550:376::-;615:4;650:1;635:5;:12;:16;631:34;;;-1:-1:-1;660:5:32;;550:376;-1:-1:-1;550:376:32:o;631:34::-;-1:-1:-1;846:1:32;835:13;829:20;-1:-1:-1;;;;;825:32:32;667:18:31;883:36:32;;550:376::o;14:127:43:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:256;217:4;211:11;;;249:17;;-1:-1:-1;;;;;281:34:43;;317:22;;;278:62;275:88;;;343:18;;:::i;:::-;379:4;372:24;146:256;:::o;407:275::-;478:2;472:9;543:2;524:13;;-1:-1:-1;;520:27:43;508:40;;-1:-1:-1;;;;;563:34:43;;599:22;;;560:62;557:88;;;625:18;;:::i;:::-;661:2;654:22;407:275;;-1:-1:-1;407:275:43:o;687:131::-;-1:-1:-1;;;;;762:31:43;;752:42;;742:70;;808:1;805;798:12;823:250;908:1;918:113;932:6;929:1;926:13;918:113;;;1008:11;;;1002:18;989:11;;;982:39;954:2;947:10;918:113;;;-1:-1:-1;;1065:1:43;1047:16;;1040:27;823:250::o;1078:1159::-;1210:6;1241:2;1284;1272:9;1263:7;1259:23;1255:32;1252:52;;;1300:1;1297;1290:12;1252:52;1327:16;;-1:-1:-1;;;;;1392:14:43;;;1389:34;;;1419:1;1416;1409:12;1389:34;1442:22;;;;1498:4;1480:16;;;1476:27;1473:47;;;1516:1;1513;1506:12;1473:47;1542:21;;:::i;:::-;1593:2;1587:9;1605:33;1630:7;1605:33;:::i;:::-;1647:22;;1700:11;;;1694:18;1724:16;;;1721:36;;;1753:1;1750;1743:12;1721:36;1784:8;1780:2;1776:17;1766:27;;;1831:7;1824:4;1820:2;1816:13;1812:27;1802:55;;1853:1;1850;1843:12;1802:55;1882:2;1876:9;1904:2;1900;1897:10;1894:36;;;1910:18;;:::i;:::-;1952:53;1995:2;1976:13;;-1:-1:-1;;1972:27:43;1968:36;;1952:53;:::i;:::-;1939:66;;2028:2;2021:5;2014:17;2068:7;2063:2;2058;2054;2050:11;2046:20;2043:33;2040:53;;;2089:1;2086;2079:12;2040:53;2102:67;2166:2;2161;2154:5;2150:14;2145:2;2141;2137:11;2102:67;:::i;:::-;-1:-1:-1;2185:14:43;;;2178:29;-1:-1:-1;2189:5:43;1078:1159;-1:-1:-1;;;1078:1159:43:o;2242:270::-;2283:3;2321:5;2315:12;2348:6;2343:3;2336:19;2364:76;2433:6;2426:4;2421:3;2417:14;2410:4;2403:5;2399:16;2364:76;:::i;:::-;2494:2;2473:15;-1:-1:-1;;2469:29:43;2460:39;;;;2501:4;2456:50;;2242:270;-1:-1:-1;;2242:270:43:o;2517:385::-;2749:1;2745;2740:3;2736:11;2732:19;2724:6;2720:32;2709:9;2702:51;2789:6;2784:2;2773:9;2769:18;2762:34;2832:2;2827;2816:9;2812:18;2805:30;2683:4;2852:44;2892:2;2881:9;2877:18;2869:6;2852:44;:::i;:::-;2844:52;2517:385;-1:-1:-1;;;;;2517:385:43:o;3160:435::-;3213:3;3251:5;3245:12;3278:6;3273:3;3266:19;3304:4;3333:2;3328:3;3324:12;3317:19;;3370:2;3363:5;3359:14;3391:1;3401:169;3415:6;3412:1;3409:13;3401:169;;;3476:13;;3464:26;;3510:12;;;;3545:15;;;;3437:1;3430:9;3401:169;;;-1:-1:-1;3586:3:43;;3160:435;-1:-1:-1;;;;;3160:435:43:o;3600:646::-;3957:2;3946:9;3939:21;3996:1;3991:2;3980:9;3976:18;3969:29;4036:3;4029:4;4018:9;4014:20;4007:33;3920:4;4063:57;4115:3;4104:9;4100:19;4092:6;4063:57;:::i;:::-;4168:9;4160:6;4156:22;4151:2;4140:9;4136:18;4129:50;4196:44;4233:6;4225;4196:44;:::i;4251:570::-;4390:6;4398;4406;4459:2;4447:9;4438:7;4434:23;4430:32;4427:52;;;4475:1;4472;4465:12;4427:52;4507:9;4501:16;4526:31;4551:5;4526:31;:::i;:::-;4626:2;4611:18;;4605:25;4576:5;;-1:-1:-1;4639:33:43;4605:25;4639:33;:::i;:::-;4743:2;4728:18;;4722:25;4691:7;;-1:-1:-1;4756:33:43;4722:25;4756:33;:::i;:::-;4808:7;4798:17;;;4251:570;;;;;:::o;5423:217::-;5570:2;5559:9;5552:21;5533:4;5590:44;5630:2;5619:9;5615:18;5607:6;5590:44;:::i;:::-;5582:52;5423:217;-1:-1:-1;;;5423:217:43:o;:::-;532:1523:36;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100b15760003560e01c8063886d16501161006957806398da8d6a1161004e57806398da8d6a1461024d578063c3b7c7c31461026d578063d423a05214610280576100b1565b8063886d16501461020457806389448c3a14610237576100b1565b8063439fab911161009a578063439fab911461015757806361bb39e41461018557806371c1dea7146101d7576100b1565b806301ffc9a714610102578063059bebe614610137575b3480156100bd57600080fd5b50600154610100900460ff1615610100576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b005b34801561010e57600080fd5b5061012261011d366004611ed6565b6102ad565b60405190151581526020015b60405180910390f35b34801561014357600080fd5b50610100610152366004611f44565b610392565b34801561016357600080fd5b506101776101723660046120db565b6104fb565b60405190815260200161012e565b34801561019157600080fd5b506004546101b29073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161012e565b3480156101e357600080fd5b506003546101b29073ffffffffffffffffffffffffffffffffffffffff1681565b34801561021057600080fd5b506001546101b29062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b34801561024357600080fd5b5061017760025481565b34801561025957600080fd5b5061017761026836600461215b565b6108f0565b61010061027b366004612196565b610924565b34801561028c57600080fd5b506005546101b29073ffffffffffffffffffffffffffffffffffffffff1681565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f059bebe600000000000000000000000000000000000000000000000000000000148061034057507fffffffff0000000000000000000000000000000000000000000000000000000082167f439fab9100000000000000000000000000000000000000000000000000000000145b8061038c57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6103a0868686868686611054565b6005546103c89073ffffffffffffffffffffffffffffffffffffffff888116911660006110f7565b60055461040f9073ffffffffffffffffffffffffffffffffffffffff88811691167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6110f7565b600061041d828401846120db565b6005546040517f2646478b00000000000000000000000000000000000000000000000000000000815291925060009173ffffffffffffffffffffffffffffffffffffffff90911690632646478b90610483908b908a908c908b9030908a9060040161224e565b6020604051808303816000875af11580156104a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c691906122a7565b6005549091506104f19073ffffffffffffffffffffffffffffffffffffffff8a8116911660006110f7565b5050505050505050565b600154600090610100900460ff161580801561051b57506001805460ff16105b806105345750303b15801561053457506001805460ff16145b6105c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001681179055801561062257600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61062a6112fc565b600083806020019051810190610640919061237a565b905061064f816040015161136f565b80516001805473ffffffffffffffffffffffffffffffffffffffff90921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff9092169190911790556040517f61f559321bdc3ad3a0e3b8692a91eaffa9773753bfec4e5f4c344cfed245cab7906106ce90339084906124be565b60405180910390a160006106e98260200151602001516113ce565b111561085a5760408051600180825281830190925260009182919060208083019080368337019050509050600081600061ffff168151811061072d5761072d612593565b6020908102919091018101919091528381015180519181015160409182015191517f31a66b6500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909316926331a66b659261079f929186906004016125c2565b6060604051808303816000875af11580156107be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e291906125fb565b600480547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff94851617909155600380549091169390921692909217905560201b77ffffffffffffffffffffffffffffffffffffffff000000001660025550505b7fe0e57eda3f08f2a93bbe980d3df7f9c315eac41181f58b865a13d917fe769fc39250506108886001600055565b80156108ea57600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50919050565b60006040517faf1fbb2100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61092c6112fc565b600154610100900460ff161561096e576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61097b6060830183612648565b90506000036109b6576040517f9c95219f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006109c56060840184612648565b60008181106109d6576109d6612593565b90506020028101906109e891906126b0565b6109f290806126ee565b610a009060a0810190612722565b610a0d6060860186612648565b6000818110610a1e57610a1e612593565b9050602002810190610a3091906126b0565b60200135818110610a4357610a43612593565b610a599260206060909202019081019150612789565b90506000610a6a6060850185612648565b6000818110610a7b57610a7b612593565b9050602002810190610a8d91906126b0565b610a9790806126ee565b610aa59060c0810190612722565b610ab26060870187612648565b6000818110610ac357610ac3612593565b9050602002810190610ad591906126b0565b60400135818110610ae857610ae8612593565b610afe9260206060909202019081019150612789565b6002549091508015610d2d57600354600454600091829173ffffffffffffffffffffffffffffffffffffffff91821691636715f82591168386610bd882604051908082528060200260200182016040528015610b6e57816020015b6060815260200190600190039081610b595790505b506040805160008082526020820190925290610bd2565b610bbf6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b815260200190600190039081610b855790505b506113ec565b6040518563ffffffff1660e01b8152600401610bf794939291906127a6565b600060405180830381865afa158015610c14573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610c5a9190810190612852565b8151919350915015610c98576040517f379fa94000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805115610d2a57600480546040517f946aadc600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169163946aadc691610cf7916000918691016128b6565b600060405180830381600087803b158015610d1157600080fd5b505af1158015610d25573d6000803e3d6000fd5b505050505b50505b600154610d5b9073ffffffffffffffffffffffffffffffffffffffff858116916201000090041660006110f7565b600154610da89073ffffffffffffffffffffffffffffffffffffffff85811691620100009004167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6110f7565b6001546040517f8a44689c00000000000000000000000000000000000000000000000000000000815260009182916201000090910473ffffffffffffffffffffffffffffffffffffffff1690638a44689c90610e08908a90600401612bf3565b60408051808303816000875af1158015610e26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4a9190612e66565b6001549193509150610e7d9073ffffffffffffffffffffffffffffffffffffffff878116916201000090041660006110f7565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015610eea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0e91906122a7565b905086811015610f54576040517f0c08b5bc00000000000000000000000000000000000000000000000000000000815260048101889052602481018290526044016105bc565b8015610f7b57610f7b73ffffffffffffffffffffffffffffffffffffffff871633836116fc565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015610fe8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100c91906122a7565b905080156110355761103573ffffffffffffffffffffffffffffffffffffffff871633836116fc565b61103f3347611752565b505050505050506110506001600055565b5050565b600154610100900460ff1615611096576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015462010000900473ffffffffffffffffffffffffffffffffffffffff1633146110ef576040517f0bc3cde00000000000000000000000000000000000000000000000000000000081523360048201526024016105bc565b505050505050565b80158061119757506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611171573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119591906122a7565b155b611223576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084016105bc565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526112f79084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526118ac565b505050565b600260005403611368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105bc565b6002600055565b6000818060200190518101906113859190612e8a565b600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff929092169190911790555050565b600081516000036113e157506000919050565b506020015160001a90565b60606000825167ffffffffffffffff81111561140a5761140a611fee565b604051908082528060200260200182016040528015611433578160200160208202803683370190505b50905060008084511161144757600061144d565b83516001015b855160010101905060008167ffffffffffffffff81111561147057611470611fee565b6040519080825280602002602001820160405280156114a357816020015b606081526020019060019003908161148e5790505b50905060006114c8604080516002815233602082015230818301526060810190915290565b8282815181106114da576114da612593565b602002602001018190525060005b875181101561153857818060010192505087818151811061150b5761150b612593565b602002602001015183838151811061152557611525612593565b60209081029190910101526001016114e8565b508551156116f25780806001019150508382828151811061155b5761155b612593565b602002602001018190525060005b86518110156116f05761161a87828151811061158757611587612593565b6020026020010151600001516115f76115c48a85815181106115ab576115ab612593565b6020026020010151602001518051602090810291012090565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b89848151811061160957611609612593565b6020026020010151604001516119bb565b611653576040517f52bf9848000000000000000000000000000000000000000000000000000000008152600481018290526024016105bc565b86818151811061166557611665612593565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1685828151811061169957611699612593565b60200260200101818152505081806001019250508681815181106116bf576116bf612593565b6020026020010151602001518383815181106116dd576116dd612593565b6020908102919091010152600101611569565b505b5095945050505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526112f79084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611275565b804710156117bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016105bc565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611816576040519150601f19603f3d011682016040523d82523d6000602084013e61181b565b606091505b50509050806112f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016105bc565b600061190e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611a369092919063ffffffff16565b905080516000148061192f57508080602001905181019061192f9190612ea7565b6112f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016105bc565b60008060006119ca8585611a4d565b909250905060008160048111156119e3576119e3612ec4565b148015611a1b57508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611a2c5750611a2c868686611a92565b9695505050505050565b6060611a458484600085611bef565b949350505050565b6000808251604103611a835760208301516040840151606085015160001a611a7787828585611d08565b94509450505050611a8b565b506000905060025b9250929050565b60008060008573ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b8686604051602401611ac9929190612ef3565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051611b529190612f0c565b600060405180830381855afa9150503d8060008114611b8d576040519150601f19603f3d011682016040523d82523d6000602084013e611b92565b606091505b5091509150818015611ba657506020815110155b8015611a2c575080517f1626ba7e0000000000000000000000000000000000000000000000000000000090611be490830160209081019084016122a7565b149695505050505050565b606082471015611c81576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016105bc565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611caa9190612f0c565b60006040518083038185875af1925050503d8060008114611ce7576040519150601f19603f3d011682016040523d82523d6000602084013e611cec565b606091505b5091509150611cfd87838387611df7565b979650505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611d3f5750600090506003611dee565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611d93573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611de757600060019250925050611dee565b9150600090505b94509492505050565b60608315611e8d578251600003611e865773ffffffffffffffffffffffffffffffffffffffff85163b611e86576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105bc565b5081611a45565b611a458383815115611ea25781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bc9190612f1e565b600060208284031215611ee857600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611f1857600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611f4157600080fd5b50565b60008060008060008060a08789031215611f5d57600080fd5b8635611f6881611f1f565b95506020870135611f7881611f1f565b94506040870135935060608701359250608087013567ffffffffffffffff80821115611fa357600080fd5b818901915089601f830112611fb757600080fd5b813581811115611fc657600080fd5b8a6020828501011115611fd857600080fd5b6020830194508093505050509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561204057612040611fee565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561208d5761208d611fee565b604052919050565b600067ffffffffffffffff8211156120af576120af611fee565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000602082840312156120ed57600080fd5b813567ffffffffffffffff81111561210457600080fd5b8201601f8101841361211557600080fd5b803561212861212382612095565b612046565b81815285602083850101111561213d57600080fd5b81602084016020830137600091810160200191909152949350505050565b60006020828403121561216d57600080fd5b813567ffffffffffffffff81111561218457600080fd5b820160608185031215611f1857600080fd5b600080604083850312156121a957600080fd5b823567ffffffffffffffff8111156121c057600080fd5b830160a081860312156121d257600080fd5b946020939093013593505050565b60005b838110156121fb5781810151838201526020016121e3565b50506000910152565b6000815180845261221c8160208601602086016121e0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600073ffffffffffffffffffffffffffffffffffffffff8089168352876020840152808716604084015285606084015280851660808401525060c060a083015261229b60c0830184612204565b98975050505050505050565b6000602082840312156122b957600080fd5b5051919050565b600082601f8301126122d157600080fd5b81516122df61212382612095565b8181528460208386010111156122f457600080fd5b611a458260208301602087016121e0565b600082601f83011261231657600080fd5b8151602067ffffffffffffffff82111561233257612332611fee565b8160051b612341828201612046565b928352848101820192828101908785111561235b57600080fd5b83870192505b84831015611cfd57825182529183019190830190612361565b60006020828403121561238c57600080fd5b815167ffffffffffffffff808211156123a457600080fd5b90830190606082860312156123b857600080fd5b6123c061201d565b82516123cb81611f1f565b81526020830151828111156123df57600080fd5b8301606081880312156123f157600080fd5b6123f961201d565b815161240481611f1f565b815260208201518481111561241857600080fd5b612424898285016122c0565b60208301525060408201518481111561243c57600080fd5b61244889828501612305565b604083015250806020840152505060408301518281111561246857600080fd5b612474878286016122c0565b60408301525095945050505050565b600081518084526020808501945080840160005b838110156124b357815187529582019590820190600101612497565b509495945050505050565b600073ffffffffffffffffffffffffffffffffffffffff80851683526040602084015280845116604084015260208401516060808501528181511660a085015260208101519150606060c085015261251a610100850183612204565b9150604081015190507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff608483030160e08501526125578282612483565b91505060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848303016080850152611a2c8282612204565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6060815260006125d56060830186612204565b82810360208401526125e78186612483565b90508281036040840152611a2c8185612483565b60008060006060848603121561261057600080fd5b835161261b81611f1f565b602085015190935061262c81611f1f565b604085015190925061263d81611f1f565b809150509250925092565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261267d57600080fd5b83018035915067ffffffffffffffff82111561269857600080fd5b6020019150600581901b3603821315611a8b57600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818336030181126126e457600080fd5b9190910192915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126126e457600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261275757600080fd5b83018035915067ffffffffffffffff82111561277257600080fd5b6020019150606081023603821315611a8b57600080fd5b60006020828403121561279b57600080fd5b8135611f1881611f1f565b60006080820173ffffffffffffffffffffffffffffffffffffffff87168352602086818501528560408501526080606085015281855180845260a08601915060a08160051b870101935082870160005b82811015612842577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60888703018452612830868351612483565b955092840192908401906001016127f6565b50939a9950505050505050505050565b6000806040838503121561286557600080fd5b825167ffffffffffffffff8082111561287d57600080fd5b61288986838701612305565b9350602085015191508082111561289f57600080fd5b506128ac85828601612305565b9150509250929050565b828152604060208201526000611a456040830184612483565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261290457600080fd5b830160208101925035905067ffffffffffffffff81111561292457600080fd5b8060051b3603821315611a8b57600080fd5b8015158114611f4157600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261297957600080fd5b830160208101925035905067ffffffffffffffff81111561299957600080fd5b606081023603821315611a8b57600080fd5b818352600060208085019450826000805b86811015612a1b5782356129cf81611f1f565b73ffffffffffffffffffffffffffffffffffffffff1688528284013560ff81168082146129fa578384fd5b898601525060408381013590890152606097880197909201916001016129bc565b50959695505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612a5c57600080fd5b830160208101925035905067ffffffffffffffff811115612a7c57600080fd5b803603821315611a8b57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b81835260006020808501808196506005915085821b81018560005b88811015612be5578383038a5281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1893603018112612b2e57600080fd5b880160608135612b3d81611f1f565b73ffffffffffffffffffffffffffffffffffffffff168552612b61828901836128cf565b828a8801528083880152608092507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811115612b9c57600080fd5b881b808288850137860190506040612bb684820185612a27565b9450838884030182890152612bce8484018683612a8b565b9e8b019e9750505093880193505050600101612aef565b509098975050505050505050565b6000602080835260c083018435828501526040828601358186015260608187013581870152612c24818801886128cf565b60a060808981018290529582905260e095868a01600584901b8b0188018560005b86811015612e0f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff208e840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81893603018112612ca657600080fd5b88018035368290037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21018112612cdb57600080fd5b86855281018035612ceb81611f1f565b73ffffffffffffffffffffffffffffffffffffffff90811686890152818f013590612d1582612936565b901515868a0152818d013590612d2a82611f1f565b90811660c0870152818c013590612d4082611f1f565b908116868f01528188013590612d5582611f1f565b16610100860152612d6881890182612944565b8e610120880152612d7e610160880182846129ab565b915050612d8e60c0830183612944565b92507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8087830301610140880152612dc68284836129ab565b925050508d8201358e8601528b8201358c860152612de68b8301836128cf565b92508582038c870152612dfa828483612ad4565b968f019695505050918c019150600101612c45565b5050612e1d838e018e612a27565b9a5098507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08c820301848d0152612e55818b8b612a8b565b9d9c50505050505050505050505050565b60008060408385031215612e7957600080fd5b505080516020909101519092909150565b600060208284031215612e9c57600080fd5b8151611f1881611f1f565b600060208284031215612eb957600080fd5b8151611f1881612936565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b828152604060208201526000611a456040830184612204565b600082516126e48184602087016121e0565b602081526000611f18602083018461220456",
    "sourceMap": "532:1523:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6596:13:1;;;;;;;3175:69:35;;;3219:14;;;;;;;;;;;;;;3175:69;532:1523:36;2737:271:35;;;;;;;;;;-1:-1:-1;2737:271:35;;;;;:::i;:::-;;:::i;:::-;;;516:14:43;;509:22;491:41;;479:2;464:18;2737:271:35;;;;;;;;1169:807:36;;;;;;;;;;-1:-1:-1;1169:807:36;;;;;:::i;:::-;;:::i;3448:1658:35:-;;;;;;;;;;-1:-1:-1;3448:1658:35;;;;;:::i;:::-;;:::i;:::-;;;3570:25:43;;;3558:2;3543:18;3448:1658:35;3424:177:43;2474:36:35;;;;;;;;;;-1:-1:-1;2474:36:35;;;;;;;;;;;3810:42:43;3798:55;;;3780:74;;3768:2;3753:18;2474:36:35;3606:254:43;2442:26:35;;;;;;;;;;-1:-1:-1;2442:26:35;;;;;;;;2365:30;;;;;;;;;;-1:-1:-1;2365:30:35;;;;;;;;;;;2401:35;;;;;;;;;;;;;;;;3267:142;;;;;;;;;;-1:-1:-1;3267:142:35;;;;;:::i;:::-;;:::i;5158:2802::-;;;;;;:::i;:::-;;:::i;679:39:36:-;;;;;;;;;;-1:-1:-1;679:39:36;;;;;;;;2737:271:35;2822:4;2845:55;;;2860:40;2845:55;;:104;;-1:-1:-1;2904:45:35;;;2919:30;2904:45;2845:104;:156;;;-1:-1:-1;952:25:10;937:40;;;;2965:36:35;2838:163;2737:271;-1:-1:-1;;2737:271:35:o;1169:807:36:-;1395:95;1414:10;1426:11;1439:15;1456:17;1475:14;;1395:18;:95::i;:::-;1539:16;;1500:60;;1539:16;1500:30;;;;1539:16;;1500:30;:60::i;:::-;1609:16;;1570:76;;1609:16;1570:30;;;;1609:16;1628:17;1570:30;:76::i;:::-;1656:18;1677:35;;;;1688:14;1677:35;:::i;:::-;1744:16;;:134;;;;;1656:56;;-1:-1:-1;1723:17:36;;1744:16;;;;;:29;;:134;;1787:10;;1799:15;;1816:11;;1829:17;;1856:4;;1656:56;;1744:134;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1927:16;;1722:156;;-1:-1:-1;1888:60:36;;1927:16;1888:30;;;;1927:16;;1888:30;:60::i;:::-;1385:591;;1169:807;;;;;;:::o;3448:1658:35:-;3291:13:1;;3530:7:35;;3291:13:1;;;;;3290:14;;3336:34;;;;-1:-1:-1;3369:1:1;3354:12;;;;:16;3336:34;3335:97;;;-1:-1:-1;3404:4:1;1702:19:6;:23;;;3376:55:1;;-1:-1:-1;3414:12:1;;;;;:17;3376:55;3314:190;;;;;;;7380:2:43;3314:190:1;;;7362:21:43;7419:2;7399:18;;;7392:30;7458:34;7438:18;;;7431:62;7529:16;7509:18;;;7502:44;7563:19;;3314:190:1;;;;;;;;;3529:1;3514:16;;;;;;;;3540:65;;;;3590:4;3574:20;;;;;;;;3540:65;2261:21:2::1;:19;:21::i;:::-;3549:46:35::2;3609:4;3598:52;;;;;;;;;;;;:::i;:::-;3549:101;;3726:44;3744:6;:25;;;3726:17;:44::i;:::-;3862:16:::0;;3836:10:::2;:43:::0;;::::2;::::0;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;3954:30:::2;::::0;::::2;::::0;::::2;::::0;3965:10:::2;::::0;3862:6;;3954:30:::2;:::i;:::-;;;;;;;;4207:1;4148:56;4172:6;:22;;;:31;;;4148:23;:56::i;:::-;:60;4144:917;;;4288:16;::::0;;4302:1:::2;4288:16:::0;;;;;::::2;::::0;;;4224:18:::2;::::0;;;4288:16;::::2;::::0;;::::2;::::0;;::::2;::::0;::::2;;::::0;-1:-1:-1;4288:16:35::2;4257:47;;1976:1;4318:11;1886:1;4318:56;;;;;;;;;;:::i;:::-;;::::0;;::::2;::::0;;;;;;:81;;;;4777:22;;::::2;::::0;:31;;4843;;::::2;::::0;4876:32:::2;::::0;;::::2;::::0;4777:158;;;;;:48:::2;::::0;;::::2;::::0;::::2;::::0;:158:::2;::::0;4843:31;4910:11;;4777:158:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4752:9;4745:190:::0;;;;;::::2;;::::0;;::::2;;::::0;;;4746:4:::2;4745:190:::0;;;;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;1048:2:28;1016:34;;;4949:12:35::2;:101:::0;-1:-1:-1;;4144:917:35::2;191:36:18;5071:28:35;;;2303:20:2::1;1716:1:::0;2809:7;:22;2629:209;2303:20:::1;3629:14:1::0;3625:99;;;3659:13;:21;;;;;;3699:14;;13532:36:43;;;3699:14:1;;13520:2:43;13505:18;3699:14:1;;;;;;;3625:99;3258:472;3448:1658:35;;;:::o;3267:142::-;3353:7;3379:23;;;;;;;;;;;;;;5158:2802;2261:21:2;:19;:21::i;:::-;6596:13:1;;;;;;;3175:69:35::1;;;3219:14;;;;;;;;;;;;;;3175:69;5409:17:::2;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;:24;;5437:1;5409:29:::0;5405:77:::2;;5461:10;;;;;;;;;;;;;;5405:77;5492:24;5519:17;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;5537:1;5519:20;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:26;::::0;;::::2;:::i;:::-;:38;::::0;::::2;::::0;::::2;::::0;::::2;:::i;:::-;5558:17;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;5576:1;5558:20;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:33;;;5519:73;;;;;;;:::i;:::-;:79;::::0;::::2;:73;::::0;;::::2;;:79:::0;;::::2;::::0;-1:-1:-1;5519:79:35::2;:::i;:::-;5492:106:::0;-1:-1:-1;5608:25:35::2;5636:17;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;5654:1;5636:20;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:26;::::0;;::::2;:::i;:::-;:39;::::0;::::2;::::0;::::2;::::0;::::2;:::i;:::-;5676:17;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;5694:1;5676:20;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:34;;;5636:75;;;;;;;:::i;:::-;:81;::::0;::::2;:75;::::0;;::::2;;:81:::0;;::::2;::::0;-1:-1:-1;5636:81:35::2;:::i;:::-;5812:12;::::0;5608:109;;-1:-1:-1;5838:36:35;;5834:644:::2;;5939:4;::::0;5966:9:::2;::::0;5891:22:::2;::::0;;;5939:4:::2;::::0;;::::2;::::0;:9:::2;::::0;5966::::2;5891:22:::0;6034:8;6060:62:::2;5891:22:::0;6077:18:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;6097:24:35::2;::::0;;6119:1:::2;6097:24:::0;;;::::2;::::0;::::2;::::0;;;;::::2;::::0;::::2;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;6097:24:35::2;;;;;;;;;;;;;;;;;6060:16;:62::i;:::-;5939:197;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;::::0;;::::2;::::0;::::2;::::0;::::2;;::::0;::::2;::::0;;;::::2;::::0;::::2;:::i;:::-;6216:12:::0;;5890:246;;-1:-1:-1;5890:246:35;-1:-1:-1;6216:16:35;6212:85:::2;;6259:23;;;;;;;;;;;;;;6212:85;6376:10:::0;;:14;6372:96:::2;;6410:9;::::0;;:43:::2;::::0;;;;:9:::2;::::0;;::::2;::::0;:13:::2;::::0;:43:::2;::::0;:9:::2;::::0;6449:3;;6410:43:::2;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;6372:96;5876:602;;5834:644;6533:10;::::0;6488:60:::2;::::0;6533:10:::2;6488:36:::0;;::::2;::::0;6533:10;;::::2;;6546:1;6488:36;:60::i;:::-;6603:10;::::0;6558:76:::2;::::0;6603:10:::2;6558:36:::0;;::::2;::::0;6603:10;;::::2;;6616:17;6558:36;:76::i;:::-;6688:10;::::0;:33:::2;::::0;;;;6645:18:::2;::::0;;;6688:10;;;::::2;;;::::0;:21:::2;::::0;:33:::2;::::0;6710:10;;6688:33:::2;;;:::i;:::-;;::::0;::::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6811:10;::::0;6644:77;;-1:-1:-1;6644:77:35;-1:-1:-1;6766:60:35::2;::::0;6811:10:::2;6766:36:::0;;::::2;::::0;6811:10;;::::2;;6824:1;6766:36;:60::i;:::-;6916:49;::::0;;;;6959:4:::2;6916:49;::::0;::::2;3780:74:43::0;6893:20:35::2;::::0;6916:34:::2;::::0;::::2;::::0;::::2;::::0;3753:18:43;;6916:49:35::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6893:72;;6994:19;6979:12;:34;6975:120;;;7036:48;::::0;::::2;::::0;;::::2;::::0;::::2;27942:25:43::0;;;27983:18;;;27976:34;;;27915:18;;7036:48:35::2;27768:248:43::0;6975:120:35::2;7108:16:::0;;7104:110:::2;;7140:63;:37;::::0;::::2;7178:10;7190:12:::0;7140:37:::2;:63::i;:::-;7304:50;::::0;;;;7348:4:::2;7304:50;::::0;::::2;3780:74:43::0;7280:21:35::2;::::0;7304:35:::2;::::0;::::2;::::0;::::2;::::0;3753:18:43;;7304:50:35::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7280:74:::0;-1:-1:-1;7368:17:35;;7364:113:::2;;7401:65;:38;::::0;::::2;7440:10;7452:13:::0;7401:38:::2;:65::i;:::-;7892:61;7918:10;7931:21;7892:17;:61::i;:::-;5326:2634;;;;;;;2303:20:2::0;1716:1;2809:7;:22;2629:209;2303:20;5158:2802:35;;:::o;8009:262::-;6596:13:1;;;;;;;3175:69:35;;;3219:14;;;;;;;;;;;;;;3175:69;8199:10:::1;::::0;;;::::1;;;8177;:33;8173:92;;8233:21;::::0;::::1;::::0;;8243:10:::1;8233:21;::::0;::::1;3780:74:43::0;3753:18;;8233:21:35::1;3606:254:43::0;8173:92:35::1;8009:262:::0;;;;;;:::o;1818:573:5:-;2143:10;;;2142:62;;-1:-1:-1;2159:39:5;;;;;2183:4;2159:39;;;28256:34:43;2159:15:5;28326::43;;;28306:18;;;28299:43;2159:15:5;;;;;28168:18:43;;2159:39:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;2142:62;2121:163;;;;;;;28555:2:43;2121:163:5;;;28537:21:43;28594:2;28574:18;;;28567:30;28633:34;28613:18;;;28606:62;28704:24;28684:18;;;28677:52;28746:19;;2121:163:5;28353:418:43;2121:163:5;2321:62;;28980:42:43;28968:55;;2321:62:5;;;28950:74:43;29040:18;;;29033:34;;;2294:90:5;;2314:5;;2344:22;;28923:18:43;;2321:62:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2294:19;:90::i;:::-;1818:573;;;:::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;29280:2:43;2460:63:2;;;29262:21:43;29319:2;29299:18;;;29292:30;29358:33;29338:18;;;29331:61;29409:18;;2460:63:2;29078:355:43;2460:63:2;1759:1;2598:7;:18;2336:287::o;913:205:36:-;996:23;1034:4;1023:27;;;;;;;;;;;;:::i;:::-;1060:16;:51;;;;;;;;;;;;;;;-1:-1:-1;;913:205:36:o;476:349:25:-;543:13;572:8;:15;591:1;572:20;568:59;;-1:-1:-1;615:1:25;;476:349;-1:-1:-1;476:349:25:o;568:59::-;-1:-1:-1;802:4:25;788:19;782:26;779:1;774:35;;476:349::o;7166:2290:26:-;7301:18;7359:24;7400:14;:21;7386:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7386:36:26;;7359:63;;7571:21;7645:1;7621:14;:21;:25;:57;;7677:1;7621:57;;;7649:14;:21;7673:1;7649:25;7621:57;7599:11;:18;7595:1;:22;:84;7571:108;;7694:26;7739:13;7723:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7694:59;;7767:14;7817:17;3283:4:17;3277:11;;3315:1;3301:16;;2288:10:26;3348:4:17;3337:16;;3330:27;2326:4:26;3377:16:17;;;3370:27;2211:16:26;3423::17;;3410:30;;;3277:11;2172:169:26;7817:17;7799:7;7807:6;7799:15;;;;;;;;:::i;:::-;;;;;;:35;;;;7854:9;7849:140;7873:11;:18;7869:1;:22;7849:140;;;7916:8;;;;;;;7960:11;7972:1;7960:14;;;;;;;;:::i;:::-;;;;;;;7942:7;7950:6;7942:15;;;;;;;;:::i;:::-;;;;;;;;;;:32;7893:3;;7849:140;;;-1:-1:-1;8007:21:26;;:25;8003:1408;;8052:8;;;;;;;8096:7;8078;8086:6;8078:15;;;;;;;;:::i;:::-;;;;;;:25;;;;8127:9;8122:1275;8146:14;:21;8142:1;:25;8122:1275;;;8824:284;8890:14;8905:1;8890:17;;;;;;;;:::i;:::-;;;;;;;:24;;;8944:81;8973:51;8998:14;9013:1;8998:17;;;;;;;;:::i;:::-;;;;;;;:25;;;4081:13:30;;4096:4;4077:24;;;4058:17;;4048:54;;3908:210;8973:51:26;7389:34:8;7189:15;7376:48;;;7444:4;7437:18;;;;7495:4;7479:21;;;7120:396;8944:81:26;9055:14;9070:1;9055:17;;;;;;;;:::i;:::-;;;;;;;:27;;;8824:36;:284::i;:::-;8196:1010;;9164:19;;;;;;;;3570:25:43;;;3543:18;;9164:19:26;3424:177:43;8196:1010:26;9257:14;9272:1;9257:17;;;;;;;;:::i;:::-;;;;;;;:24;;;9241:42;;9228:7;9236:1;9228:10;;;;;;;;:::i;:::-;;;;;;:55;;;;;9305:8;;;;;;;9353:14;9368:1;9353:17;;;;;;;;:::i;:::-;;;;;;;:25;;;9335:7;9343:6;9335:15;;;;;;;;:::i;:::-;;;;;;;;;;:43;8169:3;;8122:1275;;;;8003:1408;-1:-1:-1;9432:7:26;7166:2290;-1:-1:-1;;;;;7166:2290:26:o;941:175:5:-;1050:58;;28980:42:43;28968:55;;1050:58:5;;;28950:74:43;29040:18;;;29033:34;;;1023:86:5;;1043:5;;1073:23;;28923:18:43;;1050:58:5;28776:297:43;2647:312:6;2761:6;2736:21;:31;;2728:73;;;;;;;30086:2:43;2728:73:6;;;30068:21:43;30125:2;30105:18;;;30098:30;30164:31;30144:18;;;30137:59;30213:18;;2728:73:6;29884:353:43;2728:73:6;2813:12;2831:9;:14;;2853:6;2831:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2812:52;;;2882:7;2874:78;;;;;;;30654:2:43;2874:78:6;;;30636:21:43;30693:2;30673:18;;;30666:30;30732:34;30712:18;;;30705:62;30803:28;30783:18;;;30776:56;30849:19;;2874:78:6;30452:422:43;5173:642:5;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;5618:27;;;;:69;;;;;:::i;:::-;5592:95;;5705:10;:17;5726:1;5705:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5697:111;;;;;;;31331:2:43;5697:111:5;;;31313:21:43;31370:2;31350:18;;;31343:30;31409:34;31389:18;;;31382:62;31480:12;31460:18;;;31453:40;31510:19;;5697:111:5;31129:406:43;1014:366:9;1120:4;1137:17;1156:24;1184:33;1201:4;1207:9;1184:16;:33::i;:::-;1136:81;;-1:-1:-1;1136:81:9;-1:-1:-1;1256:26:9;1247:5;:35;;;;;;;;:::i;:::-;;:58;;;;;1299:6;1286:19;;:9;:19;;;1247:58;1246:127;;;;1322:51;1349:6;1357:4;1363:9;1322:26;:51::i;:::-;1227:146;1014:366;-1:-1:-1;;;;;;1014:366:9:o;4108:223:6:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;4108:223;-1:-1:-1;;;;4108:223:6:o;2145:730:8:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:8;;-1:-1:-1;2822:35:8;2259:610;2145:730;;;;;:::o;1786:473:9:-;1929:4;1946:12;1960:19;1983:6;:17;;2037:34;;;2073:4;2079:9;2014:75;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1983:116;;;;2014:75;1983:116;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1945:154;;;;2117:7;:42;;;;;2157:2;2140:6;:13;:19;;2117:42;:134;;;;-1:-1:-1;2175:29:9;;2216:34;;2175:29;;;;;;;;;;;;:::i;:::-;:76;;1786:473;-1:-1:-1;;;;;;1786:473:9:o;5165:446:6:-;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;32705:2:43;5354:81:6;;;32687:21:43;32744:2;32724:18;;;32717:30;32783:34;32763:18;;;32756:62;32854:8;32834:18;;;32827:36;32880:19;;5354:81:6;32503:402:43;5354:81:6;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:6:o;5009:1456:8:-;5097:7;;6021:66;6008:79;;6004:161;;;-1:-1:-1;6119:1:8;;-1:-1:-1;6123:30:8;6103:51;;6004:161;6276:24;;;6259:14;6276:24;;;;;;;;;33137:25:43;;;33210:4;33198:17;;33178:18;;;33171:45;;;;33232:18;;;33225:34;;;33275:18;;;33268:34;;;6276:24:8;;33109:19:43;;6276:24:8;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6276:24:8;;;;;;-1:-1:-1;;6314:20:8;;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;-1:-1:-1;6437:20:8;;-1:-1:-1;5009:1456:8;;;;;;;;:::o;7671:628:6:-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;1702:19;;;;8113:60;;;;;;;33515:2:43;8113:60:6;;;33497:21:43;33554:2;33534:18;;;33527:30;33593:31;33573:18;;;33566:59;33642:18;;8113:60:6;33313:353:43;8113:60:6;-1:-1:-1;8208:10:6;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;14:332:43:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;199:117;335:5;14:332;-1:-1:-1;;;14:332:43:o;543:154::-;629:42;622:5;618:54;611:5;608:65;598:93;;687:1;684;677:12;598:93;543:154;:::o;702:1005::-;808:6;816;824;832;840;848;901:3;889:9;880:7;876:23;872:33;869:53;;;918:1;915;908:12;869:53;957:9;944:23;976:31;1001:5;976:31;:::i;:::-;1026:5;-1:-1:-1;1083:2:43;1068:18;;1055:32;1096:33;1055:32;1096:33;:::i;:::-;1148:7;-1:-1:-1;1202:2:43;1187:18;;1174:32;;-1:-1:-1;1253:2:43;1238:18;;1225:32;;-1:-1:-1;1308:3:43;1293:19;;1280:33;1332:18;1362:14;;;1359:34;;;1389:1;1386;1379:12;1359:34;1427:6;1416:9;1412:22;1402:32;;1472:7;1465:4;1461:2;1457:13;1453:27;1443:55;;1494:1;1491;1484:12;1443:55;1534:2;1521:16;1560:2;1552:6;1549:14;1546:34;;;1576:1;1573;1566:12;1546:34;1621:7;1616:2;1607:6;1603:2;1599:15;1595:24;1592:37;1589:57;;;1642:1;1639;1632:12;1589:57;1673:2;1669;1665:11;1655:21;;1695:6;1685:16;;;;;702:1005;;;;;;;;:::o;1712:184::-;1764:77;1761:1;1754:88;1861:4;1858:1;1851:15;1885:4;1882:1;1875:15;1901:253;1973:2;1967:9;2015:4;2003:17;;2050:18;2035:34;;2071:22;;;2032:62;2029:88;;;2097:18;;:::i;:::-;2133:2;2126:22;1901:253;:::o;2159:334::-;2230:2;2224:9;2286:2;2276:13;;2291:66;2272:86;2260:99;;2389:18;2374:34;;2410:22;;;2371:62;2368:88;;;2436:18;;:::i;:::-;2472:2;2465:22;2159:334;;-1:-1:-1;2159:334:43:o;2498:245::-;2546:4;2579:18;2571:6;2568:30;2565:56;;;2601:18;;:::i;:::-;-1:-1:-1;2658:2:43;2646:15;2663:66;2642:88;2732:4;2638:99;;2498:245::o;2748:671::-;2816:6;2869:2;2857:9;2848:7;2844:23;2840:32;2837:52;;;2885:1;2882;2875:12;2837:52;2925:9;2912:23;2958:18;2950:6;2947:30;2944:50;;;2990:1;2987;2980:12;2944:50;3013:22;;3066:4;3058:13;;3054:27;-1:-1:-1;3044:55:43;;3095:1;3092;3085:12;3044:55;3131:2;3118:16;3156:48;3172:31;3200:2;3172:31;:::i;:::-;3156:48;:::i;:::-;3227:2;3220:5;3213:17;3267:7;3262:2;3257;3253;3249:11;3245:20;3242:33;3239:53;;;3288:1;3285;3278:12;3239:53;3343:2;3338;3334;3330:11;3325:2;3318:5;3314:14;3301:45;3387:1;3366:14;;;3382:2;3362:23;3355:34;;;;3370:5;2748:671;-1:-1:-1;;;;2748:671:43:o;4589:411::-;4700:6;4753:2;4741:9;4732:7;4728:23;4724:32;4721:52;;;4769:1;4766;4759:12;4721:52;4809:9;4796:23;4842:18;4834:6;4831:30;4828:50;;;4874:1;4871;4864:12;4828:50;4897:22;;4953:2;4935:16;;;4931:25;4928:45;;;4969:1;4966;4959:12;5005:466;5111:6;5119;5172:2;5160:9;5151:7;5147:23;5143:32;5140:52;;;5188:1;5185;5178:12;5140:52;5228:9;5215:23;5261:18;5253:6;5250:30;5247:50;;;5293:1;5290;5283:12;5247:50;5316:22;;5372:3;5354:16;;;5350:26;5347:46;;;5389:1;5386;5379:12;5347:46;5412:2;5461;5446:18;;;;5433:32;;-1:-1:-1;;;5005:466:43:o;5731:250::-;5816:1;5826:113;5840:6;5837:1;5834:13;5826:113;;;5916:11;;;5910:18;5897:11;;;5890:39;5862:2;5855:10;5826:113;;;-1:-1:-1;;5973:1:43;5955:16;;5948:27;5731:250::o;5986:329::-;6027:3;6065:5;6059:12;6092:6;6087:3;6080:19;6108:76;6177:6;6170:4;6165:3;6161:14;6154:4;6147:5;6143:16;6108:76;:::i;:::-;6229:2;6217:15;6234:66;6213:88;6204:98;;;;6304:4;6200:109;;5986:329;-1:-1:-1;;5986:329:43:o;6320:664::-;6570:4;6599:42;6680:2;6672:6;6668:15;6657:9;6650:34;6720:6;6715:2;6704:9;6700:18;6693:34;6775:2;6767:6;6763:15;6758:2;6747:9;6743:18;6736:43;6815:6;6810:2;6799:9;6795:18;6788:34;6871:2;6863:6;6859:15;6853:3;6842:9;6838:19;6831:44;;6912:3;6906;6895:9;6891:19;6884:32;6933:45;6973:3;6962:9;6958:19;6950:6;6933:45;:::i;:::-;6925:53;6320:664;-1:-1:-1;;;;;;;;6320:664:43:o;6989:184::-;7059:6;7112:2;7100:9;7091:7;7087:23;7083:32;7080:52;;;7128:1;7125;7118:12;7080:52;-1:-1:-1;7151:16:43;;6989:184;-1:-1:-1;6989:184:43:o;7593:441::-;7646:5;7699:3;7692:4;7684:6;7680:17;7676:27;7666:55;;7717:1;7714;7707:12;7666:55;7746:6;7740:13;7777:48;7793:31;7821:2;7793:31;:::i;7777:48::-;7850:2;7841:7;7834:19;7896:3;7889:4;7884:2;7876:6;7872:15;7868:26;7865:35;7862:55;;;7913:1;7910;7903:12;7862:55;7926:77;8000:2;7993:4;7984:7;7980:18;7973:4;7965:6;7961:17;7926:77;:::i;8039:709::-;8104:5;8157:3;8150:4;8142:6;8138:17;8134:27;8124:55;;8175:1;8172;8165:12;8124:55;8204:6;8198:13;8230:4;8253:18;8249:2;8246:26;8243:52;;;8275:18;;:::i;:::-;8321:2;8318:1;8314:10;8344:28;8368:2;8364;8360:11;8344:28;:::i;:::-;8406:15;;;8476;;;8472:24;;;8437:12;;;;8508:15;;;8505:35;;;8536:1;8533;8526:12;8505:35;8572:2;8564:6;8560:15;8549:26;;8584:135;8600:6;8595:3;8592:15;8584:135;;;8666:10;;8654:23;;8617:12;;;;8697;;;;8584:135;;8753:1507;8873:6;8926:2;8914:9;8905:7;8901:23;8897:32;8894:52;;;8942:1;8939;8932:12;8894:52;8975:9;8969:16;9004:18;9045:2;9037:6;9034:14;9031:34;;;9061:1;9058;9051:12;9031:34;9084:22;;;;9140:4;9122:16;;;9118:27;9115:47;;;9158:1;9155;9148:12;9115:47;9184:22;;:::i;:::-;9236:2;9230:9;9248:33;9273:7;9248:33;:::i;:::-;9290:22;;9351:2;9343:11;;9337:18;9367:16;;;9364:36;;;9396:1;9393;9386:12;9364:36;9419:17;;9470:4;9452:16;;;9448:27;9445:47;;;9488:1;9485;9478:12;9445:47;9516:22;;:::i;:::-;9568:2;9562:9;9580:33;9605:7;9580:33;:::i;:::-;9622:24;;9685:2;9677:11;;9671:18;9701:16;;;9698:36;;;9730:1;9727;9720:12;9698:36;9768:55;9815:7;9804:8;9800:2;9796:17;9768:55;:::i;:::-;9763:2;9754:7;9750:16;9743:81;;9863:2;9859;9855:11;9849:18;9892:2;9882:8;9879:16;9876:36;;;9908:1;9905;9898:12;9876:36;9946:67;10005:7;9994:8;9990:2;9986:17;9946:67;:::i;:::-;9941:2;9932:7;9928:16;9921:93;;10046:7;10041:2;10034:5;10030:14;10023:31;;;10093:2;10089;10085:11;10079:18;10122:2;10112:8;10109:16;10106:36;;;10138:1;10135;10128:12;10106:36;10174:55;10221:7;10210:8;10206:2;10202:17;10174:55;:::i;:::-;10169:2;10158:14;;10151:79;-1:-1:-1;10162:5:43;8753:1507;-1:-1:-1;;;;;8753:1507:43:o;10265:435::-;10318:3;10356:5;10350:12;10383:6;10378:3;10371:19;10409:4;10438:2;10433:3;10429:12;10422:19;;10475:2;10468:5;10464:14;10496:1;10506:169;10520:6;10517:1;10514:13;10506:169;;;10581:13;;10569:26;;10615:12;;;;10650:15;;;;10542:1;10535:9;10506:169;;;-1:-1:-1;10691:3:43;;10265:435;-1:-1:-1;;;;;10265:435:43:o;10705:1276::-;10925:4;10954:42;11035:2;11027:6;11023:15;11012:9;11005:34;11075:2;11070;11059:9;11055:18;11048:30;11133:2;11124:6;11118:13;11114:22;11109:2;11098:9;11094:18;11087:50;11184:2;11176:6;11172:15;11166:22;11226:4;11219;11208:9;11204:20;11197:34;11293:2;11278:12;11272:19;11268:28;11262:3;11251:9;11247:19;11240:57;11352:2;11338:12;11334:21;11328:28;11306:50;;11393:4;11387:3;11376:9;11372:19;11365:33;11421:53;11469:3;11458:9;11454:19;11438:14;11421:53;:::i;:::-;11407:67;;11529:2;11515:12;11511:21;11505:28;11483:50;;11598:66;11586:9;11578:6;11574:22;11570:95;11564:3;11553:9;11549:19;11542:124;11686:52;11731:6;11715:14;11686:52;:::i;:::-;11675:63;;;11787:2;11779:6;11775:15;11769:22;11853:66;11841:9;11836:3;11832:19;11828:92;11822:3;11811:9;11807:19;11800:121;11938:37;11971:3;11955:14;11938:37;:::i;11986:184::-;12038:77;12035:1;12028:88;12135:4;12132:1;12125:15;12159:4;12156:1;12149:15;12175:625;12478:2;12467:9;12460:21;12441:4;12504:44;12544:2;12533:9;12529:18;12521:6;12504:44;:::i;:::-;12596:9;12588:6;12584:22;12579:2;12568:9;12564:18;12557:50;12630:44;12667:6;12659;12630:44;:::i;:::-;12616:58;;12722:9;12714:6;12710:22;12705:2;12694:9;12690:18;12683:50;12750:44;12787:6;12779;12750:44;:::i;12805:570::-;12944:6;12952;12960;13013:2;13001:9;12992:7;12988:23;12984:32;12981:52;;;13029:1;13026;13019:12;12981:52;13061:9;13055:16;13080:31;13105:5;13080:31;:::i;:::-;13180:2;13165:18;;13159:25;13130:5;;-1:-1:-1;13193:33:43;13159:25;13193:33;:::i;:::-;13297:2;13282:18;;13276:25;13245:7;;-1:-1:-1;13310:33:43;13276:25;13310:33;:::i;:::-;13362:7;13352:17;;;12805:570;;;;;:::o;13579:639::-;13707:4;13713:6;13773:11;13760:25;13863:66;13852:8;13836:14;13832:29;13828:102;13808:18;13804:127;13794:155;;13945:1;13942;13935:12;13794:155;13972:33;;14024:20;;;-1:-1:-1;14067:18:43;14056:30;;14053:50;;;14099:1;14096;14089:12;14053:50;14132:4;14120:17;;-1:-1:-1;14183:1:43;14179:14;;;14163;14159:35;14149:46;;14146:66;;;14208:1;14205;14198:12;14223:391;14324:4;14382:11;14369:25;14472:66;14461:8;14445:14;14441:29;14437:102;14417:18;14413:127;14403:155;;14554:1;14551;14544:12;14403:155;14575:33;;;;;14223:391;-1:-1:-1;;14223:391:43:o;14619:381::-;14710:4;14768:11;14755:25;14858:66;14847:8;14831:14;14827:29;14823:102;14803:18;14799:127;14789:155;;14940:1;14937;14930:12;15005:629;15120:4;15126:6;15186:11;15173:25;15276:66;15265:8;15249:14;15245:29;15241:102;15221:18;15217:127;15207:155;;15358:1;15355;15348:12;15207:155;15385:33;;15437:20;;;-1:-1:-1;15480:18:43;15469:30;;15466:50;;;15512:1;15509;15502:12;15466:50;15545:4;15533:17;;-1:-1:-1;15604:4:43;15592:17;;15576:14;15572:38;15562:49;;15559:69;;;15624:1;15621;15614:12;15639:247;15698:6;15751:2;15739:9;15730:7;15726:23;15722:32;15719:52;;;15767:1;15764;15757:12;15719:52;15806:9;15793:23;15825:31;15850:5;15825:31;:::i;15891:1268::-;16266:4;16314:3;16303:9;16299:19;16357:42;16349:6;16345:55;16334:9;16327:74;16420:2;16458:6;16453:2;16442:9;16438:18;16431:34;16501:6;16496:2;16485:9;16481:18;16474:34;16544:3;16539:2;16528:9;16524:18;16517:31;16568:6;16603;16597:13;16634:6;16626;16619:22;16672:3;16661:9;16657:19;16650:26;;16735:3;16725:6;16722:1;16718:14;16707:9;16703:30;16699:40;16685:54;;16774:2;16766:6;16762:15;16795:1;16805:325;16819:6;16816:1;16813:13;16805:325;;;16908:66;16896:9;16888:6;16884:22;16880:95;16875:3;16868:108;16999:51;17043:6;17034;17028:13;16999:51;:::i;:::-;16989:61;-1:-1:-1;17108:12:43;;;;17073:15;;;;16841:1;16834:9;16805:325;;;-1:-1:-1;17147:6:43;;15891:1268;-1:-1:-1;;;;;;;;;;15891:1268:43:o;17164:614::-;17293:6;17301;17354:2;17342:9;17333:7;17329:23;17325:32;17322:52;;;17370:1;17367;17360:12;17322:52;17403:9;17397:16;17432:18;17473:2;17465:6;17462:14;17459:34;;;17489:1;17486;17479:12;17459:34;17512:72;17576:7;17567:6;17556:9;17552:22;17512:72;:::i;:::-;17502:82;;17630:2;17619:9;17615:18;17609:25;17593:41;;17659:2;17649:8;17646:16;17643:36;;;17675:1;17672;17665:12;17643:36;;17698:74;17764:7;17753:8;17742:9;17738:24;17698:74;:::i;:::-;17688:84;;;17164:614;;;;;:::o;17783:367::-;18025:6;18014:9;18007:25;18068:2;18063;18052:9;18048:18;18041:30;17988:4;18088:56;18140:2;18129:9;18125:18;18117:6;18088:56;:::i;18155:603::-;18249:5;18256:6;18316:3;18303:17;18398:66;18387:8;18371:14;18367:29;18363:102;18343:18;18339:127;18329:155;;18480:1;18477;18470:12;18329:155;18508:33;;18612:4;18599:18;;;-1:-1:-1;18560:21:43;;-1:-1:-1;18640:18:43;18629:30;;18626:50;;;18672:1;18669;18662:12;18626:50;18726:6;18723:1;18719:14;18703;18699:35;18692:5;18688:47;18685:67;;;18748:1;18745;18738:12;18763:118;18849:5;18842:13;18835:21;18828:5;18825:32;18815:60;;18871:1;18868;18861:12;18886:593;18967:5;18974:6;19034:3;19021:17;19116:66;19105:8;19089:14;19085:29;19081:102;19061:18;19057:127;19047:155;;19198:1;19195;19188:12;19047:155;19226:33;;19330:4;19317:18;;;-1:-1:-1;19278:21:43;;-1:-1:-1;19358:18:43;19347:30;;19344:50;;;19390:1;19387;19380:12;19344:50;19449:4;19441:6;19437:17;19421:14;19417:38;19410:5;19406:50;19403:70;;;19469:1;19466;19459:12;19484:892;19595:6;19590:3;19583:19;19565:3;19621:4;19650:2;19645:3;19641:12;19634:19;;19676:5;19699:1;19720;19730:621;19746:6;19741:3;19738:15;19730:621;;;19827:6;19814:20;19847:33;19872:7;19847:33;:::i;:::-;19918:42;19905:56;19893:69;;20003:15;;;19990:29;20055:4;20042:18;;20083:15;;;20073:43;;20112:1;20109;20102:12;20073:43;20136:12;;;20129:24;-1:-1:-1;20176:4:43;20227:15;;;20214:29;20200:12;;;20193:51;20267:4;20291:12;;;;20326:15;;;;19772:1;19763:11;19730:621;;;-1:-1:-1;20367:3:43;;19484:892;-1:-1:-1;;;;;;19484:892:43:o;20381:559::-;20439:5;20446:6;20506:3;20493:17;20588:66;20577:8;20561:14;20557:29;20553:102;20533:18;20529:127;20519:155;;20670:1;20667;20660:12;20519:155;20698:33;;20802:4;20789:18;;;-1:-1:-1;20750:21:43;;-1:-1:-1;20830:18:43;20819:30;;20816:50;;;20862:1;20859;20852:12;20816:50;20909:6;20893:14;20889:27;20882:5;20878:39;20875:59;;;20930:1;20927;20920:12;20945:325;21033:6;21028:3;21021:19;21085:6;21078:5;21071:4;21066:3;21062:14;21049:43;;21137:1;21130:4;21121:6;21116:3;21112:16;21108:27;21101:38;21003:3;21259:4;21189:66;21184:2;21176:6;21172:15;21168:88;21163:3;21159:98;21155:109;21148:116;;20945:325;;;;:::o;21275:1872::-;21399:6;21394:3;21387:19;21369:3;21425:4;21466:2;21461:3;21457:12;21491:11;21518;21511:18;;21548:1;21538:11;;21589:6;21585:2;21581:15;21574:5;21570:27;21620:5;21643:1;21653:1468;21667:6;21664:1;21661:13;21653:1468;;;21738:5;21732:4;21728:16;21723:3;21716:29;21797:6;21784:20;21883:66;21875:5;21859:14;21855:26;21851:99;21831:18;21827:124;21817:152;;21965:1;21962;21955:12;21817:152;21997:30;;22050:4;22082:21;;22116:33;22082:21;22116:33;:::i;:::-;22188:42;22175:56;22162:70;;22279:93;22355:16;;;22359:7;22279:93;:::i;:::-;22407:2;22402;22396:4;22392:13;22385:25;22445:12;22440:2;22434:4;22430:13;22423:35;22481:3;22471:13;;22517:66;22503:12;22500:84;22497:104;;;22597:1;22594;22587:12;22497:104;22630:21;;;22692:12;22677:13;;;22664:51;22738:19;;;-1:-1:-1;22780:4:43;22835:57;22875:16;;;22879:7;22835:57;:::i;:::-;22797:95;;22946:2;22939:4;22935:2;22931:13;22927:22;22922:2;22916:4;22912:13;22905:45;22971:70;23037:2;23033;23029:11;23013:14;22997;22971:70;:::i;:::-;23099:12;;;;22963:78;-1:-1:-1;;;23064:15:43;;;;-1:-1:-1;;;21689:1:43;21682:9;21653:1468;;;-1:-1:-1;23137:4:43;;21275:1872;-1:-1:-1;;;;;;;;21275:1872:43:o;23152:4130::-;23318:4;23347:2;23376;23365:9;23358:21;23417:3;23406:9;23402:19;23470:6;23457:20;23452:2;23441:9;23437:18;23430:48;23497:2;23560;23552:6;23548:15;23535:29;23530:2;23519:9;23515:18;23508:57;23584:2;23647;23639:6;23635:15;23622:29;23617:2;23606:9;23602:18;23595:57;23695:91;23782:2;23774:6;23770:15;23762:6;23695:91;:::i;:::-;23805:4;23828:3;23847:18;;;23840:30;;;23905:28;;;;23952:3;;23971:18;;;24035:1;24031:20;;;24016:36;;24012:45;;24080:12;24110:1;24120:2840;24134:12;24131:1;24128:19;24120:2840;;;24229:66;24217:9;24209:6;24205:22;24201:95;24196:3;24189:108;24349:6;24336:20;24442:66;24427:12;24411:14;24407:33;24403:106;24383:18;24379:131;24369:159;;24524:1;24521;24514:12;24369:159;24554:37;;24632:19;;24708:14;24704:26;;;24732:66;24700:99;24674:126;;24664:154;;24814:1;24811;24804:12;24664:154;24891:18;;;24846:32;;24937:21;;24971:33;24937:21;24971:33;:::i;:::-;25027:42;25106:16;;;25089:15;;;25082:41;25164:16;;;25151:30;;25194;25151;25194;:::i;:::-;25268:15;;25261:23;25244:15;;;25237:48;25326:16;;;25313:30;;25356:33;25313:30;25356:33;:::i;:::-;25427:16;;;25421:3;25409:16;;25402:42;25485:16;;;25472:30;;25515:33;25472:30;25515:33;:::i;:::-;25585:16;;;25568:15;;;25561:41;25643:16;;;25630:30;;25673:33;25630:30;25673:33;:::i;:::-;25744:16;25738:3;25726:16;;25719:42;25812:80;25875:16;;;25879:7;25812:80;:::i;:::-;25930:2;25924:3;25916:6;25912:16;25905:28;25960:98;26053:3;26045:6;26041:16;26025:14;26009;25960:98;:::i;:::-;25946:112;;;26109:81;26185:3;26176:7;26172:17;26163:7;26109:81;:::i;:::-;26071:119;;26253:66;26244:6;26236;26232:19;26228:92;26222:3;26214:6;26210:16;26203:118;26345:88;26426:6;26410:14;26394;26345:88;:::i;:::-;26334:99;;;;26494:2;26487:5;26483:14;26470:28;26465:2;26457:6;26453:15;26446:53;26560:2;26553:5;26549:14;26536:28;26531:2;26523:6;26519:15;26512:53;26616:89;26701:2;26694:5;26690:14;26683:5;26616:89;:::i;:::-;26578:127;;26751:6;26746:3;26742:16;26737:2;26729:6;26725:15;26718:41;26782:98;26876:3;26860:14;26844;26782:98;:::i;:::-;26938:12;;;;26772:108;-1:-1:-1;;;26903:15:43;;;;-1:-1:-1;24162:1:43;24155:9;24120:2840;;;24124:3;;27007:55;27058:2;27050:6;27046:15;27038:6;27007:55;:::i;:::-;26969:93;;;;27126:66;27114:9;27106:6;27102:22;27098:95;27093:2;27082:9;27078:18;27071:123;27211:65;27269:6;27253:14;27237;27211:65;:::i;:::-;27203:73;23152:4130;-1:-1:-1;;;;;;;;;;;;;23152:4130:43:o;27287:245::-;27366:6;27374;27427:2;27415:9;27406:7;27402:23;27398:32;27395:52;;;27443:1;27440;27433:12;27395:52;-1:-1:-1;;27466:16:43;;27522:2;27507:18;;;27501:25;27466:16;;27501:25;;-1:-1:-1;27287:245:43:o;29438:259::-;29516:6;29569:2;29557:9;29548:7;29544:23;29540:32;29537:52;;;29585:1;29582;29575:12;29537:52;29617:9;29611:16;29636:31;29661:5;29636:31;:::i;30879:245::-;30946:6;30999:2;30987:9;30978:7;30974:23;30970:32;30967:52;;;31015:1;31012;31005:12;30967:52;31047:9;31041:16;31066:28;31088:5;31066:28;:::i;31540:184::-;31592:77;31589:1;31582:88;31689:4;31686:1;31679:15;31713:4;31710:1;31703:15;31729:288;31904:6;31893:9;31886:25;31947:2;31942;31931:9;31927:18;31920:30;31867:4;31967:44;32007:2;31996:9;31992:18;31984:6;31967:44;:::i;32022:287::-;32151:3;32189:6;32183:13;32205:66;32264:6;32259:3;32252:4;32244:6;32240:17;32205:66;:::i;33671:219::-;33820:2;33809:9;33802:21;33783:4;33840:44;33880:2;33869:9;33865:18;33857:6;33840:44;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "arb((uint256,uint256,uint256,((address,bool,(address,address,address),(address,uint8,uint256)[],(address,uint8,uint256)[]),uint256,uint256,(address,uint256[],bytes)[])[],bytes),uint256)": "c3b7c7c3",
    "initialize((address,(address,bytes,uint256[]),bytes))": "98da8d6a",
    "initialize(bytes)": "439fab91",
    "onTakeOrders(address,address,uint256,uint256,bytes)": "059bebe6",
    "sI9r()": "71c1dea7",
    "sI9rDispatch()": "89448c3a",
    "sI9rStore()": "61bb39e4",
    "sOrderBook()": "886d1650",
    "sRouteProcessor3()": "d423a052",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"meta\",\"type\":\"bytes\"}],\"internalType\":\"struct DeployerDiscoverableMetaV2ConstructionConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"badLender\",\"type\":\"address\"}],\"name\":\"BadLender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InitializeSignatureFn\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Initializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minimum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"MinimumOutput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoOrders\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonZeroBeforeArbStack\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"unmeta\",\"type\":\"bytes\"}],\"name\":\"NotRainMetaV1\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expectedHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actualHash\",\"type\":\"bytes32\"}],\"name\":\"UnexpectedMetaHash\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"orderBook\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IExpressionDeployerV2\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"constants\",\"type\":\"uint256[]\"}],\"internalType\":\"struct EvaluableConfigV2\",\"name\":\"evaluableConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"implementationData\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct OrderBookV3ArbOrderTakerConfigV1\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"subject\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"meta\",\"type\":\"bytes\"}],\"name\":\"MetaV1\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minimumInput\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumInput\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumIORatio\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"handleIO\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"contract IInterpreterV1\",\"name\":\"interpreter\",\"type\":\"address\"},{\"internalType\":\"contract IInterpreterStoreV1\",\"name\":\"store\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expression\",\"type\":\"address\"}],\"internalType\":\"struct Evaluable\",\"name\":\"evaluable\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"internalType\":\"struct IO[]\",\"name\":\"validInputs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"internalType\":\"struct IO[]\",\"name\":\"validOutputs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"inputIOIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputIOIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"context\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedContextV1[]\",\"name\":\"signedContext\",\"type\":\"tuple[]\"}],\"internalType\":\"struct TakeOrderConfig[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct TakeOrdersConfigV2\",\"name\":\"takeOrders\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"minimumSenderOutput\",\"type\":\"uint256\"}],\"name\":\"arb\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"orderBook\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IExpressionDeployerV2\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"constants\",\"type\":\"uint256[]\"}],\"internalType\":\"struct EvaluableConfigV2\",\"name\":\"evaluableConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"implementationData\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderBookV3ArbOrderTakerConfigV1\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmountSent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"takeOrdersData\",\"type\":\"bytes\"}],\"name\":\"onTakeOrders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sI9r\",\"outputs\":[{\"internalType\":\"contract IInterpreterV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sI9rDispatch\",\"outputs\":[{\"internalType\":\"EncodedDispatch\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sI9rStore\",\"outputs\":[{\"internalType\":\"contract IInterpreterStoreV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sOrderBook\",\"outputs\":[{\"internalType\":\"contract IOrderBookV3\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sRouteProcessor3\",\"outputs\":[{\"internalType\":\"contract IRouteProcessor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"BadLender(address)\":[{\"params\":{\"badLender\":\"The untrusted lender calling `onFlashLoan`.\"}}],\"MinimumOutput(uint256,uint256)\":[{\"params\":{\"actual\":\"The actual output that would be received by the sender.\",\"minimum\":\"The minimum output expected by the sender.\"}}],\"NotRainMetaV1(bytes)\":[{\"params\":{\"unmeta\":\"the bytes that are not meta.\"}}],\"UnexpectedMetaHash(bytes32,bytes32)\":[{\"params\":{\"actualHash\":\"The hash of the metadata seen by the `IMetaV1` contract.\",\"expectedHash\":\"The hash expected by the `IMetaV1` contract.\"}}]},\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MetaV1(address,uint256,bytes)\":{\"params\":{\"meta\":\"Rain metadata V1 compliant metadata bytes. https://github.com/rainprotocol/specs/blob/main/metadata-v1.md\",\"sender\":\"The msg.sender.\",\"subject\":\"The entity that the metadata is about. MAY be the address of the emitting contract (as `uint256`) OR anything else. The interpretation of the subject is context specific, so will often be a hash of some data/thing that this metadata is about.\"}}},\"kind\":\"dev\",\"methods\":{\"initialize(bytes)\":{\"details\":\"The `ICloneableV2` interface is identical to `ICloneableV1` except that it returns a `bytes32` success hash.\",\"params\":{\"data\":\"The initialization data.\"},\"returns\":{\"_0\":\"keccak256(\\\"ICloneableV2.initialize\\\") if successful.\"}},\"onTakeOrders(address,address,uint256,uint256,bytes)\":{\"params\":{\"inputAmountSent\":\"The amount of `inputToken` that was sent to `IOrderBookV3OrderTaker`.\",\"inputToken\":\"The token that was sent to `IOrderBookV3OrderTaker`.\",\"outputToken\":\"The token that `IOrderBookV3` will attempt to pull from `IOrderBookV3OrderTaker` after this callback returns.\",\"takeOrdersData\":\"The data passed to `takeOrders` by the caller.\",\"totalOutputAmount\":\"The total amount of `outputToken` that `IOrderBookV3` will attempt to pull from `IOrderBookV3OrderTaker` after this callback returns.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"BadLender(address)\":[{\"notice\":\"Thrown when the lender is not the trusted `OrderBook`.\"}],\"InitializeSignatureFn()\":[{\"notice\":\"Overloaded initialize function MUST revert with this error.\"}],\"Initializing()\":[{\"notice\":\"Thrown when calling functions while the contract is still initializing.\"}],\"InvalidSignature(uint256)\":[{\"notice\":\"Thrown when the ith signature from a list of signed contexts is invalid.\"}],\"MinimumOutput(uint256,uint256)\":[{\"notice\":\"Thrown when the minimum output for the sender is not met after the arb.\"}],\"NoOrders()\":[{\"notice\":\"Thrown when take orders is called with no orders.\"}],\"NonZeroBeforeArbStack()\":[{\"notice\":\"Thrown when the stack is not empty after the access control dispatch.\"}],\"NotRainMetaV1(bytes)\":[{\"notice\":\"Thrown when some bytes are expected to be rain meta and are not.\"}],\"UnexpectedMetaHash(bytes32,bytes32)\":[{\"notice\":\"Thrown when hashed metadata does NOT match the expected hash.\"}]},\"events\":{\"MetaV1(address,uint256,bytes)\":{\"notice\":\"An onchain wrapper to carry arbitrary Rain metadata. Assigns the sender to the metadata so that tooling can easily drop/ignore data from unknown sources. As metadata is about something, the subject MUST be provided.\"}},\"kind\":\"user\",\"methods\":{\"initialize(bytes)\":{\"notice\":\"Initialize is intended to work like constructors but for cloneable proxies. The `ICloneableV2` contract MUST ensure that initialize can NOT be called more than once. The `ICloneableV2` contract is designed to be deployed by an `ICloneableFactoryV2` but MUST NOT assume that it will be. It is possible for someone to directly deploy an `ICloneableV2` and fail to call initialize before other functions are called, and end users MAY NOT realise or know how to confirm a safe deployment state. The `ICloneableV2` MUST take appropriate measures to ensure that functions called before initialize are safe to do so, or revert. To be fully generic, `initilize` accepts `bytes` and so MUST ABI decode within the initialize function. This allows a single factory to service arbitrary cloneable proxies but also erases the type of the initialization config from the ABI. As tooling will inevitably require the ABI to be known, it is RECOMMENDED that the `ICloneableV2` contract implements a typed `initialize` function that overloads the generic `initialize(bytes)` function. This overloaded function MUST revert with `InitializeSignatureFn` always, so that it is NEVER accidentally called. This avoids complex and expensive delegate call style patterns where a typed overload has to call back to itself and preserve the sender, instead we force the caller to know the correct signature and call the correct function directly with encoded bytes. If initialization is successful the `ICloneableV2` MUST return the keccak256 hash of the string \\\"ICloneableV2.initialize\\\". This avoids false positives where a contract building a proxy, such as an `ICloneableFactoryV2`, may incorrectly believe that the clone has been initialized but the implementation doesn't support `ICloneableV2`.\"},\"onTakeOrders(address,address,uint256,uint256,bytes)\":{\"notice\":\"Called by `OrderBookV3` when `takeOrders` is called with non-zero data, if it caused a non-zero input amount. I.e. if the order(s) taker received some tokens. Input and output directions are relative to the `IOrderBookV3OrderTaker` contract. If the order(s) taker had an active debt from a flash loan then that debt will be paid _before_ calculating any input amounts sent. i.e. the debt is deducted from the input amount before this callback is called.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/concrete/RouteProcessor3OrderBookV3ArbOrderTaker.sol\":\"RouteProcessor3OrderBookV3ArbOrderTaker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@prb/test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/\",\":axelar-gmp-sdk-solidity/=lib/sushixswap-v2/lib/axelar-gmp-sdk-solidity/\",\":bytecode/=lib/rain.interpreter/src/lib/bytecode/\",\":caller/=lib/rain.interpreter/src/lib/caller/\",\":compile/=lib/rain.interpreter/src/lib/compile/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eval/=lib/rain.interpreter/src/lib/eval/\",\":extern/=lib/rain.interpreter/src/lib/extern/\",\":forge-gas-snapshot/=lib/sushixswap-v2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":integrity/=lib/rain.interpreter/src/lib/integrity/\",\":ns/=lib/rain.interpreter/src/lib/ns/\",\":op/=lib/rain.interpreter/src/lib/op/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":parse/=lib/rain.interpreter/src/lib/parse/\",\":prb-math/=lib/rain.interpreter/lib/prb-math/src/\",\":prb-test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/\",\":rain.chainlink/=lib/rain.interpreter/lib/rain.chainlink/src/\",\":rain.datacontract/=lib/rain.datacontract/src/\",\":rain.erc1820/=lib/rain.erc1820/src/\",\":rain.extrospection/=lib/rain.factory/lib/rain.extrospection/\",\":rain.factory/=lib/rain.factory/\",\":rain.interpreter/=lib/rain.interpreter/\",\":rain.lib.hash/=lib/rain.lib.memkv/lib/rain.lib.hash/src/\",\":rain.lib.memkv/=lib/rain.lib.memkv/src/\",\":rain.lib.typecast/=lib/rain.interpreter/lib/rain.lib.typecast/src/\",\":rain.math.fixedpoint/=lib/rain.interpreter/lib/rain.math.fixedpoint/src/\",\":rain.math.saturating/=lib/rain.interpreter/lib/rain.math.fixedpoint/lib/rain.math.saturating/src/\",\":rain.metadata/=lib/rain.metadata/src/\",\":rain.solmem/=lib/rain.datacontract/lib/rain.solmem/src/\",\":sol.lib.binmaskflag/=lib/rain.interpreter/lib/sol.lib.binmaskflag/src/\",\":state/=lib/rain.interpreter/src/lib/state/\",\":sushixswap-v2/=lib/sushixswap-v2/\",\":uniswap/=lib/rain.interpreter/src/lib/uniswap/\",\":v2-core/=lib/rain.interpreter/lib/v2-core/contracts/\",\":v2-periphery/=lib/v2-periphery/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d\",\"dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/rain.datacontract/lib/rain.solmem/src/lib/LibBytes.sol\":{\"keccak256\":\"0xcdc485d90d6d8a89a842b64c83efd15266c5c80916535736aa8a05497bcf5625\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a45d0edb1d404207ad328d7a4eb16ee52d68db8dbb44796caa521a4765dfe353\",\"dweb:/ipfs/QmVT8vbFLMmD1sg1sEz21mTrDRE58yFNsmKDPnZ3LX8yYk\"]},\"lib/rain.datacontract/lib/rain.solmem/src/lib/LibMemCpy.sol\":{\"keccak256\":\"0x6a2df10cc8f19bf99711c06ddf744080d922104b2f8aab4093ca1df8849a8406\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://58cdb4a850867b5ae325c28cd588a98e9c0b313fb7b70974fcb9ad357f552102\",\"dweb:/ipfs/QmYvf96iHnS81aqt9sEcdvqpq6ghsk2fa8RVNBc6pttQJe\"]},\"lib/rain.datacontract/lib/rain.solmem/src/lib/LibPointer.sol\":{\"keccak256\":\"0xcd833cbf588ec10836cdfbddd426fc14dfa145ed2e63054f6bbd06e296e698f7\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://9ce0af4045e276c5e4c352c1c435f4ecea7552192b1d99e33732c1067bea0ad7\",\"dweb:/ipfs/Qmc5NCFTwgg2AemUz9K1fPei51ivge3eUrWP8k56kF8ADG\"]},\"lib/rain.datacontract/lib/rain.solmem/src/lib/LibUint256Array.sol\":{\"keccak256\":\"0x120ff38e1ce110465281d3d27d63c7c8d7ecbeba65aeacbffa7bec393501cbde\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://0acaffcfb7a060e2cc60940768ac2c8c25c142834336de35984d1c53eba6f7b6\",\"dweb:/ipfs/QmcFAtiTDm43ZQTqAmpJUYuCbbTg6U6ytziB37qWU5h7sL\"]},\"lib/rain.factory/src/interface/ICloneableV2.sol\":{\"keccak256\":\"0xbc1ceff073c177b6a0765abc20e897074b45cf620e6196a1d1c52f935d217a80\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://fd2bbdded11b1d41ee37c03e617b17d12dbdd8a2afebc17a91f463db296cb234\",\"dweb:/ipfs/QmWTtnexF9X6G12nEWPcmcsDVTuaYHmWKwUgJTvcak8pYP\"]},\"lib/rain.interpreter/src/abstract/DeployerDiscoverableMetaV2.sol\":{\"keccak256\":\"0x3a74582510521381a9bd2732847be9170fd58fc5baf257917854f35823cd94db\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://233812d35b959b522281af216123f7cc3c900342273e337cc9ba4418f655a78a\",\"dweb:/ipfs/QmZjZtdUbBzA55VSSKASr3fnmK1CZ36SY8LoyAYsFZ8gwA\"]},\"lib/rain.interpreter/src/interface/IExpressionDeployerV1.sol\":{\"keccak256\":\"0x42d4d91cc62778967ca5f1bb2e7b2c97ca2de2c49518bc8a08a0b50275074ab6\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://6f461a0c0f65a514799200a64bc0e9d926abe4e0bba0c4e2ca0e3d6a04677768\",\"dweb:/ipfs/QmeUggk58ypM3721672wdupquFM8W9VnY3qpn8swKoeLhA\"]},\"lib/rain.interpreter/src/interface/IInterpreterCallerV2.sol\":{\"keccak256\":\"0xdbcd86209f48d96355da6e3f1c7f09530667f62544aa43b7058fe99063a20b6e\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://b3803c98391a7db85b12c2ad9858abcda0022d0c004aabdad5ea736959a8ac0f\",\"dweb:/ipfs/QmbL5b4Rz1H4ZPVQzLET8UrQqXiUBnbwCkdUE6jHqPcapN\"]},\"lib/rain.interpreter/src/interface/IInterpreterStoreV1.sol\":{\"keccak256\":\"0xbd9baa8cd30406576f876a76f1c08396561ba93131741af338f63e2414e20619\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://30bb6f09d8b8f27f77e6c44591c4f2070286a91dad202043cf2351ae802e3df5\",\"dweb:/ipfs/QmRz5pfzf5w84iNmKaYYbqP8oQywzc5xbd3xzKmxgFyf9y\"]},\"lib/rain.interpreter/src/interface/IInterpreterV1.sol\":{\"keccak256\":\"0xebde08ca2e1c25fc733e0bb8867598715f8ba79772f86db1c8960ad7d68a5293\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://b93fb28a09aeea4afe7f0d4afc67354c0fa538e5a9b274b0c5f10ed1dd6b6b00\",\"dweb:/ipfs/QmatNhoHRSJ1ZvoCNo61YMt9jb1vvEkWy3mkcoPkB4FFA9\"]},\"lib/rain.interpreter/src/interface/unstable/IExpressionDeployerV2.sol\":{\"keccak256\":\"0x7bbcf9d3689bdecdc58537e5185f0b88e8d4e91a295f5124f19779609f19f219\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://ccdcba71f76f2a730685f956f1854355751a3c9b4caef9569e2a6d8acc8747a5\",\"dweb:/ipfs/QmQrWgCnxd9aGEHhmFTPkA8E3GVsKuwDhe2UQ5WyfA5LSA\"]},\"lib/rain.interpreter/src/lib/bytecode/LibBytecode.sol\":{\"keccak256\":\"0x2b25061fa0f327fd89856e72a3c274b35cd1ce6a97405f9885cd17008c740461\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://41277875d0ac8adbc5560e967ab2fe6c7a7edc4c4c91d13bffb01044adbe2691\",\"dweb:/ipfs/QmR3Yum5eeZ2i9yyzjpfF2o9m5pemv77KPrM2jSBX7LoRB\"]},\"lib/rain.interpreter/src/lib/caller/LibContext.sol\":{\"keccak256\":\"0x155499b7b1624484d2b03b9aecc7d7133c6c69bd17aa278b756c27e2c48af74a\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a2c9276f73ba44f1978b06847a23eed697b62f72eaa02e5e5711c30ea8097c05\",\"dweb:/ipfs/QmfKhi9K4Sp45t2dXCz5pms7mkoXARWkYgB661uc8DPrbF\"]},\"lib/rain.interpreter/src/lib/caller/LibDeployerDiscoverable.sol\":{\"keccak256\":\"0x80a4169a009519f7e94ce4416c9f4eb94b0cbf96f8e4c3f4f5ec8d65e59ad085\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://bc915a321a3913fdee0a8eadcc263c6a8d2425c3517da5107d3a4177789199eb\",\"dweb:/ipfs/QmYJAQepVmeHDTZRCAAcEY7J7ANikvH3pnS6eETf5gnVrG\"]},\"lib/rain.interpreter/src/lib/caller/LibEncodedDispatch.sol\":{\"keccak256\":\"0xc3cb89672e0d11a343ba593f3ecbc0a5441d5a0ee7af7cdb4dbe82f32f951034\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://692ff90cbc8804f320ff58ade514348049556bdbc10d485ae2cdc86033ac942f\",\"dweb:/ipfs/QmSina3eADDD1HtVw4tqtbhx8YnczFZUZ5Lwm9Lhscuvr3\"]},\"lib/rain.interpreter/src/lib/caller/LibEvaluable.sol\":{\"keccak256\":\"0x9bd77a3efb7e0762ca214efe30c3c49c3f3efae3b6c759db2c7a0aa52ff3d364\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://6125b3bd94d9966557c068dda143c930d37662da06cd84a4369a673f4ce8b07c\",\"dweb:/ipfs/QmepFEJseAU31gPAa7Hq2H3ZDfRJ3DnK94CBpe73H3v7yP\"]},\"lib/rain.lib.memkv/lib/rain.lib.hash/src/LibHashNoAlloc.sol\":{\"keccak256\":\"0x52c8b6906d61bcc7e70d594cb097f53e361569904e27019ebeed0b4c94d2aed8\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://62999b0afefbe97e1d41c2c57b67a186e5a1618758f8f9cf17776c1d67f27d24\",\"dweb:/ipfs/QmfVsV2CVp91F9dHNWziKvSo54Wgb84k5Ct7Rtxxyptw35\"]},\"lib/rain.metadata/src/IMetaV1.sol\":{\"keccak256\":\"0xd1959040fcc89be7a4dc8c9c193e4e5a78b84b05848b86c54d39c3d717ad1843\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://7d3cba2279a6b8912f783430eef89c4a6482a489632ead7e2a3594d2162fa2b3\",\"dweb:/ipfs/QmfJFn72vcnq4LXpeBs9PWuDRzJSr58uVeDVjWpxjMHFWs\"]},\"lib/rain.metadata/src/LibMeta.sol\":{\"keccak256\":\"0x04665ba6364cc67050b2a245daa780c39039dd51653f7b2029910f242f5dd285\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://4341f3462120c37c832c03c6c9a0d52a100708fad713ced970f09747badd9d6d\",\"dweb:/ipfs/QmUGovuLTuTmCSTvYWc6SehzyoYAzVsAnPBNmE3hmRDAQU\"]},\"lib/sushixswap-v2/src/interfaces/IRouteProcessor.sol\":{\"keccak256\":\"0x5b2289c992f34dd25943db3cbc27ece8b0a1addeb2631f812e7834b7ae3eac37\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f21522058b7fe3c18d2353b06a5ddbf2b62d2aceebf7dd6dfdc51b081452bb3f\",\"dweb:/ipfs/QmVkicGnNWgnX1RfXJWPpQaAPbiAQfFwGWigbPi1wu2WiT\"]},\"src/abstract/OrderBookV3ArbCommon.sol\":{\"keccak256\":\"0xc77c321417500facb7f1a66baaf337f845674f805d56518d00bcbf78de929b4a\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://7244eaac97f18d1676afcb8fc35aeb37b0be8547e4e84a2ccf202089b760f830\",\"dweb:/ipfs/QmWhNnSPAMPL5g7Ey4ZbctVWGuznJVEU4Vj1pXdr4Cb4SB\"]},\"src/abstract/OrderBookV3ArbOrderTaker.sol\":{\"keccak256\":\"0x5dff048f85aa978c402a7cc18a8acfccbf79ba5a88271a1c0dd8be914e98505f\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://3b42b2e7b1cb743386eb823db2851517138586a5d53d21c7d90a169d08103e36\",\"dweb:/ipfs/QmTpVeWaKiPTiodWxMS2jWtQkiVDX5YGJGNWc8ah8tQhc1\"]},\"src/concrete/RouteProcessor3OrderBookV3ArbOrderTaker.sol\":{\"keccak256\":\"0x23eee385be0a3478f0504d75f34d6c7404e2fa43df54ef9bb1cb7920ceaa8b03\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://7260c73e8d7febf48c700a1b834b2d3ba27e6b27a5082ce5880809f9a58bca2e\",\"dweb:/ipfs/Qme3YVxEUpzGx1ohLJEwm8PQ1ktoZC1WLLDRxhG3C2UY3B\"]},\"src/interface/IOrderBookV2.sol\":{\"keccak256\":\"0xebc841ab2c03c057e116f7f7ccaff82be986eca988d26b88cbbf7499430ab9ee\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a0cd8161b171e900007b6a8981559408d079f876d7d668fc4b43fc2be443c112\",\"dweb:/ipfs/QmfKuLfpcorjssSdX4GgZ1CDeJygnnvx586X8zRTBsNZAa\"]},\"src/interface/ierc3156/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x493227b1bc21c04ba2506d8d63f8fab8eb828683cf41336db1076edee2e010a7\",\"license\":\"CC0\",\"urls\":[\"bzz-raw://99b27f1f11576c22462c93ab613835522dfc89a7e28e584df034b339187bc15c\",\"dweb:/ipfs/QmQZ1H8PotScE5rSbruZn97MC6pgDNTuCQcjtg8ZWU4SPB\"]},\"src/interface/ierc3156/IERC3156FlashLender.sol\":{\"keccak256\":\"0x191637dc4503bf6cc0c6c0539bf83a758b124e37abc5da05ae4d446133cf36b5\",\"license\":\"CC0\",\"urls\":[\"bzz-raw://de7dea1fd8bd0dcdae7bdb400d4ccc9e01ecb73e23ef2b2f77704a9741669273\",\"dweb:/ipfs/QmT8BAK76nEJ5kTKkDxDovD4xuAXPACAyxshUA4RX3WLe3\"]},\"src/interface/unstable/IOrderBookV3.sol\":{\"keccak256\":\"0x361d1463885b4fee46b5e9617517c0f8b6221adde78f3c48283e949f924a5629\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://8215827bf1a53ebea2fe55f7bc7a4d9c35aac89ec9537958af00560c4b3e2317\",\"dweb:/ipfs/QmNs9hdheu5wJPC85mWm7kFNWUmZHWx8nFKFCjXZCyLgYR\"]},\"src/interface/unstable/IOrderBookV3ArbOrderTaker.sol\":{\"keccak256\":\"0x0d08968f83de64e0aec3473bf90c5acc5527d0ef0baafc3526d114d8f4a4a59e\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://277dae815203f5ac255eba4792ba0c677927df648d198134ae602fd8e47d9226\",\"dweb:/ipfs/QmVsWYKQShc9DUxjiaVy1jZYup3A7DYvVni4VcreWrmjHK\"]},\"src/interface/unstable/IOrderBookV3OrderTaker.sol\":{\"keccak256\":\"0x256cda8259c6c344e80ea5db35c7899e2c6f337ca040653ebdf7527e2e1d776e\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://5b26e4385457c5c18b0c4cb394d00662364912f082510df6015e0127059c05b9\",\"dweb:/ipfs/QmaQmiW8dDDAcfzRJZVavcZo9QLeFrN44obvRydJouJbL1\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct DeployerDiscoverableMetaV2ConstructionConfig",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "meta",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "badLender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "BadLender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InitializeSignatureFn"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Initializing"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "i",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidSignature"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "minimum",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "actual",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "MinimumOutput"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoOrders"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonZeroBeforeArbStack"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "unmeta",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "NotRainMetaV1"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expectedHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actualHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "UnexpectedMetaHash"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct OrderBookV3ArbOrderTakerConfigV1",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "orderBook",
                  "type": "address"
                },
                {
                  "internalType": "struct EvaluableConfigV2",
                  "name": "evaluableConfig",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IExpressionDeployerV2",
                      "name": "deployer",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "bytecode",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "constants",
                      "type": "uint256[]"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "implementationData",
                  "type": "bytes"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialize",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "subject",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "meta",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetaV1",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "fallback"
        },
        {
          "inputs": [
            {
              "internalType": "struct TakeOrdersConfigV2",
              "name": "takeOrders",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "minimumInput",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maximumInput",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maximumIORatio",
                  "type": "uint256"
                },
                {
                  "internalType": "struct TakeOrderConfig[]",
                  "name": "orders",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct Order",
                      "name": "order",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "owner",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "handleIO",
                          "type": "bool"
                        },
                        {
                          "internalType": "struct Evaluable",
                          "name": "evaluable",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "contract IInterpreterV1",
                              "name": "interpreter",
                              "type": "address"
                            },
                            {
                              "internalType": "contract IInterpreterStoreV1",
                              "name": "store",
                              "type": "address"
                            },
                            {
                              "internalType": "address",
                              "name": "expression",
                              "type": "address"
                            }
                          ]
                        },
                        {
                          "internalType": "struct IO[]",
                          "name": "validInputs",
                          "type": "tuple[]",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint8",
                              "name": "decimals",
                              "type": "uint8"
                            },
                            {
                              "internalType": "uint256",
                              "name": "vaultId",
                              "type": "uint256"
                            }
                          ]
                        },
                        {
                          "internalType": "struct IO[]",
                          "name": "validOutputs",
                          "type": "tuple[]",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint8",
                              "name": "decimals",
                              "type": "uint8"
                            },
                            {
                              "internalType": "uint256",
                              "name": "vaultId",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "inputIOIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "outputIOIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SignedContextV1[]",
                      "name": "signedContext",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "signer",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256[]",
                          "name": "context",
                          "type": "uint256[]"
                        },
                        {
                          "internalType": "bytes",
                          "name": "signature",
                          "type": "bytes"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "minimumSenderOutput",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "arb"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OrderBookV3ArbOrderTakerConfigV1",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "orderBook",
                  "type": "address"
                },
                {
                  "internalType": "struct EvaluableConfigV2",
                  "name": "evaluableConfig",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IExpressionDeployerV2",
                      "name": "deployer",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "bytecode",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "constants",
                      "type": "uint256[]"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "implementationData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "initialize",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "inputToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "outputToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "inputAmountSent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalOutputAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "takeOrdersData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onTakeOrders"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sI9r",
          "outputs": [
            {
              "internalType": "contract IInterpreterV1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sI9rDispatch",
          "outputs": [
            {
              "internalType": "EncodedDispatch",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sI9rStore",
          "outputs": [
            {
              "internalType": "contract IInterpreterStoreV1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sOrderBook",
          "outputs": [
            {
              "internalType": "contract IOrderBookV3",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sRouteProcessor3",
          "outputs": [
            {
              "internalType": "contract IRouteProcessor",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "initialize(bytes)": {
            "details": "The `ICloneableV2` interface is identical to `ICloneableV1` except that it returns a `bytes32` success hash.",
            "params": {
              "data": "The initialization data."
            },
            "returns": {
              "_0": "keccak256(\"ICloneableV2.initialize\") if successful."
            }
          },
          "onTakeOrders(address,address,uint256,uint256,bytes)": {
            "params": {
              "inputAmountSent": "The amount of `inputToken` that was sent to `IOrderBookV3OrderTaker`.",
              "inputToken": "The token that was sent to `IOrderBookV3OrderTaker`.",
              "outputToken": "The token that `IOrderBookV3` will attempt to pull from `IOrderBookV3OrderTaker` after this callback returns.",
              "takeOrdersData": "The data passed to `takeOrders` by the caller.",
              "totalOutputAmount": "The total amount of `outputToken` that `IOrderBookV3` will attempt to pull from `IOrderBookV3OrderTaker` after this callback returns."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "initialize(bytes)": {
            "notice": "Initialize is intended to work like constructors but for cloneable proxies. The `ICloneableV2` contract MUST ensure that initialize can NOT be called more than once. The `ICloneableV2` contract is designed to be deployed by an `ICloneableFactoryV2` but MUST NOT assume that it will be. It is possible for someone to directly deploy an `ICloneableV2` and fail to call initialize before other functions are called, and end users MAY NOT realise or know how to confirm a safe deployment state. The `ICloneableV2` MUST take appropriate measures to ensure that functions called before initialize are safe to do so, or revert. To be fully generic, `initilize` accepts `bytes` and so MUST ABI decode within the initialize function. This allows a single factory to service arbitrary cloneable proxies but also erases the type of the initialization config from the ABI. As tooling will inevitably require the ABI to be known, it is RECOMMENDED that the `ICloneableV2` contract implements a typed `initialize` function that overloads the generic `initialize(bytes)` function. This overloaded function MUST revert with `InitializeSignatureFn` always, so that it is NEVER accidentally called. This avoids complex and expensive delegate call style patterns where a typed overload has to call back to itself and preserve the sender, instead we force the caller to know the correct signature and call the correct function directly with encoded bytes. If initialization is successful the `ICloneableV2` MUST return the keccak256 hash of the string \"ICloneableV2.initialize\". This avoids false positives where a contract building a proxy, such as an `ICloneableFactoryV2`, may incorrectly believe that the clone has been initialized but the implementation doesn't support `ICloneableV2`."
          },
          "onTakeOrders(address,address,uint256,uint256,bytes)": {
            "notice": "Called by `OrderBookV3` when `takeOrders` is called with non-zero data, if it caused a non-zero input amount. I.e. if the order(s) taker received some tokens. Input and output directions are relative to the `IOrderBookV3OrderTaker` contract. If the order(s) taker had an active debt from a flash loan then that debt will be paid _before_ calculating any input amounts sent. i.e. the debt is deducted from the input amount before this callback is called."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@prb/test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/",
        "axelar-gmp-sdk-solidity/=lib/sushixswap-v2/lib/axelar-gmp-sdk-solidity/",
        "bytecode/=lib/rain.interpreter/src/lib/bytecode/",
        "caller/=lib/rain.interpreter/src/lib/caller/",
        "compile/=lib/rain.interpreter/src/lib/compile/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "eval/=lib/rain.interpreter/src/lib/eval/",
        "extern/=lib/rain.interpreter/src/lib/extern/",
        "forge-gas-snapshot/=lib/sushixswap-v2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "integrity/=lib/rain.interpreter/src/lib/integrity/",
        "ns/=lib/rain.interpreter/src/lib/ns/",
        "op/=lib/rain.interpreter/src/lib/op/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "parse/=lib/rain.interpreter/src/lib/parse/",
        "prb-math/=lib/rain.interpreter/lib/prb-math/src/",
        "prb-test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/",
        "rain.chainlink/=lib/rain.interpreter/lib/rain.chainlink/src/",
        "rain.datacontract/=lib/rain.datacontract/src/",
        "rain.erc1820/=lib/rain.erc1820/src/",
        "rain.extrospection/=lib/rain.factory/lib/rain.extrospection/",
        "rain.factory/=lib/rain.factory/",
        "rain.interpreter/=lib/rain.interpreter/",
        "rain.lib.hash/=lib/rain.lib.memkv/lib/rain.lib.hash/src/",
        "rain.lib.memkv/=lib/rain.lib.memkv/src/",
        "rain.lib.typecast/=lib/rain.interpreter/lib/rain.lib.typecast/src/",
        "rain.math.fixedpoint/=lib/rain.interpreter/lib/rain.math.fixedpoint/src/",
        "rain.math.saturating/=lib/rain.interpreter/lib/rain.math.fixedpoint/lib/rain.math.saturating/src/",
        "rain.metadata/=lib/rain.metadata/src/",
        "rain.solmem/=lib/rain.datacontract/lib/rain.solmem/src/",
        "sol.lib.binmaskflag/=lib/rain.interpreter/lib/sol.lib.binmaskflag/src/",
        "state/=lib/rain.interpreter/src/lib/state/",
        "sushixswap-v2/=lib/sushixswap-v2/",
        "uniswap/=lib/rain.interpreter/src/lib/uniswap/",
        "v2-core/=lib/rain.interpreter/lib/v2-core/contracts/",
        "v2-periphery/=lib/v2-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "src/concrete/RouteProcessor3OrderBookV3ArbOrderTaker.sol": "RouteProcessor3OrderBookV3ArbOrderTaker"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6",
        "urls": [
          "bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed",
          "dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa",
        "urls": [
          "bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4",
          "dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol": {
        "keccak256": "0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80",
        "urls": [
          "bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d",
          "dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/rain.datacontract/lib/rain.solmem/src/lib/LibBytes.sol": {
        "keccak256": "0xcdc485d90d6d8a89a842b64c83efd15266c5c80916535736aa8a05497bcf5625",
        "urls": [
          "bzz-raw://a45d0edb1d404207ad328d7a4eb16ee52d68db8dbb44796caa521a4765dfe353",
          "dweb:/ipfs/QmVT8vbFLMmD1sg1sEz21mTrDRE58yFNsmKDPnZ3LX8yYk"
        ],
        "license": "CAL"
      },
      "lib/rain.datacontract/lib/rain.solmem/src/lib/LibMemCpy.sol": {
        "keccak256": "0x6a2df10cc8f19bf99711c06ddf744080d922104b2f8aab4093ca1df8849a8406",
        "urls": [
          "bzz-raw://58cdb4a850867b5ae325c28cd588a98e9c0b313fb7b70974fcb9ad357f552102",
          "dweb:/ipfs/QmYvf96iHnS81aqt9sEcdvqpq6ghsk2fa8RVNBc6pttQJe"
        ],
        "license": "CAL"
      },
      "lib/rain.datacontract/lib/rain.solmem/src/lib/LibPointer.sol": {
        "keccak256": "0xcd833cbf588ec10836cdfbddd426fc14dfa145ed2e63054f6bbd06e296e698f7",
        "urls": [
          "bzz-raw://9ce0af4045e276c5e4c352c1c435f4ecea7552192b1d99e33732c1067bea0ad7",
          "dweb:/ipfs/Qmc5NCFTwgg2AemUz9K1fPei51ivge3eUrWP8k56kF8ADG"
        ],
        "license": "CAL"
      },
      "lib/rain.datacontract/lib/rain.solmem/src/lib/LibUint256Array.sol": {
        "keccak256": "0x120ff38e1ce110465281d3d27d63c7c8d7ecbeba65aeacbffa7bec393501cbde",
        "urls": [
          "bzz-raw://0acaffcfb7a060e2cc60940768ac2c8c25c142834336de35984d1c53eba6f7b6",
          "dweb:/ipfs/QmcFAtiTDm43ZQTqAmpJUYuCbbTg6U6ytziB37qWU5h7sL"
        ],
        "license": "CAL"
      },
      "lib/rain.factory/src/interface/ICloneableV2.sol": {
        "keccak256": "0xbc1ceff073c177b6a0765abc20e897074b45cf620e6196a1d1c52f935d217a80",
        "urls": [
          "bzz-raw://fd2bbdded11b1d41ee37c03e617b17d12dbdd8a2afebc17a91f463db296cb234",
          "dweb:/ipfs/QmWTtnexF9X6G12nEWPcmcsDVTuaYHmWKwUgJTvcak8pYP"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/abstract/DeployerDiscoverableMetaV2.sol": {
        "keccak256": "0x3a74582510521381a9bd2732847be9170fd58fc5baf257917854f35823cd94db",
        "urls": [
          "bzz-raw://233812d35b959b522281af216123f7cc3c900342273e337cc9ba4418f655a78a",
          "dweb:/ipfs/QmZjZtdUbBzA55VSSKASr3fnmK1CZ36SY8LoyAYsFZ8gwA"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IExpressionDeployerV1.sol": {
        "keccak256": "0x42d4d91cc62778967ca5f1bb2e7b2c97ca2de2c49518bc8a08a0b50275074ab6",
        "urls": [
          "bzz-raw://6f461a0c0f65a514799200a64bc0e9d926abe4e0bba0c4e2ca0e3d6a04677768",
          "dweb:/ipfs/QmeUggk58ypM3721672wdupquFM8W9VnY3qpn8swKoeLhA"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IInterpreterCallerV2.sol": {
        "keccak256": "0xdbcd86209f48d96355da6e3f1c7f09530667f62544aa43b7058fe99063a20b6e",
        "urls": [
          "bzz-raw://b3803c98391a7db85b12c2ad9858abcda0022d0c004aabdad5ea736959a8ac0f",
          "dweb:/ipfs/QmbL5b4Rz1H4ZPVQzLET8UrQqXiUBnbwCkdUE6jHqPcapN"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IInterpreterStoreV1.sol": {
        "keccak256": "0xbd9baa8cd30406576f876a76f1c08396561ba93131741af338f63e2414e20619",
        "urls": [
          "bzz-raw://30bb6f09d8b8f27f77e6c44591c4f2070286a91dad202043cf2351ae802e3df5",
          "dweb:/ipfs/QmRz5pfzf5w84iNmKaYYbqP8oQywzc5xbd3xzKmxgFyf9y"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IInterpreterV1.sol": {
        "keccak256": "0xebde08ca2e1c25fc733e0bb8867598715f8ba79772f86db1c8960ad7d68a5293",
        "urls": [
          "bzz-raw://b93fb28a09aeea4afe7f0d4afc67354c0fa538e5a9b274b0c5f10ed1dd6b6b00",
          "dweb:/ipfs/QmatNhoHRSJ1ZvoCNo61YMt9jb1vvEkWy3mkcoPkB4FFA9"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/unstable/IExpressionDeployerV2.sol": {
        "keccak256": "0x7bbcf9d3689bdecdc58537e5185f0b88e8d4e91a295f5124f19779609f19f219",
        "urls": [
          "bzz-raw://ccdcba71f76f2a730685f956f1854355751a3c9b4caef9569e2a6d8acc8747a5",
          "dweb:/ipfs/QmQrWgCnxd9aGEHhmFTPkA8E3GVsKuwDhe2UQ5WyfA5LSA"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/bytecode/LibBytecode.sol": {
        "keccak256": "0x2b25061fa0f327fd89856e72a3c274b35cd1ce6a97405f9885cd17008c740461",
        "urls": [
          "bzz-raw://41277875d0ac8adbc5560e967ab2fe6c7a7edc4c4c91d13bffb01044adbe2691",
          "dweb:/ipfs/QmR3Yum5eeZ2i9yyzjpfF2o9m5pemv77KPrM2jSBX7LoRB"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibContext.sol": {
        "keccak256": "0x155499b7b1624484d2b03b9aecc7d7133c6c69bd17aa278b756c27e2c48af74a",
        "urls": [
          "bzz-raw://a2c9276f73ba44f1978b06847a23eed697b62f72eaa02e5e5711c30ea8097c05",
          "dweb:/ipfs/QmfKhi9K4Sp45t2dXCz5pms7mkoXARWkYgB661uc8DPrbF"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibDeployerDiscoverable.sol": {
        "keccak256": "0x80a4169a009519f7e94ce4416c9f4eb94b0cbf96f8e4c3f4f5ec8d65e59ad085",
        "urls": [
          "bzz-raw://bc915a321a3913fdee0a8eadcc263c6a8d2425c3517da5107d3a4177789199eb",
          "dweb:/ipfs/QmYJAQepVmeHDTZRCAAcEY7J7ANikvH3pnS6eETf5gnVrG"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibEncodedDispatch.sol": {
        "keccak256": "0xc3cb89672e0d11a343ba593f3ecbc0a5441d5a0ee7af7cdb4dbe82f32f951034",
        "urls": [
          "bzz-raw://692ff90cbc8804f320ff58ade514348049556bdbc10d485ae2cdc86033ac942f",
          "dweb:/ipfs/QmSina3eADDD1HtVw4tqtbhx8YnczFZUZ5Lwm9Lhscuvr3"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibEvaluable.sol": {
        "keccak256": "0x9bd77a3efb7e0762ca214efe30c3c49c3f3efae3b6c759db2c7a0aa52ff3d364",
        "urls": [
          "bzz-raw://6125b3bd94d9966557c068dda143c930d37662da06cd84a4369a673f4ce8b07c",
          "dweb:/ipfs/QmepFEJseAU31gPAa7Hq2H3ZDfRJ3DnK94CBpe73H3v7yP"
        ],
        "license": "CAL"
      },
      "lib/rain.lib.memkv/lib/rain.lib.hash/src/LibHashNoAlloc.sol": {
        "keccak256": "0x52c8b6906d61bcc7e70d594cb097f53e361569904e27019ebeed0b4c94d2aed8",
        "urls": [
          "bzz-raw://62999b0afefbe97e1d41c2c57b67a186e5a1618758f8f9cf17776c1d67f27d24",
          "dweb:/ipfs/QmfVsV2CVp91F9dHNWziKvSo54Wgb84k5Ct7Rtxxyptw35"
        ],
        "license": "CAL"
      },
      "lib/rain.metadata/src/IMetaV1.sol": {
        "keccak256": "0xd1959040fcc89be7a4dc8c9c193e4e5a78b84b05848b86c54d39c3d717ad1843",
        "urls": [
          "bzz-raw://7d3cba2279a6b8912f783430eef89c4a6482a489632ead7e2a3594d2162fa2b3",
          "dweb:/ipfs/QmfJFn72vcnq4LXpeBs9PWuDRzJSr58uVeDVjWpxjMHFWs"
        ],
        "license": "CAL"
      },
      "lib/rain.metadata/src/LibMeta.sol": {
        "keccak256": "0x04665ba6364cc67050b2a245daa780c39039dd51653f7b2029910f242f5dd285",
        "urls": [
          "bzz-raw://4341f3462120c37c832c03c6c9a0d52a100708fad713ced970f09747badd9d6d",
          "dweb:/ipfs/QmUGovuLTuTmCSTvYWc6SehzyoYAzVsAnPBNmE3hmRDAQU"
        ],
        "license": "CAL"
      },
      "lib/sushixswap-v2/src/interfaces/IRouteProcessor.sol": {
        "keccak256": "0x5b2289c992f34dd25943db3cbc27ece8b0a1addeb2631f812e7834b7ae3eac37",
        "urls": [
          "bzz-raw://f21522058b7fe3c18d2353b06a5ddbf2b62d2aceebf7dd6dfdc51b081452bb3f",
          "dweb:/ipfs/QmVkicGnNWgnX1RfXJWPpQaAPbiAQfFwGWigbPi1wu2WiT"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/abstract/OrderBookV3ArbCommon.sol": {
        "keccak256": "0xc77c321417500facb7f1a66baaf337f845674f805d56518d00bcbf78de929b4a",
        "urls": [
          "bzz-raw://7244eaac97f18d1676afcb8fc35aeb37b0be8547e4e84a2ccf202089b760f830",
          "dweb:/ipfs/QmWhNnSPAMPL5g7Ey4ZbctVWGuznJVEU4Vj1pXdr4Cb4SB"
        ],
        "license": "CAL"
      },
      "src/abstract/OrderBookV3ArbOrderTaker.sol": {
        "keccak256": "0x5dff048f85aa978c402a7cc18a8acfccbf79ba5a88271a1c0dd8be914e98505f",
        "urls": [
          "bzz-raw://3b42b2e7b1cb743386eb823db2851517138586a5d53d21c7d90a169d08103e36",
          "dweb:/ipfs/QmTpVeWaKiPTiodWxMS2jWtQkiVDX5YGJGNWc8ah8tQhc1"
        ],
        "license": "CAL"
      },
      "src/concrete/RouteProcessor3OrderBookV3ArbOrderTaker.sol": {
        "keccak256": "0x23eee385be0a3478f0504d75f34d6c7404e2fa43df54ef9bb1cb7920ceaa8b03",
        "urls": [
          "bzz-raw://7260c73e8d7febf48c700a1b834b2d3ba27e6b27a5082ce5880809f9a58bca2e",
          "dweb:/ipfs/Qme3YVxEUpzGx1ohLJEwm8PQ1ktoZC1WLLDRxhG3C2UY3B"
        ],
        "license": "CAL"
      },
      "src/interface/IOrderBookV2.sol": {
        "keccak256": "0xebc841ab2c03c057e116f7f7ccaff82be986eca988d26b88cbbf7499430ab9ee",
        "urls": [
          "bzz-raw://a0cd8161b171e900007b6a8981559408d079f876d7d668fc4b43fc2be443c112",
          "dweb:/ipfs/QmfKuLfpcorjssSdX4GgZ1CDeJygnnvx586X8zRTBsNZAa"
        ],
        "license": "CAL"
      },
      "src/interface/ierc3156/IERC3156FlashBorrower.sol": {
        "keccak256": "0x493227b1bc21c04ba2506d8d63f8fab8eb828683cf41336db1076edee2e010a7",
        "urls": [
          "bzz-raw://99b27f1f11576c22462c93ab613835522dfc89a7e28e584df034b339187bc15c",
          "dweb:/ipfs/QmQZ1H8PotScE5rSbruZn97MC6pgDNTuCQcjtg8ZWU4SPB"
        ],
        "license": "CC0"
      },
      "src/interface/ierc3156/IERC3156FlashLender.sol": {
        "keccak256": "0x191637dc4503bf6cc0c6c0539bf83a758b124e37abc5da05ae4d446133cf36b5",
        "urls": [
          "bzz-raw://de7dea1fd8bd0dcdae7bdb400d4ccc9e01ecb73e23ef2b2f77704a9741669273",
          "dweb:/ipfs/QmT8BAK76nEJ5kTKkDxDovD4xuAXPACAyxshUA4RX3WLe3"
        ],
        "license": "CC0"
      },
      "src/interface/unstable/IOrderBookV3.sol": {
        "keccak256": "0x361d1463885b4fee46b5e9617517c0f8b6221adde78f3c48283e949f924a5629",
        "urls": [
          "bzz-raw://8215827bf1a53ebea2fe55f7bc7a4d9c35aac89ec9537958af00560c4b3e2317",
          "dweb:/ipfs/QmNs9hdheu5wJPC85mWm7kFNWUmZHWx8nFKFCjXZCyLgYR"
        ],
        "license": "CAL"
      },
      "src/interface/unstable/IOrderBookV3ArbOrderTaker.sol": {
        "keccak256": "0x0d08968f83de64e0aec3473bf90c5acc5527d0ef0baafc3526d114d8f4a4a59e",
        "urls": [
          "bzz-raw://277dae815203f5ac255eba4792ba0c677927df648d198134ae602fd8e47d9226",
          "dweb:/ipfs/QmVsWYKQShc9DUxjiaVy1jZYup3A7DYvVni4VcreWrmjHK"
        ],
        "license": "CAL"
      },
      "src/interface/unstable/IOrderBookV3OrderTaker.sol": {
        "keccak256": "0x256cda8259c6c344e80ea5db35c7899e2c6f337ca040653ebdf7527e2e1d776e",
        "urls": [
          "bzz-raw://5b26e4385457c5c18b0c4cb394d00662364912f082510df6015e0127059c05b9",
          "dweb:/ipfs/QmaQmiW8dDDAcfzRJZVavcZo9QLeFrN44obvRydJouJbL1"
        ],
        "license": "CAL"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/concrete/RouteProcessor3OrderBookV3ArbOrderTaker.sol",
    "id": 5241,
    "exportedSymbols": {
      "Address": [
        1067
      ],
      "BEFORE_ARB_MAX_OUTPUTS": [
        4584
      ],
      "BEFORE_ARB_MIN_OUTPUTS": [
        4580
      ],
      "BEFORE_ARB_SOURCE_INDEX": [
        4576
      ],
      "BadLender": [
        4533
      ],
      "CALLER_META_HASH": [
        5094
      ],
      "ClearConfig": [
        5336
      ],
      "ClearStateChange": [
        5345
      ],
      "DEFAULT_STATE_NAMESPACE": [
        3434
      ],
      "DeployerDiscoverableMetaV2": [
        3306
      ],
      "DeployerDiscoverableMetaV2ConstructionConfig": [
        3261
      ],
      "ECDSA": [
        1662
      ],
      "ERC165": [
        1785
      ],
      "EncodedDispatch": [
        3422
      ],
      "Evaluable": [
        4306
      ],
      "EvaluableConfig": [
        4288
      ],
      "EvaluableConfigV2": [
        4297
      ],
      "FullyQualifiedNamespace": [
        3383
      ],
      "HASH_NIL": [
        4324
      ],
      "ICLONEABLE_V2_SUCCESS": [
        3238
      ],
      "ICloneableV2": [
        3251
      ],
      "IERC165": [
        1797
      ],
      "IERC1820_NAME_IEXPRESSION_DEPLOYER_V1": [
        3312
      ],
      "IERC1820_NAME_IEXPRESSION_DEPLOYER_V2": [
        3471
      ],
      "IERC20": [
        325
      ],
      "IERC3156FlashBorrower": [
        5550
      ],
      "IERC3156FlashLender": [
        5587
      ],
      "IExpressionDeployerV1": [
        3348
      ],
      "IExpressionDeployerV2": [
        3506
      ],
      "IInterpreterCallerV2": [
        3378
      ],
      "IInterpreterStoreV1": [
        3415
      ],
      "IInterpreterV1": [
        3465
      ],
      "IO": [
        5266
      ],
      "IOrderBookV3": [
        5870
      ],
      "IOrderBookV3ArbOrderTaker": [
        5885
      ],
      "IOrderBookV3OrderTaker": [
        5902
      ],
      "IRouteProcessor": [
        4513
      ],
      "Initializable": [
        182
      ],
      "Initializing": [
        4525
      ],
      "InvalidSignature": [
        3802
      ],
      "LibBytecode": [
        3788
      ],
      "LibBytes": [
        2846
      ],
      "LibContext": [
        4087
      ],
      "LibEncodedDispatch": [
        4272
      ],
      "LibEvaluable": [
        4319
      ],
      "LibHashNoAlloc": [
        4366
      ],
      "LibMemCpy": [
        2878
      ],
      "LibMeta": [
        4479
      ],
      "LibPointer": [
        3002
      ],
      "LibUint256Array": [
        3230
      ],
      "MinimumOutput": [
        4522
      ],
      "NO_STORE": [
        3392
      ],
      "NoOrders": [
        5601
      ],
      "NonZeroBeforeArbStack": [
        4528
      ],
      "ON_FLASH_LOAN_CALLBACK_SUCCESS": [
        5533
      ],
      "Operand": [
        3426
      ],
      "Order": [
        5296
      ],
      "OrderBookV3ArbOrderTaker": [
        5078
      ],
      "OrderBookV3ArbOrderTakerConfigV1": [
        4568
      ],
      "OrderConfigV2": [
        5615
      ],
      "OutOfBoundsTruncate": [
        3012
      ],
      "Pointer": [
        2882
      ],
      "ReentrancyGuard": [
        247
      ],
      "RouteProcessor3OrderBookV3ArbOrderTaker": [
        5240
      ],
      "SIGNED_CONTEXT_CONTEXT_OFFSET": [
        3364
      ],
      "SIGNED_CONTEXT_SIGNATURE_OFFSET": [
        3367
      ],
      "SIGNED_CONTEXT_SIGNER_OFFSET": [
        3361
      ],
      "SafeERC20": [
        737
      ],
      "SignatureChecker": [
        1761
      ],
      "SignedContextV1": [
        3358
      ],
      "SourceIndex": [
        3420
      ],
      "SourceOffsetOutOfBounds": [
        3519
      ],
      "StateNamespace": [
        3424
      ],
      "TakeOrderConfig": [
        5323
      ],
      "TakeOrdersConfigV2": [
        5628
      ],
      "TruncateError": [
        2778
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2024:36",
    "nodes": [
      {
        "id": 5080,
        "nodeType": "PragmaDirective",
        "src": "32:24:36",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 5081,
        "nodeType": "ImportDirective",
        "src": "58:58:36",
        "nodes": [],
        "absolutePath": "lib/sushixswap-v2/src/interfaces/IRouteProcessor.sol",
        "file": "sushixswap-v2/src/interfaces/IRouteProcessor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5241,
        "sourceUnit": 4514,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5082,
        "nodeType": "ImportDirective",
        "src": "118:50:36",
        "nodes": [],
        "absolutePath": "src/abstract/OrderBookV3ArbOrderTaker.sol",
        "file": "../abstract/OrderBookV3ArbOrderTaker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5241,
        "sourceUnit": 5079,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5084,
        "nodeType": "ImportDirective",
        "src": "169:79:36",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5241,
        "sourceUnit": 326,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5083,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 325,
              "src": "177:6:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5086,
        "nodeType": "ImportDirective",
        "src": "249:91:36",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5241,
        "sourceUnit": 738,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5085,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 737,
              "src": "257:9:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5088,
        "nodeType": "ImportDirective",
        "src": "341:75:36",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "openzeppelin-contracts/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5241,
        "sourceUnit": 1068,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5087,
              "name": "Address",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1067,
              "src": "349:7:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5094,
        "nodeType": "VariableDeclaration",
        "src": "418:111:36",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "CALLER_META_HASH",
        "nameLocation": "435:16:36",
        "scope": 5241,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_bytes32",
          "typeString": "bytes32"
        },
        "typeName": {
          "id": 5089,
          "name": "bytes32",
          "nodeType": "ElementaryTypeName",
          "src": "418:7:36",
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "value": {
          "arguments": [
            {
              "hexValue": "307833643639303934383138323066633639323930366230343737653866393832343865383439373362633862386435616339333531333238353764346634313235",
              "id": 5092,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "462:66:36",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_27776666764755325840291907462788228669295272623583244789707041676659769950501_by_1",
                "typeString": "int_const 2777...(69 digits omitted)...0501"
              },
              "value": "0x3d6909481820fc692906b0477e8f98248e84973bc8b8d5ac935132857d4f4125"
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_rational_27776666764755325840291907462788228669295272623583244789707041676659769950501_by_1",
                "typeString": "int_const 2777...(69 digits omitted)...0501"
              }
            ],
            "id": 5091,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "nodeType": "ElementaryTypeNameExpression",
            "src": "454:7:36",
            "typeDescriptions": {
              "typeIdentifier": "t_type$_t_bytes32_$",
              "typeString": "type(bytes32)"
            },
            "typeName": {
              "id": 5090,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "454:7:36",
              "typeDescriptions": {}
            }
          },
          "id": 5093,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "typeConversion",
          "lValueRequested": false,
          "nameLocations": [],
          "names": [],
          "nodeType": "FunctionCall",
          "src": "454:75:36",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 5240,
        "nodeType": "ContractDefinition",
        "src": "532:1523:36",
        "nodes": [
          {
            "id": 5100,
            "nodeType": "UsingForDirective",
            "src": "615:27:36",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 5097,
              "name": "SafeERC20",
              "nameLocations": [
                "621:9:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 737,
              "src": "621:9:36"
            },
            "typeName": {
              "id": 5099,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5098,
                "name": "IERC20",
                "nameLocations": [
                  "635:6:36"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 325,
                "src": "635:6:36"
              },
              "referencedDeclaration": 325,
              "src": "635:6:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$325",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 5103,
            "nodeType": "UsingForDirective",
            "src": "647:26:36",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 5101,
              "name": "Address",
              "nameLocations": [
                "653:7:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1067,
              "src": "653:7:36"
            },
            "typeName": {
              "id": 5102,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "665:7:36",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 5106,
            "nodeType": "VariableDeclaration",
            "src": "679:39:36",
            "nodes": [],
            "constant": false,
            "functionSelector": "d423a052",
            "mutability": "mutable",
            "name": "sRouteProcessor3",
            "nameLocation": "702:16:36",
            "scope": 5240,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRouteProcessor_$4513",
              "typeString": "contract IRouteProcessor"
            },
            "typeName": {
              "id": 5105,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5104,
                "name": "IRouteProcessor",
                "nameLocations": [
                  "679:15:36"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4513,
                "src": "679:15:36"
              },
              "referencedDeclaration": 4513,
              "src": "679:15:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRouteProcessor_$4513",
                "typeString": "contract IRouteProcessor"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5117,
            "nodeType": "FunctionDefinition",
            "src": "725:137:36",
            "nodes": [],
            "body": {
              "id": 5116,
              "nodeType": "Block",
              "src": "860:2:36",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5112,
                    "name": "CALLER_META_HASH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5094,
                    "src": "830:16:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 5113,
                    "name": "config",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5109,
                    "src": "848:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DeployerDiscoverableMetaV2ConstructionConfig_$3261_memory_ptr",
                      "typeString": "struct DeployerDiscoverableMetaV2ConstructionConfig memory"
                    }
                  }
                ],
                "id": 5114,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5111,
                  "name": "OrderBookV3ArbOrderTaker",
                  "nameLocations": [
                    "805:24:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5078,
                  "src": "805:24:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "805:50:36"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 5110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5109,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "789:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 5117,
                  "src": "737:58:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DeployerDiscoverableMetaV2ConstructionConfig_$3261_memory_ptr",
                    "typeString": "struct DeployerDiscoverableMetaV2ConstructionConfig"
                  },
                  "typeName": {
                    "id": 5108,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5107,
                      "name": "DeployerDiscoverableMetaV2ConstructionConfig",
                      "nameLocations": [
                        "737:44:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3261,
                      "src": "737:44:36"
                    },
                    "referencedDeclaration": 3261,
                    "src": "737:44:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DeployerDiscoverableMetaV2ConstructionConfig_$3261_storage_ptr",
                      "typeString": "struct DeployerDiscoverableMetaV2ConstructionConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "736:60:36"
            },
            "returnParameters": {
              "id": 5115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "860:0:36"
            },
            "scope": 5240,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5141,
            "nodeType": "FunctionDefinition",
            "src": "913:205:36",
            "nodes": [],
            "body": {
              "id": 5140,
              "nodeType": "Block",
              "src": "985:133:36",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    5125
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5125,
                      "mutability": "mutable",
                      "name": "routeProcessor3",
                      "nameLocation": "1004:15:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 5140,
                      "src": "996:23:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5124,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "996:7:36",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5133,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5128,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5120,
                        "src": "1034:4:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 5130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1041:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5129,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1041:7:36",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 5131,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1040:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      ],
                      "expression": {
                        "id": 5126,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1023:3:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 5127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1027:6:36",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1023:10:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 5132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1023:27:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "995:55:36"
                },
                {
                  "expression": {
                    "id": 5138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5134,
                      "name": "sRouteProcessor3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5106,
                      "src": "1060:16:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRouteProcessor_$4513",
                        "typeString": "contract IRouteProcessor"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5136,
                          "name": "routeProcessor3",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5125,
                          "src": "1095:15:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5135,
                        "name": "IRouteProcessor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4513,
                        "src": "1079:15:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRouteProcessor_$4513_$",
                          "typeString": "type(contract IRouteProcessor)"
                        }
                      },
                      "id": 5137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1079:32:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRouteProcessor_$4513",
                        "typeString": "contract IRouteProcessor"
                      }
                    },
                    "src": "1060:51:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRouteProcessor_$4513",
                      "typeString": "contract IRouteProcessor"
                    }
                  },
                  "id": 5139,
                  "nodeType": "ExpressionStatement",
                  "src": "1060:51:36"
                }
              ]
            },
            "baseFunctions": [
              4670
            ],
            "documentation": {
              "id": 5118,
              "nodeType": "StructuredDocumentation",
              "src": "868:40:36",
              "text": "@inheritdoc OrderBookV3ArbOrderTaker"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeInitialize",
            "nameLocation": "922:17:36",
            "overrides": {
              "id": 5122,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "976:8:36"
            },
            "parameters": {
              "id": 5121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5120,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "953:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 5141,
                  "src": "940:17:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5119,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "939:19:36"
            },
            "returnParameters": {
              "id": 5123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "985:0:36"
            },
            "scope": 5240,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 5232,
            "nodeType": "FunctionDefinition",
            "src": "1169:807:36",
            "nodes": [],
            "body": {
              "id": 5231,
              "nodeType": "Block",
              "src": "1385:591:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5159,
                        "name": "inputToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5144,
                        "src": "1414:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5160,
                        "name": "outputToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5146,
                        "src": "1426:11:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5161,
                        "name": "inputAmountSent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5148,
                        "src": "1439:15:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5162,
                        "name": "totalOutputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5150,
                        "src": "1456:17:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5163,
                        "name": "takeOrdersData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5152,
                        "src": "1475:14:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 5156,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1395:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_RouteProcessor3OrderBookV3ArbOrderTaker_$5240_$",
                          "typeString": "type(contract super RouteProcessor3OrderBookV3ArbOrderTaker)"
                        }
                      },
                      "id": 5158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1401:12:36",
                      "memberName": "onTakeOrders",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5077,
                      "src": "1395:18:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes calldata)"
                      }
                    },
                    "id": 5164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1395:95:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5165,
                  "nodeType": "ExpressionStatement",
                  "src": "1395:95:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5172,
                            "name": "sRouteProcessor3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5106,
                            "src": "1539:16:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRouteProcessor_$4513",
                              "typeString": "contract IRouteProcessor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IRouteProcessor_$4513",
                              "typeString": "contract IRouteProcessor"
                            }
                          ],
                          "id": 5171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1531:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5170,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1531:7:36",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1531:25:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 5174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1558:1:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 5167,
                            "name": "inputToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5144,
                            "src": "1507:10:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5166,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 325,
                          "src": "1500:6:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$325_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 5168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1500:18:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$325",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1519:11:36",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 465,
                      "src": "1500:30:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$325_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$325_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 5175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1500:60:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5176,
                  "nodeType": "ExpressionStatement",
                  "src": "1500:60:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5183,
                            "name": "sRouteProcessor3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5106,
                            "src": "1609:16:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRouteProcessor_$4513",
                              "typeString": "contract IRouteProcessor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IRouteProcessor_$4513",
                              "typeString": "contract IRouteProcessor"
                            }
                          ],
                          "id": 5182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1601:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5181,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1601:7:36",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1601:25:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1633:7:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 5186,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1633:7:36",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 5185,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1628:4:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 5188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1628:13:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 5189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1642:3:36",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1628:17:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 5178,
                            "name": "inputToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5144,
                            "src": "1577:10:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5177,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 325,
                          "src": "1570:6:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$325_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 5179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1570:18:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$325",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1589:11:36",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 465,
                      "src": "1570:30:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$325_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$325_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 5190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1570:76:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5191,
                  "nodeType": "ExpressionStatement",
                  "src": "1570:76:36"
                },
                {
                  "assignments": [
                    5193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5193,
                      "mutability": "mutable",
                      "name": "route",
                      "nameLocation": "1669:5:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 5231,
                      "src": "1656:18:36",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 5192,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1656:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5201,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5196,
                        "name": "takeOrdersData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5152,
                        "src": "1688:14:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 5198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1705:5:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 5197,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1705:5:36",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 5199,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1704:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                          "typeString": "type(bytes storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                          "typeString": "type(bytes storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 5194,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1677:3:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 5195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1681:6:36",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1677:10:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 5200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1677:35:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1656:56:36"
                },
                {
                  "assignments": [
                    5203
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5203,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "1731:9:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 5231,
                      "src": "1723:17:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5202,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1723:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5216,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5206,
                        "name": "inputToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5144,
                        "src": "1787:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5207,
                        "name": "inputAmountSent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5148,
                        "src": "1799:15:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5208,
                        "name": "outputToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5146,
                        "src": "1816:11:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5209,
                        "name": "totalOutputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5150,
                        "src": "1829:17:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 5212,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1856:4:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RouteProcessor3OrderBookV3ArbOrderTaker_$5240",
                              "typeString": "contract RouteProcessor3OrderBookV3ArbOrderTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RouteProcessor3OrderBookV3ArbOrderTaker_$5240",
                              "typeString": "contract RouteProcessor3OrderBookV3ArbOrderTaker"
                            }
                          ],
                          "id": 5211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1848:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5210,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1848:7:36",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1848:13:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5214,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5193,
                        "src": "1863:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 5204,
                        "name": "sRouteProcessor3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5106,
                        "src": "1744:16:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRouteProcessor_$4513",
                          "typeString": "contract IRouteProcessor"
                        }
                      },
                      "id": 5205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1761:12:36",
                      "memberName": "processRoute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4512,
                      "src": "1744:29:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address,uint256,address,bytes memory) payable external returns (uint256)"
                      }
                    },
                    "id": 5215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1744:134:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1722:156:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5223,
                            "name": "sRouteProcessor3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5106,
                            "src": "1927:16:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRouteProcessor_$4513",
                              "typeString": "contract IRouteProcessor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IRouteProcessor_$4513",
                              "typeString": "contract IRouteProcessor"
                            }
                          ],
                          "id": 5222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1919:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5221,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1919:7:36",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1919:25:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 5225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1946:1:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 5218,
                            "name": "inputToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5144,
                            "src": "1895:10:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5217,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 325,
                          "src": "1888:6:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$325_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 5219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1888:18:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$325",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 5220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1907:11:36",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 465,
                      "src": "1888:30:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$325_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$325_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 5226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1888:60:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5227,
                  "nodeType": "ExpressionStatement",
                  "src": "1888:60:36"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 5228,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5203,
                        "src": "1959:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 5229,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1958:11:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5230,
                  "nodeType": "ExpressionStatement",
                  "src": "1958:11:36"
                }
              ]
            },
            "baseFunctions": [
              5077
            ],
            "documentation": {
              "id": 5142,
              "nodeType": "StructuredDocumentation",
              "src": "1124:40:36",
              "text": "@inheritdoc OrderBookV3ArbOrderTaker"
            },
            "functionSelector": "059bebe6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onTakeOrders",
            "nameLocation": "1178:12:36",
            "overrides": {
              "id": 5154,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1376:8:36"
            },
            "parameters": {
              "id": 5153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5144,
                  "mutability": "mutable",
                  "name": "inputToken",
                  "nameLocation": "1208:10:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 5232,
                  "src": "1200:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5143,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1200:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5146,
                  "mutability": "mutable",
                  "name": "outputToken",
                  "nameLocation": "1236:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 5232,
                  "src": "1228:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1228:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5148,
                  "mutability": "mutable",
                  "name": "inputAmountSent",
                  "nameLocation": "1265:15:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 5232,
                  "src": "1257:23:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1257:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5150,
                  "mutability": "mutable",
                  "name": "totalOutputAmount",
                  "nameLocation": "1298:17:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 5232,
                  "src": "1290:25:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5149,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1290:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5152,
                  "mutability": "mutable",
                  "name": "takeOrdersData",
                  "nameLocation": "1340:14:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 5232,
                  "src": "1325:29:36",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5151,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1325:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1190:170:36"
            },
            "returnParameters": {
              "id": 5155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1385:0:36"
            },
            "scope": 5240,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 5239,
            "nodeType": "FunctionDefinition",
            "src": "2011:42:36",
            "nodes": [],
            "body": {
              "id": 5238,
              "nodeType": "Block",
              "src": "2051:2:36",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 5233,
              "nodeType": "StructuredDocumentation",
              "src": "1982:24:36",
              "text": "Allow receiving gas."
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [
              {
                "id": 5236,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5235,
                  "name": "onlyNotInitializing",
                  "nameLocations": [
                    "2031:19:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4682,
                  "src": "2031:19:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "2031:19:36"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 5234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2019:2:36"
            },
            "returnParameters": {
              "id": 5237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2051:0:36"
            },
            "scope": 5240,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5095,
              "name": "OrderBookV3ArbOrderTaker",
              "nameLocations": [
                "584:24:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5078,
              "src": "584:24:36"
            },
            "id": 5096,
            "nodeType": "InheritanceSpecifier",
            "src": "584:24:36"
          }
        ],
        "canonicalName": "RouteProcessor3OrderBookV3ArbOrderTaker",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          5240,
          5078,
          1785,
          1797,
          3306,
          4395,
          3251,
          182,
          247,
          5885,
          5902
        ],
        "name": "RouteProcessor3OrderBookV3ArbOrderTaker",
        "nameLocation": "541:39:36",
        "scope": 5241,
        "usedErrors": [
          3242,
          3802,
          4375,
          4380,
          4522,
          4525,
          4528,
          4533,
          5601
        ]
      }
    ],
    "license": "CAL"
  },
  "id": 36
}