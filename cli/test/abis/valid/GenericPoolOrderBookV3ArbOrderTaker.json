{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "deployer",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "meta",
              "type": "bytes"
            }
          ],
          "internalType": "struct DeployerDiscoverableMetaV2ConstructionConfig",
          "name": "config",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "badLender",
          "type": "address"
        }
      ],
      "name": "BadLender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InitializeSignatureFn",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Initializing",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "InvalidSignature",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minimum",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "actual",
          "type": "uint256"
        }
      ],
      "name": "MinimumOutput",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoOrders",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonZeroBeforeArbStack",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "unmeta",
          "type": "bytes"
        }
      ],
      "name": "NotRainMetaV1",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "expectedHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "actualHash",
          "type": "bytes32"
        }
      ],
      "name": "UnexpectedMetaHash",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "orderBook",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IExpressionDeployerV2",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "bytecode",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256[]",
                  "name": "constants",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct EvaluableConfigV2",
              "name": "evaluableConfig",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "implementationData",
              "type": "bytes"
            }
          ],
          "indexed": false,
          "internalType": "struct OrderBookV3ArbOrderTakerConfigV1",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "Initialize",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "subject",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "meta",
          "type": "bytes"
        }
      ],
      "name": "MetaV1",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "minimumInput",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maximumInput",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maximumIORatio",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "handleIO",
                      "type": "bool"
                    },
                    {
                      "components": [
                        {
                          "internalType": "contract IInterpreterV1",
                          "name": "interpreter",
                          "type": "address"
                        },
                        {
                          "internalType": "contract IInterpreterStoreV1",
                          "name": "store",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "expression",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct Evaluable",
                      "name": "evaluable",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint8",
                          "name": "decimals",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "vaultId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IO[]",
                      "name": "validInputs",
                      "type": "tuple[]"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint8",
                          "name": "decimals",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "vaultId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IO[]",
                      "name": "validOutputs",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct Order",
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "inputIOIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "outputIOIndex",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "signer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "context",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct SignedContextV1[]",
                  "name": "signedContext",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct TakeOrderConfig[]",
              "name": "orders",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct TakeOrdersConfigV2",
          "name": "takeOrders",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "minimumSenderOutput",
          "type": "uint256"
        }
      ],
      "name": "arb",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "orderBook",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IExpressionDeployerV2",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "bytecode",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256[]",
                  "name": "constants",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct EvaluableConfigV2",
              "name": "evaluableConfig",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "implementationData",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderBookV3ArbOrderTakerConfigV1",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "inputToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "outputToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "inputAmountSent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalOutputAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "takeOrdersData",
          "type": "bytes"
        }
      ],
      "name": "onTakeOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sI9r",
      "outputs": [
        {
          "internalType": "contract IInterpreterV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sI9rDispatch",
      "outputs": [
        {
          "internalType": "EncodedDispatch",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sI9rStore",
      "outputs": [
        {
          "internalType": "contract IInterpreterStoreV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sOrderBook",
      "outputs": [
        {
          "internalType": "contract IOrderBookV3",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620033f2380380620033f2833981016040819052620000349162000383565b600160005560208101517f3d6909481820fc692906b0477e8f98248e84973bc8b8d5ac935132857d4f41259082908290829062000073908390620000d7565b60208101516040517fbea766d03fa1efd3f81cc8634d08320bc62bb0ed9234ac59bbaafa5893fb6b1391620000ac913391309162000491565b60405180910390a18051620000c1906200011e565b50620000ce9050620001b5565b505050620005a7565b805160208201208281146200010e5760405163074fe10f60e41b815260048101849052602481018290526044015b60405180910390fd5b620001198262000273565b505050565b60408051600080825260208201818152828401938490526331a66b6560e01b90935291829182916001600160a01b038616916331a66b65916200016691906044820162000500565b6060604051808303816000875af115801562000186573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001ac919062000537565b50505050505050565b600154610100900460ff16156200021f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840162000105565b60015460ff9081161462000271576001805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6200027e81620002a3565b620002a05780604051630c89984b60e31b81526004016200010591906200058b565b50565b6000600882511015620002b857506000919050565b50600801516001600160401b031667ff0a89c674ee78741490565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156200030e576200030e620002d3565b60405290565b604051601f8201601f191681016001600160401b03811182821017156200033f576200033f620002d3565b604052919050565b6001600160a01b0381168114620002a057600080fd5b60005b838110156200037a57818101518382015260200162000360565b50506000910152565b600060208083850312156200039757600080fd5b82516001600160401b0380821115620003af57600080fd5b9084019060408287031215620003c457600080fd5b620003ce620002e9565b8251620003db8162000347565b81528284015182811115620003ef57600080fd5b80840193505086601f8401126200040557600080fd5b8251828111156200041a576200041a620002d3565b6200042e601f8201601f1916860162000314565b925080835287858286010111156200044557600080fd5b62000456818685018787016200035d565b5092830152509392505050565b600081518084526200047d8160208601602086016200035d565b601f01601f19169290920160200192915050565b60018060a01b0384168152826020820152606060408201526000620004ba606083018462000463565b95945050505050565b600081518084526020808501945080840160005b83811015620004f557815187529582019590820190600101620004d7565b509495945050505050565b6060815260006060820152608060208201526000620005236080830185620004c3565b8281036040840152620004ba8185620004c3565b6000806000606084860312156200054d57600080fd5b83516200055a8162000347565b60208501519093506200056d8162000347565b6040850151909250620005808162000347565b809150509250925092565b602081526000620005a0602083018462000463565b9392505050565b612e3b80620005b76000396000f3fe6080604052600436106100965760003560e01c806371c1dea71161006957806389448c3a1161004e57806389448c3a1461021c57806398da8d6a14610232578063c3b7c7c31461025257610096565b806371c1dea7146101bc578063886d1650146101e957610096565b806301ffc9a7146100e7578063059bebe61461011c578063439fab911461013c57806361bb39e41461016a575b3480156100a257600080fd5b50600154610100900460ff16156100e5576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b005b3480156100f357600080fd5b50610107610102366004611dc2565b610265565b60405190151581526020015b60405180910390f35b34801561012857600080fd5b506100e5610137366004611e2d565b61034a565b34801561014857600080fd5b5061015c61015736600461201a565b610425565b604051908152602001610113565b34801561017657600080fd5b506004546101979073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610113565b3480156101c857600080fd5b506003546101979073ffffffffffffffffffffffffffffffffffffffff1681565b3480156101f557600080fd5b506001546101979062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b34801561022857600080fd5b5061015c60025481565b34801561023e57600080fd5b5061015c61024d36600461204f565b61080d565b6100e561026036600461208a565b610841565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f059bebe60000000000000000000000000000000000000000000000000000000014806102f857507fffffffff0000000000000000000000000000000000000000000000000000000082167f439fab9100000000000000000000000000000000000000000000000000000000145b8061034457507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b610358868686868686610f71565b60008080610368848601866120d4565b9194509250905061039173ffffffffffffffffffffffffffffffffffffffff8a16846000611014565b6103d273ffffffffffffffffffffffffffffffffffffffff8a16847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611014565b60006103f573ffffffffffffffffffffffffffffffffffffffff84168347611219565b905061041973ffffffffffffffffffffffffffffffffffffffff8b16856000611014565b50505050505050505050565b600154600090610100900460ff161580801561044557506001805460ff16105b8061045e5750303b15801561045e57506001805460ff16145b6104ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001681179055801561054c57600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610554611247565b60008380602001905181019061056a9190612214565b905080516001805473ffffffffffffffffffffffffffffffffffffffff90921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff9092169190911790556040517f61f559321bdc3ad3a0e3b8692a91eaffa9773753bfec4e5f4c344cfed245cab7906105eb90339084906123a2565b60405180910390a160006106068260200151602001516112bd565b11156107775760408051600180825281830190925260009182919060208083019080368337019050509050600081600061ffff168151811061064a5761064a612477565b6020908102919091018101919091528381015180519181015160409182015191517f31a66b6500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909316926331a66b65926106bc929186906004016124a6565b6060604051808303816000875af11580156106db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ff91906124df565b600480547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff94851617909155600380549091169390921692909217905560201b77ffffffffffffffffffffffffffffffffffffffff000000001660025550505b7fe0e57eda3f08f2a93bbe980d3df7f9c315eac41181f58b865a13d917fe769fc39250506107a56001600055565b801561080757600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50919050565b60006040517faf1fbb2100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610849611247565b600154610100900460ff161561088b576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610898606083018361252c565b90506000036108d3576040517f9c95219f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006108e2606084018461252c565b60008181106108f3576108f3612477565b90506020028101906109059190612594565b61090f90806125d2565b61091d9060a0810190612606565b61092a606086018661252c565b600081811061093b5761093b612477565b905060200281019061094d9190612594565b6020013581811061096057610960612477565b610976926020606090920201908101915061266d565b90506000610987606085018561252c565b600081811061099857610998612477565b90506020028101906109aa9190612594565b6109b490806125d2565b6109c29060c0810190612606565b6109cf606087018761252c565b60008181106109e0576109e0612477565b90506020028101906109f29190612594565b60400135818110610a0557610a05612477565b610a1b926020606090920201908101915061266d565b6002549091508015610c4a57600354600454600091829173ffffffffffffffffffffffffffffffffffffffff91821691636715f82591168386610af582604051908082528060200260200182016040528015610a8b57816020015b6060815260200190600190039081610a765790505b506040805160008082526020820190925290610aef565b610adc6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b815260200190600190039081610aa25790505b506112db565b6040518563ffffffff1660e01b8152600401610b14949392919061268a565b600060405180830381865afa158015610b31573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610b779190810190612736565b8151919350915015610bb5576040517f379fa94000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805115610c4757600480546040517f946aadc600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169163946aadc691610c149160009186910161279a565b600060405180830381600087803b158015610c2e57600080fd5b505af1158015610c42573d6000803e3d6000fd5b505050505b50505b600154610c789073ffffffffffffffffffffffffffffffffffffffff85811691620100009004166000611014565b600154610cc59073ffffffffffffffffffffffffffffffffffffffff85811691620100009004167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611014565b6001546040517f8a44689c00000000000000000000000000000000000000000000000000000000815260009182916201000090910473ffffffffffffffffffffffffffffffffffffffff1690638a44689c90610d25908a90600401612ad7565b60408051808303816000875af1158015610d43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d679190612d4a565b6001549193509150610d9a9073ffffffffffffffffffffffffffffffffffffffff87811691620100009004166000611014565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015610e07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2b9190612d6e565b905086811015610e71576040517f0c08b5bc00000000000000000000000000000000000000000000000000000000815260048101889052602481018290526044016104e6565b8015610e9857610e9873ffffffffffffffffffffffffffffffffffffffff871633836115eb565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015610f05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f299190612d6e565b90508015610f5257610f5273ffffffffffffffffffffffffffffffffffffffff871633836115eb565b610f5c3347611641565b50505050505050610f6d6001600055565b5050565b600154610100900460ff1615610fb3576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015462010000900473ffffffffffffffffffffffffffffffffffffffff16331461100c576040517f0bc3cde00000000000000000000000000000000000000000000000000000000081523360048201526024016104e6565b505050505050565b8015806110b457506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa15801561108e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b29190612d6e565b155b611140576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084016104e6565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526112149084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261179b565b505050565b606061123f848484604051806060016040528060298152602001612e12602991396118aa565b949350505050565b6002600054036112b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104e6565b6002600055565b50565b600081516000036112d057506000919050565b506020015160001a90565b60606000825167ffffffffffffffff8111156112f9576112f9611ed7565b604051908082528060200260200182016040528015611322578160200160208202803683370190505b50905060008084511161133657600061133c565b83516001015b855160010101905060008167ffffffffffffffff81111561135f5761135f611ed7565b60405190808252806020026020018201604052801561139257816020015b606081526020019060019003908161137d5790505b50905060006113b7604080516002815233602082015230818301526060810190915290565b8282815181106113c9576113c9612477565b602002602001018190525060005b87518110156114275781806001019250508781815181106113fa576113fa612477565b602002602001015183838151811061141457611414612477565b60209081029190910101526001016113d7565b508551156115e15780806001019150508382828151811061144a5761144a612477565b602002602001018190525060005b86518110156115df5761150987828151811061147657611476612477565b6020026020010151600001516114e66114b38a858151811061149a5761149a612477565b6020026020010151602001518051602090810291012090565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b8984815181106114f8576114f8612477565b6020026020010151604001516119c3565b611542576040517f52bf9848000000000000000000000000000000000000000000000000000000008152600481018290526024016104e6565b86818151811061155457611554612477565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1685828151811061158857611588612477565b60200260200101818152505081806001019250508681815181106115ae576115ae612477565b6020026020010151602001518383815181106115cc576115cc612477565b6020908102919091010152600101611458565b505b5095945050505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526112149084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611192565b804710156116ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016104e6565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611705576040519150601f19603f3d011682016040523d82523d6000602084013e61170a565b606091505b5050905080611214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016104e6565b60006117fd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611a3e9092919063ffffffff16565b905080516000148061181e57508080602001905181019061181e9190612d87565b611214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016104e6565b60608247101561193c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016104e6565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516119659190612da4565b60006040518083038185875af1925050503d80600081146119a2576040519150601f19603f3d011682016040523d82523d6000602084013e6119a7565b606091505b50915091506119b887838387611a4d565b979650505050505050565b60008060006119d28585611aed565b909250905060008160048111156119eb576119eb612db6565b148015611a2357508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611a345750611a34868686611b32565b9695505050505050565b606061123f84846000856118aa565b60608315611ae3578251600003611adc5773ffffffffffffffffffffffffffffffffffffffff85163b611adc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104e6565b508161123f565b61123f8383611c8f565b6000808251604103611b235760208301516040840151606085015160001a611b1787828585611cd3565b94509450505050611b2b565b506000905060025b9250929050565b60008060008573ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b8686604051602401611b69929190612de5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051611bf29190612da4565b600060405180830381855afa9150503d8060008114611c2d576040519150601f19603f3d011682016040523d82523d6000602084013e611c32565b606091505b5091509150818015611c4657506020815110155b8015611a34575080517f1626ba7e0000000000000000000000000000000000000000000000000000000090611c849083016020908101908401612d6e565b149695505050505050565b815115611c9f5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e69190612dfe565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611d0a5750600090506003611db9565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611d5e573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611db257600060019250925050611db9565b9150600090505b94509492505050565b600060208284031215611dd457600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611e0457600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146112ba57600080fd5b60008060008060008060a08789031215611e4657600080fd5b8635611e5181611e0b565b95506020870135611e6181611e0b565b94506040870135935060608701359250608087013567ffffffffffffffff80821115611e8c57600080fd5b818901915089601f830112611ea057600080fd5b813581811115611eaf57600080fd5b8a6020828501011115611ec157600080fd5b6020830194508093505050509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611f2957611f29611ed7565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611f7657611f76611ed7565b604052919050565b600067ffffffffffffffff821115611f9857611f98611ed7565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f830112611fd557600080fd5b8135611fe8611fe382611f7e565b611f2f565b818152846020838601011115611ffd57600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561202c57600080fd5b813567ffffffffffffffff81111561204357600080fd5b61123f84828501611fc4565b60006020828403121561206157600080fd5b813567ffffffffffffffff81111561207857600080fd5b820160608185031215611e0457600080fd5b6000806040838503121561209d57600080fd5b823567ffffffffffffffff8111156120b457600080fd5b830160a081860312156120c657600080fd5b946020939093013593505050565b6000806000606084860312156120e957600080fd5b83356120f481611e0b565b9250602084013561210481611e0b565b9150604084013567ffffffffffffffff81111561212057600080fd5b61212c86828701611fc4565b9150509250925092565b60005b83811015612151578181015183820152602001612139565b50506000910152565b600082601f83011261216b57600080fd5b8151612179611fe382611f7e565b81815284602083860101111561218e57600080fd5b61123f826020830160208701612136565b600082601f8301126121b057600080fd5b8151602067ffffffffffffffff8211156121cc576121cc611ed7565b8160051b6121db828201611f2f565b92835284810182019282810190878511156121f557600080fd5b83870192505b848310156119b8578251825291830191908301906121fb565b60006020828403121561222657600080fd5b815167ffffffffffffffff8082111561223e57600080fd5b908301906060828603121561225257600080fd5b61225a611f06565b825161226581611e0b565b815260208301518281111561227957600080fd5b83016060818803121561228b57600080fd5b612293611f06565b815161229e81611e0b565b81526020820151848111156122b257600080fd5b6122be8982850161215a565b6020830152506040820151848111156122d657600080fd5b6122e28982850161219f565b604083015250806020840152505060408301518281111561230257600080fd5b61230e8782860161215a565b60408301525095945050505050565b60008151808452612335816020860160208601612136565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b838110156123975781518752958201959082019060010161237b565b509495945050505050565b600073ffffffffffffffffffffffffffffffffffffffff80851683526040602084015280845116604084015260208401516060808501528181511660a085015260208101519150606060c08501526123fe61010085018361231d565b9150604081015190507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff608483030160e085015261243b8282612367565b91505060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848303016080850152611a34828261231d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6060815260006124b9606083018661231d565b82810360208401526124cb8186612367565b90508281036040840152611a348185612367565b6000806000606084860312156124f457600080fd5b83516124ff81611e0b565b602085015190935061251081611e0b565b604085015190925061252181611e0b565b809150509250925092565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261256157600080fd5b83018035915067ffffffffffffffff82111561257c57600080fd5b6020019150600581901b3603821315611b2b57600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818336030181126125c857600080fd5b9190910192915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126125c857600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261263b57600080fd5b83018035915067ffffffffffffffff82111561265657600080fd5b6020019150606081023603821315611b2b57600080fd5b60006020828403121561267f57600080fd5b8135611e0481611e0b565b60006080820173ffffffffffffffffffffffffffffffffffffffff87168352602086818501528560408501526080606085015281855180845260a08601915060a08160051b870101935082870160005b82811015612726577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60888703018452612714868351612367565b955092840192908401906001016126da565b50939a9950505050505050505050565b6000806040838503121561274957600080fd5b825167ffffffffffffffff8082111561276157600080fd5b61276d8683870161219f565b9350602085015191508082111561278357600080fd5b506127908582860161219f565b9150509250929050565b82815260406020820152600061123f6040830184612367565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126127e857600080fd5b830160208101925035905067ffffffffffffffff81111561280857600080fd5b8060051b3603821315611b2b57600080fd5b80151581146112ba57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261285d57600080fd5b830160208101925035905067ffffffffffffffff81111561287d57600080fd5b606081023603821315611b2b57600080fd5b818352600060208085019450826000805b868110156128ff5782356128b381611e0b565b73ffffffffffffffffffffffffffffffffffffffff1688528284013560ff81168082146128de578384fd5b898601525060408381013590890152606097880197909201916001016128a0565b50959695505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261294057600080fd5b830160208101925035905067ffffffffffffffff81111561296057600080fd5b803603821315611b2b57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b81835260006020808501808196506005915085821b81018560005b88811015612ac9578383038a5281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1893603018112612a1257600080fd5b880160608135612a2181611e0b565b73ffffffffffffffffffffffffffffffffffffffff168552612a45828901836127b3565b828a8801528083880152608092507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811115612a8057600080fd5b881b808288850137860190506040612a9a8482018561290b565b9450838884030182890152612ab2848401868361296f565b9e8b019e97505050938801935050506001016129d3565b509098975050505050505050565b6000602080835260c083018435828501526040828601358186015260608187013581870152612b08818801886127b3565b60a060808981018290529582905260e095868a01600584901b8b0188018560005b86811015612cf3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff208e840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81893603018112612b8a57600080fd5b88018035368290037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21018112612bbf57600080fd5b86855281018035612bcf81611e0b565b73ffffffffffffffffffffffffffffffffffffffff90811686890152818f013590612bf98261281a565b901515868a0152818d013590612c0e82611e0b565b90811660c0870152818c013590612c2482611e0b565b908116868f01528188013590612c3982611e0b565b16610100860152612c4c81890182612828565b8e610120880152612c626101608801828461288f565b915050612c7260c0830183612828565b92507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8087830301610140880152612caa82848361288f565b925050508d8201358e8601528b8201358c860152612cca8b8301836127b3565b92508582038c870152612cde8284836129b8565b968f019695505050918c019150600101612b29565b5050612d01838e018e61290b565b9a5098507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08c820301848d0152612d39818b8b61296f565b9d9c50505050505050505050505050565b60008060408385031215612d5d57600080fd5b505080516020909101519092909150565b600060208284031215612d8057600080fd5b5051919050565b600060208284031215612d9957600080fd5b8151611e048161281a565b600082516125c8818460208701612136565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82815260406020820152600061123f604083018461231d565b602081526000611e04602083018461231d56fe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
    "sourceMap": "472:1277:159:-:0;;;615:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:22;394:75:159;1821:22:22;1109:11:80;;;;402:66:159;;738:6;;402:66;;738:6;;1075:46:80;;402:66:159;;1075:23:80;:46::i;:::-;1188:11;;;;1136:64;;;;;;1143:10;;1179:4;;1136:64;:::i;:::-;;;;;;;;1250:15;;1210:56;;:39;:56::i;:::-;-1:-1:-1;2674:22:156::1;::::0;-1:-1:-1;2674:20:156::1;:22::i;:::-;2517:186:::0;;615:137:159;472:1277;;1424:292:150;1538:16;;;;;;1568:28;;;1564:112;;1619:46;;-1:-1:-1;;;1619:46:150;;;;;3082:25:190;;;3123:18;;;3116:34;;;3055:18;;1619:46:150;;;;;;;;1564:112;1685:24;1703:5;1685:17;:24::i;:::-;1506:210;1424:292;;:::o;1308:309:95:-;1513:16;;;1371:26;1513:16;;;;;;1531;;;;;;;;;;-1:-1:-1;;;1460:88:95;;;1371:26;;;;;-1:-1:-1;;;;;1460:48:95;;;;;:88;;1513:16;1460:88;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;1308:309:95:o;5917:280:21:-;5985:13;;;;;;;5984:14;5976:66;;;;-1:-1:-1;;;5976:66:21;;5031:2:190;5976:66:21;;;5013:21:190;5070:2;5050:18;;;5043:30;5109:34;5089:18;;;5082:62;-1:-1:-1;;;5160:18:190;;;5153:37;5207:19;;5976:66:21;4829:403:190;5976:66:21;6056:12;;6072:15;6056:12;;;:31;6052:139;;6103:12;:30;;-1:-1:-1;;6103:30:21;6118:15;6103:30;;;;;;6152:28;;5379:36:190;;;6152:28:21;;5367:2:190;5352:18;6152:28:21;;;;;;;6052:139;5917:280::o;1075:155:150:-;1151:19;1164:5;1151:12;:19::i;:::-;1146:78;;1207:5;1193:20;;-1:-1:-1;;;1193:20:150;;;;;;;;:::i;1146:78::-;1075:155;:::o;550:376::-;615:4;650:1;635:5;:12;:16;631:34;;;-1:-1:-1;660:5:150;;550:376;-1:-1:-1;550:376:150:o;631:34::-;-1:-1:-1;846:1:150;835:13;829:20;-1:-1:-1;;;;;825:32:150;667:18:149;883:36:150;;550:376::o;14:127:190:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:256;217:4;211:11;;;249:17;;-1:-1:-1;;;;;281:34:190;;317:22;;;278:62;275:88;;;343:18;;:::i;:::-;379:4;372:24;146:256;:::o;407:275::-;478:2;472:9;543:2;524:13;;-1:-1:-1;;520:27:190;508:40;;-1:-1:-1;;;;;563:34:190;;599:22;;;560:62;557:88;;;625:18;;:::i;:::-;661:2;654:22;407:275;;-1:-1:-1;407:275:190:o;687:131::-;-1:-1:-1;;;;;762:31:190;;752:42;;742:70;;808:1;805;798:12;823:250;908:1;918:113;932:6;929:1;926:13;918:113;;;1008:11;;;1002:18;989:11;;;982:39;954:2;947:10;918:113;;;-1:-1:-1;;1065:1:190;1047:16;;1040:27;823:250::o;1078:1160::-;1211:6;1242:2;1285;1273:9;1264:7;1260:23;1256:32;1253:52;;;1301:1;1298;1291:12;1253:52;1328:16;;-1:-1:-1;;;;;1393:14:190;;;1390:34;;;1420:1;1417;1410:12;1390:34;1443:22;;;;1499:4;1481:16;;;1477:27;1474:47;;;1517:1;1514;1507:12;1474:47;1543:21;;:::i;:::-;1594:2;1588:9;1606:33;1631:7;1606:33;:::i;:::-;1648:22;;1701:11;;;1695:18;1725:16;;;1722:36;;;1754:1;1751;1744:12;1722:36;1785:8;1781:2;1777:17;1767:27;;;1832:7;1825:4;1821:2;1817:13;1813:27;1803:55;;1854:1;1851;1844:12;1803:55;1883:2;1877:9;1905:2;1901;1898:10;1895:36;;;1911:18;;:::i;:::-;1953:53;1996:2;1977:13;;-1:-1:-1;;1973:27:190;1969:36;;1953:53;:::i;:::-;1940:66;;2029:2;2022:5;2015:17;2069:7;2064:2;2059;2055;2051:11;2047:20;2044:33;2041:53;;;2090:1;2087;2080:12;2041:53;2103:67;2167:2;2162;2155:5;2151:14;2146:2;2142;2138:11;2103:67;:::i;:::-;-1:-1:-1;2186:14:190;;;2179:29;-1:-1:-1;2190:5:190;1078:1160;-1:-1:-1;;;1078:1160:190:o;2243:270::-;2284:3;2322:5;2316:12;2349:6;2344:3;2337:19;2365:76;2434:6;2427:4;2422:3;2418:14;2411:4;2404:5;2400:16;2365:76;:::i;:::-;2495:2;2474:15;-1:-1:-1;;2470:29:190;2461:39;;;;2502:4;2457:50;;2243:270;-1:-1:-1;;2243:270:190:o;2518:385::-;2750:1;2746;2741:3;2737:11;2733:19;2725:6;2721:32;2710:9;2703:51;2790:6;2785:2;2774:9;2770:18;2763:34;2833:2;2828;2817:9;2813:18;2806:30;2684:4;2853:44;2893:2;2882:9;2878:18;2870:6;2853:44;:::i;:::-;2845:52;2518:385;-1:-1:-1;;;;;2518:385:190:o;3161:435::-;3214:3;3252:5;3246:12;3279:6;3274:3;3267:19;3305:4;3334:2;3329:3;3325:12;3318:19;;3371:2;3364:5;3360:14;3392:1;3402:169;3416:6;3413:1;3410:13;3402:169;;;3477:13;;3465:26;;3511:12;;;;3546:15;;;;3438:1;3431:9;3402:169;;;-1:-1:-1;3587:3:190;;3161:435;-1:-1:-1;;;;;3161:435:190:o;3601:646::-;3958:2;3947:9;3940:21;3997:1;3992:2;3981:9;3977:18;3970:29;4037:3;4030:4;4019:9;4015:20;4008:33;3921:4;4064:57;4116:3;4105:9;4101:19;4093:6;4064:57;:::i;:::-;4169:9;4161:6;4157:22;4152:2;4141:9;4137:18;4130:50;4197:44;4234:6;4226;4197:44;:::i;4252:572::-;4393:6;4401;4409;4462:2;4450:9;4441:7;4437:23;4433:32;4430:52;;;4478:1;4475;4468:12;4430:52;4510:9;4504:16;4529:31;4554:5;4529:31;:::i;:::-;4629:2;4614:18;;4608:25;4579:5;;-1:-1:-1;4642:33:190;4608:25;4642:33;:::i;:::-;4746:2;4731:18;;4725:25;4694:7;;-1:-1:-1;4759:33:190;4725:25;4759:33;:::i;:::-;4811:7;4801:17;;;4252:572;;;;;:::o;5426:217::-;5573:2;5562:9;5555:21;5536:4;5593:44;5633:2;5622:9;5618:18;5610:6;5593:44;:::i;:::-;5585:52;5426:217;-1:-1:-1;;;5426:217:190:o;:::-;472:1277:159;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100965760003560e01c806371c1dea71161006957806389448c3a1161004e57806389448c3a1461021c57806398da8d6a14610232578063c3b7c7c31461025257610096565b806371c1dea7146101bc578063886d1650146101e957610096565b806301ffc9a7146100e7578063059bebe61461011c578063439fab911461013c57806361bb39e41461016a575b3480156100a257600080fd5b50600154610100900460ff16156100e5576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b005b3480156100f357600080fd5b50610107610102366004611dc2565b610265565b60405190151581526020015b60405180910390f35b34801561012857600080fd5b506100e5610137366004611e2d565b61034a565b34801561014857600080fd5b5061015c61015736600461201a565b610425565b604051908152602001610113565b34801561017657600080fd5b506004546101979073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610113565b3480156101c857600080fd5b506003546101979073ffffffffffffffffffffffffffffffffffffffff1681565b3480156101f557600080fd5b506001546101979062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b34801561022857600080fd5b5061015c60025481565b34801561023e57600080fd5b5061015c61024d36600461204f565b61080d565b6100e561026036600461208a565b610841565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f059bebe60000000000000000000000000000000000000000000000000000000014806102f857507fffffffff0000000000000000000000000000000000000000000000000000000082167f439fab9100000000000000000000000000000000000000000000000000000000145b8061034457507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b610358868686868686610f71565b60008080610368848601866120d4565b9194509250905061039173ffffffffffffffffffffffffffffffffffffffff8a16846000611014565b6103d273ffffffffffffffffffffffffffffffffffffffff8a16847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611014565b60006103f573ffffffffffffffffffffffffffffffffffffffff84168347611219565b905061041973ffffffffffffffffffffffffffffffffffffffff8b16856000611014565b50505050505050505050565b600154600090610100900460ff161580801561044557506001805460ff16105b8061045e5750303b15801561045e57506001805460ff16145b6104ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001681179055801561054c57600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610554611247565b60008380602001905181019061056a9190612214565b905080516001805473ffffffffffffffffffffffffffffffffffffffff90921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff9092169190911790556040517f61f559321bdc3ad3a0e3b8692a91eaffa9773753bfec4e5f4c344cfed245cab7906105eb90339084906123a2565b60405180910390a160006106068260200151602001516112bd565b11156107775760408051600180825281830190925260009182919060208083019080368337019050509050600081600061ffff168151811061064a5761064a612477565b6020908102919091018101919091528381015180519181015160409182015191517f31a66b6500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909316926331a66b65926106bc929186906004016124a6565b6060604051808303816000875af11580156106db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ff91906124df565b600480547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff94851617909155600380549091169390921692909217905560201b77ffffffffffffffffffffffffffffffffffffffff000000001660025550505b7fe0e57eda3f08f2a93bbe980d3df7f9c315eac41181f58b865a13d917fe769fc39250506107a56001600055565b801561080757600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50919050565b60006040517faf1fbb2100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610849611247565b600154610100900460ff161561088b576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610898606083018361252c565b90506000036108d3576040517f9c95219f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006108e2606084018461252c565b60008181106108f3576108f3612477565b90506020028101906109059190612594565b61090f90806125d2565b61091d9060a0810190612606565b61092a606086018661252c565b600081811061093b5761093b612477565b905060200281019061094d9190612594565b6020013581811061096057610960612477565b610976926020606090920201908101915061266d565b90506000610987606085018561252c565b600081811061099857610998612477565b90506020028101906109aa9190612594565b6109b490806125d2565b6109c29060c0810190612606565b6109cf606087018761252c565b60008181106109e0576109e0612477565b90506020028101906109f29190612594565b60400135818110610a0557610a05612477565b610a1b926020606090920201908101915061266d565b6002549091508015610c4a57600354600454600091829173ffffffffffffffffffffffffffffffffffffffff91821691636715f82591168386610af582604051908082528060200260200182016040528015610a8b57816020015b6060815260200190600190039081610a765790505b506040805160008082526020820190925290610aef565b610adc6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b815260200190600190039081610aa25790505b506112db565b6040518563ffffffff1660e01b8152600401610b14949392919061268a565b600060405180830381865afa158015610b31573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610b779190810190612736565b8151919350915015610bb5576040517f379fa94000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805115610c4757600480546040517f946aadc600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169163946aadc691610c149160009186910161279a565b600060405180830381600087803b158015610c2e57600080fd5b505af1158015610c42573d6000803e3d6000fd5b505050505b50505b600154610c789073ffffffffffffffffffffffffffffffffffffffff85811691620100009004166000611014565b600154610cc59073ffffffffffffffffffffffffffffffffffffffff85811691620100009004167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611014565b6001546040517f8a44689c00000000000000000000000000000000000000000000000000000000815260009182916201000090910473ffffffffffffffffffffffffffffffffffffffff1690638a44689c90610d25908a90600401612ad7565b60408051808303816000875af1158015610d43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d679190612d4a565b6001549193509150610d9a9073ffffffffffffffffffffffffffffffffffffffff87811691620100009004166000611014565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015610e07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2b9190612d6e565b905086811015610e71576040517f0c08b5bc00000000000000000000000000000000000000000000000000000000815260048101889052602481018290526044016104e6565b8015610e9857610e9873ffffffffffffffffffffffffffffffffffffffff871633836115eb565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015610f05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f299190612d6e565b90508015610f5257610f5273ffffffffffffffffffffffffffffffffffffffff871633836115eb565b610f5c3347611641565b50505050505050610f6d6001600055565b5050565b600154610100900460ff1615610fb3576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015462010000900473ffffffffffffffffffffffffffffffffffffffff16331461100c576040517f0bc3cde00000000000000000000000000000000000000000000000000000000081523360048201526024016104e6565b505050505050565b8015806110b457506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa15801561108e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b29190612d6e565b155b611140576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084016104e6565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526112149084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261179b565b505050565b606061123f848484604051806060016040528060298152602001612e12602991396118aa565b949350505050565b6002600054036112b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104e6565b6002600055565b50565b600081516000036112d057506000919050565b506020015160001a90565b60606000825167ffffffffffffffff8111156112f9576112f9611ed7565b604051908082528060200260200182016040528015611322578160200160208202803683370190505b50905060008084511161133657600061133c565b83516001015b855160010101905060008167ffffffffffffffff81111561135f5761135f611ed7565b60405190808252806020026020018201604052801561139257816020015b606081526020019060019003908161137d5790505b50905060006113b7604080516002815233602082015230818301526060810190915290565b8282815181106113c9576113c9612477565b602002602001018190525060005b87518110156114275781806001019250508781815181106113fa576113fa612477565b602002602001015183838151811061141457611414612477565b60209081029190910101526001016113d7565b508551156115e15780806001019150508382828151811061144a5761144a612477565b602002602001018190525060005b86518110156115df5761150987828151811061147657611476612477565b6020026020010151600001516114e66114b38a858151811061149a5761149a612477565b6020026020010151602001518051602090810291012090565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b8984815181106114f8576114f8612477565b6020026020010151604001516119c3565b611542576040517f52bf9848000000000000000000000000000000000000000000000000000000008152600481018290526024016104e6565b86818151811061155457611554612477565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1685828151811061158857611588612477565b60200260200101818152505081806001019250508681815181106115ae576115ae612477565b6020026020010151602001518383815181106115cc576115cc612477565b6020908102919091010152600101611458565b505b5095945050505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526112149084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611192565b804710156116ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016104e6565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611705576040519150601f19603f3d011682016040523d82523d6000602084013e61170a565b606091505b5050905080611214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016104e6565b60006117fd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611a3e9092919063ffffffff16565b905080516000148061181e57508080602001905181019061181e9190612d87565b611214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016104e6565b60608247101561193c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016104e6565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516119659190612da4565b60006040518083038185875af1925050503d80600081146119a2576040519150601f19603f3d011682016040523d82523d6000602084013e6119a7565b606091505b50915091506119b887838387611a4d565b979650505050505050565b60008060006119d28585611aed565b909250905060008160048111156119eb576119eb612db6565b148015611a2357508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611a345750611a34868686611b32565b9695505050505050565b606061123f84846000856118aa565b60608315611ae3578251600003611adc5773ffffffffffffffffffffffffffffffffffffffff85163b611adc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104e6565b508161123f565b61123f8383611c8f565b6000808251604103611b235760208301516040840151606085015160001a611b1787828585611cd3565b94509450505050611b2b565b506000905060025b9250929050565b60008060008573ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b8686604051602401611b69929190612de5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051611bf29190612da4565b600060405180830381855afa9150503d8060008114611c2d576040519150601f19603f3d011682016040523d82523d6000602084013e611c32565b606091505b5091509150818015611c4657506020815110155b8015611a34575080517f1626ba7e0000000000000000000000000000000000000000000000000000000090611c849083016020908101908401612d6e565b149695505050505050565b815115611c9f5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e69190612dfe565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611d0a5750600090506003611db9565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611d5e573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611db257600060019250925050611db9565b9150600090505b94509492505050565b600060208284031215611dd457600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611e0457600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146112ba57600080fd5b60008060008060008060a08789031215611e4657600080fd5b8635611e5181611e0b565b95506020870135611e6181611e0b565b94506040870135935060608701359250608087013567ffffffffffffffff80821115611e8c57600080fd5b818901915089601f830112611ea057600080fd5b813581811115611eaf57600080fd5b8a6020828501011115611ec157600080fd5b6020830194508093505050509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611f2957611f29611ed7565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611f7657611f76611ed7565b604052919050565b600067ffffffffffffffff821115611f9857611f98611ed7565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f830112611fd557600080fd5b8135611fe8611fe382611f7e565b611f2f565b818152846020838601011115611ffd57600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561202c57600080fd5b813567ffffffffffffffff81111561204357600080fd5b61123f84828501611fc4565b60006020828403121561206157600080fd5b813567ffffffffffffffff81111561207857600080fd5b820160608185031215611e0457600080fd5b6000806040838503121561209d57600080fd5b823567ffffffffffffffff8111156120b457600080fd5b830160a081860312156120c657600080fd5b946020939093013593505050565b6000806000606084860312156120e957600080fd5b83356120f481611e0b565b9250602084013561210481611e0b565b9150604084013567ffffffffffffffff81111561212057600080fd5b61212c86828701611fc4565b9150509250925092565b60005b83811015612151578181015183820152602001612139565b50506000910152565b600082601f83011261216b57600080fd5b8151612179611fe382611f7e565b81815284602083860101111561218e57600080fd5b61123f826020830160208701612136565b600082601f8301126121b057600080fd5b8151602067ffffffffffffffff8211156121cc576121cc611ed7565b8160051b6121db828201611f2f565b92835284810182019282810190878511156121f557600080fd5b83870192505b848310156119b8578251825291830191908301906121fb565b60006020828403121561222657600080fd5b815167ffffffffffffffff8082111561223e57600080fd5b908301906060828603121561225257600080fd5b61225a611f06565b825161226581611e0b565b815260208301518281111561227957600080fd5b83016060818803121561228b57600080fd5b612293611f06565b815161229e81611e0b565b81526020820151848111156122b257600080fd5b6122be8982850161215a565b6020830152506040820151848111156122d657600080fd5b6122e28982850161219f565b604083015250806020840152505060408301518281111561230257600080fd5b61230e8782860161215a565b60408301525095945050505050565b60008151808452612335816020860160208601612136565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b838110156123975781518752958201959082019060010161237b565b509495945050505050565b600073ffffffffffffffffffffffffffffffffffffffff80851683526040602084015280845116604084015260208401516060808501528181511660a085015260208101519150606060c08501526123fe61010085018361231d565b9150604081015190507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff608483030160e085015261243b8282612367565b91505060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848303016080850152611a34828261231d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6060815260006124b9606083018661231d565b82810360208401526124cb8186612367565b90508281036040840152611a348185612367565b6000806000606084860312156124f457600080fd5b83516124ff81611e0b565b602085015190935061251081611e0b565b604085015190925061252181611e0b565b809150509250925092565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261256157600080fd5b83018035915067ffffffffffffffff82111561257c57600080fd5b6020019150600581901b3603821315611b2b57600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818336030181126125c857600080fd5b9190910192915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126125c857600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261263b57600080fd5b83018035915067ffffffffffffffff82111561265657600080fd5b6020019150606081023603821315611b2b57600080fd5b60006020828403121561267f57600080fd5b8135611e0481611e0b565b60006080820173ffffffffffffffffffffffffffffffffffffffff87168352602086818501528560408501526080606085015281855180845260a08601915060a08160051b870101935082870160005b82811015612726577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60888703018452612714868351612367565b955092840192908401906001016126da565b50939a9950505050505050505050565b6000806040838503121561274957600080fd5b825167ffffffffffffffff8082111561276157600080fd5b61276d8683870161219f565b9350602085015191508082111561278357600080fd5b506127908582860161219f565b9150509250929050565b82815260406020820152600061123f6040830184612367565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126127e857600080fd5b830160208101925035905067ffffffffffffffff81111561280857600080fd5b8060051b3603821315611b2b57600080fd5b80151581146112ba57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261285d57600080fd5b830160208101925035905067ffffffffffffffff81111561287d57600080fd5b606081023603821315611b2b57600080fd5b818352600060208085019450826000805b868110156128ff5782356128b381611e0b565b73ffffffffffffffffffffffffffffffffffffffff1688528284013560ff81168082146128de578384fd5b898601525060408381013590890152606097880197909201916001016128a0565b50959695505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261294057600080fd5b830160208101925035905067ffffffffffffffff81111561296057600080fd5b803603821315611b2b57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b81835260006020808501808196506005915085821b81018560005b88811015612ac9578383038a5281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1893603018112612a1257600080fd5b880160608135612a2181611e0b565b73ffffffffffffffffffffffffffffffffffffffff168552612a45828901836127b3565b828a8801528083880152608092507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811115612a8057600080fd5b881b808288850137860190506040612a9a8482018561290b565b9450838884030182890152612ab2848401868361296f565b9e8b019e97505050938801935050506001016129d3565b509098975050505050505050565b6000602080835260c083018435828501526040828601358186015260608187013581870152612b08818801886127b3565b60a060808981018290529582905260e095868a01600584901b8b0188018560005b86811015612cf3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff208e840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81893603018112612b8a57600080fd5b88018035368290037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21018112612bbf57600080fd5b86855281018035612bcf81611e0b565b73ffffffffffffffffffffffffffffffffffffffff90811686890152818f013590612bf98261281a565b901515868a0152818d013590612c0e82611e0b565b90811660c0870152818c013590612c2482611e0b565b908116868f01528188013590612c3982611e0b565b16610100860152612c4c81890182612828565b8e610120880152612c626101608801828461288f565b915050612c7260c0830183612828565b92507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8087830301610140880152612caa82848361288f565b925050508d8201358e8601528b8201358c860152612cca8b8301836127b3565b92508582038c870152612cde8284836129b8565b968f019695505050918c019150600101612b29565b5050612d01838e018e61290b565b9a5098507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08c820301848d0152612d39818b8b61296f565b9d9c50505050505050505050505050565b60008060408385031215612d5d57600080fd5b505080516020909101519092909150565b600060208284031215612d8057600080fd5b5051919050565b600060208284031215612d9957600080fd5b8151611e048161281a565b600082516125c8818460208701612136565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82815260406020820152600061123f604083018461231d565b602081526000611e04602083018461231d56fe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
    "sourceMap": "472:1277:159:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6596:13:21;;;;;;;3175:69:156;;;3219:14;;;;;;;;;;;;;;3175:69;472:1277:159;2737:271:156;;;;;;;;;;-1:-1:-1;2737:271:156;;;;;:::i;:::-;;:::i;:::-;;;516:14:190;;509:22;491:41;;479:2;464:18;2737:271:156;;;;;;;;803:867:159;;;;;;;;;;-1:-1:-1;803:867:159;;;;;:::i;:::-;;:::i;3448:1658:156:-;;;;;;;;;;-1:-1:-1;3448:1658:156;;;;;:::i;:::-;;:::i;:::-;;;3686:25:190;;;3674:2;3659:18;3448:1658:156;3540:177:190;2474:36:156;;;;;;;;;;-1:-1:-1;2474:36:156;;;;;;;;;;;3927:42:190;3915:55;;;3897:74;;3885:2;3870:18;2474:36:156;3722:255:190;2442:26:156;;;;;;;;;;-1:-1:-1;2442:26:156;;;;;;;;2365:30;;;;;;;;;;-1:-1:-1;2365:30:156;;;;;;;;;;;2401:35;;;;;;;;;;;;;;;;3267:142;;;;;;;;;;-1:-1:-1;3267:142:156;;;;;:::i;:::-;;:::i;5158:2802::-;;;;;;:::i;:::-;;:::i;2737:271::-;2822:4;2845:55;;;2860:40;2845:55;;:104;;-1:-1:-1;2904:45:156;;;2919:30;2904:45;2845:104;:156;;;-1:-1:-1;952:25:34;937:40;;;;2965:36:156;2838:163;2737:271;-1:-1:-1;;2737:271:156:o;803:867:159:-;1029:95;1048:10;1060:11;1073:15;1090:17;1109:14;;1029:18;:95::i;:::-;1135:15;;;1214:53;;;;1225:14;1214:53;:::i;:::-;1134:133;;-1:-1:-1;1134:133:159;-1:-1:-1;1134:133:159;-1:-1:-1;1278:42:159;:30;;;1134:133;1318:1;1278:30;:42::i;:::-;1330:58;:30;;;1361:7;1370:17;1330:30;:58::i;:::-;1398:23;1424:70;:26;;;1451:19;1472:21;1424:26;:70::i;:::-;1398:96;-1:-1:-1;1621:42:159;:30;;;1652:7;1661:1;1621:30;:42::i;:::-;1019:651;;;;803:867;;;;;;:::o;3448:1658:156:-;3291:13:21;;3530:7:156;;3291:13:21;;;;;3290:14;;3336:34;;;;-1:-1:-1;3369:1:21;3354:12;;;;:16;3336:34;3335:97;;;-1:-1:-1;3404:4:21;1702:19:28;:23;;;3376:55:21;;-1:-1:-1;3414:12:21;;;;;:17;3376:55;3314:190;;;;;;;6417:2:190;3314:190:21;;;6399:21:190;6456:2;6436:18;;;6429:30;6495:34;6475:18;;;6468:62;6566:16;6546:18;;;6539:44;6600:19;;3314:190:21;;;;;;;;;3529:1;3514:16;;;;;;;;3540:65;;;;3590:4;3574:20;;;;;;;;3540:65;2261:21:22::1;:19;:21::i;:::-;3549:46:156::2;3609:4;3598:52;;;;;;;;;;;;:::i;:::-;3549:101:::0;-1:-1:-1;3862:16:156;;3836:10:::2;:43:::0;;::::2;::::0;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;3954:30:::2;::::0;::::2;::::0;::::2;::::0;3965:10:::2;::::0;3862:6;;3954:30:::2;:::i;:::-;;;;;;;;4207:1;4148:56;4172:6;:22;;;:31;;;4148:23;:56::i;:::-;:60;4144:917;;;4288:16;::::0;;4302:1:::2;4288:16:::0;;;;;::::2;::::0;;;4224:18:::2;::::0;;;4288:16;::::2;::::0;;::::2;::::0;;::::2;::::0;::::2;;::::0;-1:-1:-1;4288:16:156::2;4257:47;;1976:1;4318:11;1886:1;4318:56;;;;;;;;;;:::i;:::-;;::::0;;::::2;::::0;;;;;;:81;;;;4777:22;;::::2;::::0;:31;;4843;;::::2;::::0;4876:32:::2;::::0;;::::2;::::0;4777:158;;;;;:48:::2;::::0;;::::2;::::0;::::2;::::0;:158:::2;::::0;4843:31;4910:11;;4777:158:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4752:9;4745:190:::0;;;;;::::2;;::::0;;::::2;;::::0;;;4746:4:::2;4745:190:::0;;;;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;1048:2:96;1016:34;;;4949:12:156::2;:101:::0;-1:-1:-1;;4144:917:156::2;191:36:47;5071:28:156;;;2303:20:22::1;1716:1:::0;2809:7;:22;2629:209;2303:20:::1;3629:14:21::0;3625:99;;;3659:13;:21;;;;;;3699:14;;13163:36:190;;;3699:14:21;;13151:2:190;13136:18;3699:14:21;;;;;;;3625:99;3258:472;3448:1658:156;;;:::o;3267:142::-;3353:7;3379:23;;;;;;;;;;;;;;5158:2802;2261:21:22;:19;:21::i;:::-;6596:13:21;;;;;;;3175:69:156::1;;;3219:14;;;;;;;;;;;;;;3175:69;5409:17:::2;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;:24;;5437:1;5409:29:::0;5405:77:::2;;5461:10;;;;;;;;;;;;;;5405:77;5492:24;5519:17;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;5537:1;5519:20;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:26;::::0;;::::2;:::i;:::-;:38;::::0;::::2;::::0;::::2;::::0;::::2;:::i;:::-;5558:17;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;5576:1;5558:20;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:33;;;5519:73;;;;;;;:::i;:::-;:79;::::0;::::2;:73;::::0;;::::2;;:79:::0;;::::2;::::0;-1:-1:-1;5519:79:156::2;:::i;:::-;5492:106:::0;-1:-1:-1;5608:25:156::2;5636:17;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;5654:1;5636:20;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:26;::::0;;::::2;:::i;:::-;:39;::::0;::::2;::::0;::::2;::::0;::::2;:::i;:::-;5676:17;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;5694:1;5676:20;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:34;;;5636:75;;;;;;;:::i;:::-;:81;::::0;::::2;:75;::::0;;::::2;;:81:::0;;::::2;::::0;-1:-1:-1;5636:81:156::2;:::i;:::-;5812:12;::::0;5608:109;;-1:-1:-1;5838:36:156;;5834:644:::2;;5939:4;::::0;5966:9:::2;::::0;5891:22:::2;::::0;;;5939:4:::2;::::0;;::::2;::::0;:9:::2;::::0;5966::::2;5891:22:::0;6034:8;6060:62:::2;5891:22:::0;6077:18:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;6097:24:156::2;::::0;;6119:1:::2;6097:24:::0;;;::::2;::::0;::::2;::::0;;;;::::2;::::0;::::2;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;6097:24:156::2;;;;;;;;;;;;;;;;;6060:16;:62::i;:::-;5939:197;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;::::0;;::::2;::::0;::::2;::::0;::::2;;::::0;::::2;::::0;;;::::2;::::0;::::2;:::i;:::-;6216:12:::0;;5890:246;;-1:-1:-1;5890:246:156;-1:-1:-1;6216:16:156;6212:85:::2;;6259:23;;;;;;;;;;;;;;6212:85;6376:10:::0;;:14;6372:96:::2;;6410:9;::::0;;:43:::2;::::0;;;;:9:::2;::::0;;::::2;::::0;:13:::2;::::0;:43:::2;::::0;:9:::2;::::0;6449:3;;6410:43:::2;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;6372:96;5876:602;;5834:644;6533:10;::::0;6488:60:::2;::::0;6533:10:::2;6488:36:::0;;::::2;::::0;6533:10;;::::2;;6546:1;6488:36;:60::i;:::-;6603:10;::::0;6558:76:::2;::::0;6603:10:::2;6558:36:::0;;::::2;::::0;6603:10;;::::2;;6616:17;6558:36;:76::i;:::-;6688:10;::::0;:33:::2;::::0;;;;6645:18:::2;::::0;;;6688:10;;;::::2;;;::::0;:21:::2;::::0;:33:::2;::::0;6710:10;;6688:33:::2;;;:::i;:::-;;::::0;::::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6811:10;::::0;6644:77;;-1:-1:-1;6644:77:156;-1:-1:-1;6766:60:156::2;::::0;6811:10:::2;6766:36:::0;;::::2;::::0;6811:10;;::::2;;6824:1;6766:36;:60::i;:::-;6916:49;::::0;;;;6959:4:::2;6916:49;::::0;::::2;3897:74:190::0;6893:20:156::2;::::0;6916:34:::2;::::0;::::2;::::0;::::2;::::0;3870:18:190;;6916:49:156::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6893:72;;6994:19;6979:12;:34;6975:120;;;7036:48;::::0;::::2;::::0;;::::2;::::0;::::2;27772:25:190::0;;;27813:18;;;27806:34;;;27745:18;;7036:48:156::2;27598:248:190::0;6975:120:156::2;7108:16:::0;;7104:110:::2;;7140:63;:37;::::0;::::2;7178:10;7190:12:::0;7140:37:::2;:63::i;:::-;7304:50;::::0;;;;7348:4:::2;7304:50;::::0;::::2;3897:74:190::0;7280:21:156::2;::::0;7304:35:::2;::::0;::::2;::::0;::::2;::::0;3870:18:190;;7304:50:156::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7280:74:::0;-1:-1:-1;7368:17:156;;7364:113:::2;;7401:65;:38;::::0;::::2;7440:10;7452:13:::0;7401:38:::2;:65::i;:::-;7892:61;7918:10;7931:21;7892:17;:61::i;:::-;5326:2634;;;;;;;2303:20:22::0;1716:1;2809:7;:22;2629:209;2303:20;5158:2802:156;;:::o;8009:262::-;6596:13:21;;;;;;;3175:69:156;;;3219:14;;;;;;;;;;;;;;3175:69;8199:10:::1;::::0;;;::::1;;;8177;:33;8173:92;;8233:21;::::0;::::1;::::0;;8243:10:::1;8233:21;::::0;::::1;3897:74:190::0;3870:18;;8233:21:156::1;3722:255:190::0;8173:92:156::1;8009:262:::0;;;;;;:::o;1818:573:27:-;2143:10;;;2142:62;;-1:-1:-1;2159:39:27;;;;;2183:4;2159:39;;;28086:34:190;2159:15:27;28156::190;;;28136:18;;;28129:43;2159:15:27;;;;;27998:18:190;;2159:39:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;2142:62;2121:163;;;;;;;28385:2:190;2121:163:27;;;28367:21:190;28424:2;28404:18;;;28397:30;28463:34;28443:18;;;28436:62;28534:24;28514:18;;;28507:52;28576:19;;2121:163:27;28183:418:190;2121:163:27;2321:62;;28810:42:190;28798:55;;2321:62:27;;;28780:74:190;28870:18;;;28863:34;;;2294:90:27;;2314:5;;2344:22;;28753:18:190;;2321:62:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2294:19;:90::i;:::-;1818:573;;;:::o;4693:224:28:-;4792:12;4823:87;4845:6;4853:4;4859:5;4823:87;;;;;;;;;;;;;;;;;:21;:87::i;:::-;4816:94;4693:224;-1:-1:-1;;;;4693:224:28:o;2336:287:22:-;1759:1;2468:7;;:19;2460:63;;;;;;;29110:2:190;2460:63:22;;;29092:21:190;29149:2;29129:18;;;29122:30;29188:33;29168:18;;;29161:61;29239:18;;2460:63:22;28908:355:190;2460:63:22;1759:1;2598:7;:18;2336:287::o;3014:65:156:-;;:::o;476:349:93:-;543:13;572:8;:15;591:1;572:20;568:59;;-1:-1:-1;615:1:93;;476:349;-1:-1:-1;476:349:93:o;568:59::-;-1:-1:-1;802:4:93;788:19;782:26;779:1;774:35;;476:349::o;7166:2290:94:-;7301:18;7359:24;7400:14;:21;7386:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7386:36:94;;7359:63;;7571:21;7645:1;7621:14;:21;:25;:57;;7677:1;7621:57;;;7649:14;:21;7673:1;7649:25;7621:57;7599:11;:18;7595:1;:22;:84;7571:108;;7694:26;7739:13;7723:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7694:59;;7767:14;7817:17;3283:4:43;3277:11;;3315:1;3301:16;;2288:10:94;3348:4:43;3337:16;;3330:27;2326:4:94;3377:16:43;;;3370:27;2211:16:94;3423::43;;3410:30;;;3277:11;2172:169:94;7817:17;7799:7;7807:6;7799:15;;;;;;;;:::i;:::-;;;;;;:35;;;;7854:9;7849:140;7873:11;:18;7869:1;:22;7849:140;;;7916:8;;;;;;;7960:11;7972:1;7960:14;;;;;;;;:::i;:::-;;;;;;;7942:7;7950:6;7942:15;;;;;;;;:::i;:::-;;;;;;;;;;:32;7893:3;;7849:140;;;-1:-1:-1;8007:21:94;;:25;8003:1408;;8052:8;;;;;;;8096:7;8078;8086:6;8078:15;;;;;;;;:::i;:::-;;;;;;:25;;;;8127:9;8122:1275;8146:14;:21;8142:1;:25;8122:1275;;;8824:284;8890:14;8905:1;8890:17;;;;;;;;:::i;:::-;;;;;;;:24;;;8944:81;8973:51;8998:14;9013:1;8998:17;;;;;;;;:::i;:::-;;;;;;;:25;;;4081:13:147;;4096:4;4077:24;;;4058:17;;4048:54;;3908:210;8973:51:94;7389:34:32;7189:15;7376:48;;;7444:4;7437:18;;;;7495:4;7479:21;;;7120:396;8944:81:94;9055:14;9070:1;9055:17;;;;;;;;:::i;:::-;;;;;;;:27;;;8824:36;:284::i;:::-;8196:1010;;9164:19;;;;;;;;3686:25:190;;;3659:18;;9164:19:94;3540:177:190;8196:1010:94;9257:14;9272:1;9257:17;;;;;;;;:::i;:::-;;;;;;;:24;;;9241:42;;9228:7;9236:1;9228:10;;;;;;;;:::i;:::-;;;;;;:55;;;;;9305:8;;;;;;;9353:14;9368:1;9353:17;;;;;;;;:::i;:::-;;;;;;;:25;;;9335:7;9343:6;9335:15;;;;;;;;:::i;:::-;;;;;;;;;;:43;8169:3;;8122:1275;;;;8003:1408;-1:-1:-1;9432:7:94;7166:2290;-1:-1:-1;;;;;7166:2290:94:o;941:175:27:-;1050:58;;28810:42:190;28798:55;;1050:58:27;;;28780:74:190;28870:18;;;28863:34;;;1023:86:27;;1043:5;;1073:23;;28753:18:190;;1050:58:27;28606:297:190;2647:312:28;2761:6;2736:21;:31;;2728:73;;;;;;;29652:2:190;2728:73:28;;;29634:21:190;29691:2;29671:18;;;29664:30;29730:31;29710:18;;;29703:59;29779:18;;2728:73:28;29450:353:190;2728:73:28;2813:12;2831:9;:14;;2853:6;2831:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2812:52;;;2882:7;2874:78;;;;;;;30220:2:190;2874:78:28;;;30202:21:190;30259:2;30239:18;;;30232:30;30298:34;30278:18;;;30271:62;30369:28;30349:18;;;30342:56;30415:19;;2874:78:28;30018:422:190;5173:642:27;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;5618:27;;;;:69;;;;;:::i;:::-;5592:95;;5705:10;:17;5726:1;5705:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5697:111;;;;;;;30897:2:190;5697:111:27;;;30879:21:190;30936:2;30916:18;;;30909:30;30975:34;30955:18;;;30948:62;31046:12;31026:18;;;31019:40;31076:19;;5697:111:27;30695:406:190;5165:446:28;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;31308:2:190;5354:81:28;;;31290:21:190;31347:2;31327:18;;;31320:30;31386:34;31366:18;;;31359:62;31457:8;31437:18;;;31430:36;31483:19;;5354:81:28;31106:402:190;5354:81:28;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:28:o;1014:366:33:-;1120:4;1137:17;1156:24;1184:33;1201:4;1207:9;1184:16;:33::i;:::-;1136:81;;-1:-1:-1;1136:81:33;-1:-1:-1;1256:26:33;1247:5;:35;;;;;;;;:::i;:::-;;:58;;;;;1299:6;1286:19;;:9;:19;;;1247:58;1246:127;;;;1322:51;1349:6;1357:4;1363:9;1322:26;:51::i;:::-;1227:146;1014:366;-1:-1:-1;;;;;;1014:366:33:o;4108:223:28:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;1702:19;;;;8113:60;;;;;;;32196:2:190;8113:60:28;;;32178:21:190;32235:2;32215:18;;;32208:30;32274:31;32254:18;;;32247:59;32323:18;;8113:60:28;31994:353:190;8113:60:28;-1:-1:-1;8208:10:28;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;2145:730:32:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:32;;-1:-1:-1;2822:35:32;2259:610;2145:730;;;;;:::o;1786:473:33:-;1929:4;1946:12;1960:19;1983:6;:17;;2037:34;;;2073:4;2079:9;2014:75;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1983:116;;;;2014:75;1983:116;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1945:154;;;;2117:7;:42;;;;;2157:2;2140:6;:13;:19;;2117:42;:134;;;;-1:-1:-1;2175:29:33;;2216:34;;2175:29;;;;;;;;;;;;:::i;:::-;:76;;1786:473;-1:-1:-1;;;;;;1786:473:33:o;8821:540:28:-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;5009:1456:32:-;5097:7;;6021:66;6008:79;;6004:161;;;-1:-1:-1;6119:1:32;;-1:-1:-1;6123:30:32;6103:51;;6004:161;6276:24;;;6259:14;6276:24;;;;;;;;;33285:25:190;;;33358:4;33346:17;;33326:18;;;33319:45;;;;33380:18;;;33373:34;;;33423:18;;;33416:34;;;6276:24:32;;33257:19:190;;6276:24:32;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6276:24:32;;;;;;-1:-1:-1;;6314:20:32;;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;-1:-1:-1;6437:20:32;;-1:-1:-1;5009:1456:32;;;;;;;;:::o;14:332:190:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;199:117;335:5;14:332;-1:-1:-1;;;14:332:190:o;543:154::-;629:42;622:5;618:54;611:5;608:65;598:93;;687:1;684;677:12;702:1005;808:6;816;824;832;840;848;901:3;889:9;880:7;876:23;872:33;869:53;;;918:1;915;908:12;869:53;957:9;944:23;976:31;1001:5;976:31;:::i;:::-;1026:5;-1:-1:-1;1083:2:190;1068:18;;1055:32;1096:33;1055:32;1096:33;:::i;:::-;1148:7;-1:-1:-1;1202:2:190;1187:18;;1174:32;;-1:-1:-1;1253:2:190;1238:18;;1225:32;;-1:-1:-1;1308:3:190;1293:19;;1280:33;1332:18;1362:14;;;1359:34;;;1389:1;1386;1379:12;1359:34;1427:6;1416:9;1412:22;1402:32;;1472:7;1465:4;1461:2;1457:13;1453:27;1443:55;;1494:1;1491;1484:12;1443:55;1534:2;1521:16;1560:2;1552:6;1549:14;1546:34;;;1576:1;1573;1566:12;1546:34;1621:7;1616:2;1607:6;1603:2;1599:15;1595:24;1592:37;1589:57;;;1642:1;1639;1632:12;1589:57;1673:2;1669;1665:11;1655:21;;1695:6;1685:16;;;;;702:1005;;;;;;;;:::o;1712:184::-;1764:77;1761:1;1754:88;1861:4;1858:1;1851:15;1885:4;1882:1;1875:15;1901:253;1973:2;1967:9;2015:4;2003:17;;2050:18;2035:34;;2071:22;;;2032:62;2029:88;;;2097:18;;:::i;:::-;2133:2;2126:22;1901:253;:::o;2159:334::-;2230:2;2224:9;2286:2;2276:13;;2291:66;2272:86;2260:99;;2389:18;2374:34;;2410:22;;;2371:62;2368:88;;;2436:18;;:::i;:::-;2472:2;2465:22;2159:334;;-1:-1:-1;2159:334:190:o;2498:245::-;2546:4;2579:18;2571:6;2568:30;2565:56;;;2601:18;;:::i;:::-;-1:-1:-1;2658:2:190;2646:15;2663:66;2642:88;2732:4;2638:99;;2498:245::o;2748:462::-;2790:5;2843:3;2836:4;2828:6;2824:17;2820:27;2810:55;;2861:1;2858;2851:12;2810:55;2897:6;2884:20;2928:48;2944:31;2972:2;2944:31;:::i;:::-;2928:48;:::i;:::-;3001:2;2992:7;2985:19;3047:3;3040:4;3035:2;3027:6;3023:15;3019:26;3016:35;3013:55;;;3064:1;3061;3054:12;3013:55;3129:2;3122:4;3114:6;3110:17;3103:4;3094:7;3090:18;3077:55;3177:1;3152:16;;;3170:4;3148:27;3141:38;;;;3156:7;2748:462;-1:-1:-1;;;2748:462:190:o;3215:320::-;3283:6;3336:2;3324:9;3315:7;3311:23;3307:32;3304:52;;;3352:1;3349;3342:12;3304:52;3392:9;3379:23;3425:18;3417:6;3414:30;3411:50;;;3457:1;3454;3447:12;3411:50;3480:49;3521:7;3512:6;3501:9;3497:22;3480:49;:::i;4709:412::-;4821:6;4874:2;4862:9;4853:7;4849:23;4845:32;4842:52;;;4890:1;4887;4880:12;4842:52;4930:9;4917:23;4963:18;4955:6;4952:30;4949:50;;;4995:1;4992;4985:12;4949:50;5018:22;;5074:2;5056:16;;;5052:25;5049:45;;;5090:1;5087;5080:12;5126:467;5233:6;5241;5294:2;5282:9;5273:7;5269:23;5265:32;5262:52;;;5310:1;5307;5300:12;5262:52;5350:9;5337:23;5383:18;5375:6;5372:30;5369:50;;;5415:1;5412;5405:12;5369:50;5438:22;;5494:3;5476:16;;;5472:26;5469:46;;;5511:1;5508;5501:12;5469:46;5534:2;5583;5568:18;;;;5555:32;;-1:-1:-1;;;5126:467:190:o;5598:612::-;5700:6;5708;5716;5769:2;5757:9;5748:7;5744:23;5740:32;5737:52;;;5785:1;5782;5775:12;5737:52;5824:9;5811:23;5843:31;5868:5;5843:31;:::i;:::-;5893:5;-1:-1:-1;5950:2:190;5935:18;;5922:32;5963:33;5922:32;5963:33;:::i;:::-;6015:7;-1:-1:-1;6073:2:190;6058:18;;6045:32;6100:18;6089:30;;6086:50;;;6132:1;6129;6122:12;6086:50;6155:49;6196:7;6187:6;6176:9;6172:22;6155:49;:::i;:::-;6145:59;;;5598:612;;;;;:::o;6630:250::-;6715:1;6725:113;6739:6;6736:1;6733:13;6725:113;;;6815:11;;;6809:18;6796:11;;;6789:39;6761:2;6754:10;6725:113;;;-1:-1:-1;;6872:1:190;6854:16;;6847:27;6630:250::o;6885:441::-;6938:5;6991:3;6984:4;6976:6;6972:17;6968:27;6958:55;;7009:1;7006;6999:12;6958:55;7038:6;7032:13;7069:48;7085:31;7113:2;7085:31;:::i;7069:48::-;7142:2;7133:7;7126:19;7188:3;7181:4;7176:2;7168:6;7164:15;7160:26;7157:35;7154:55;;;7205:1;7202;7195:12;7154:55;7218:77;7292:2;7285:4;7276:7;7272:18;7265:4;7257:6;7253:17;7218:77;:::i;7331:709::-;7396:5;7449:3;7442:4;7434:6;7430:17;7426:27;7416:55;;7467:1;7464;7457:12;7416:55;7496:6;7490:13;7522:4;7545:18;7541:2;7538:26;7535:52;;;7567:18;;:::i;:::-;7613:2;7610:1;7606:10;7636:28;7660:2;7656;7652:11;7636:28;:::i;:::-;7698:15;;;7768;;;7764:24;;;7729:12;;;;7800:15;;;7797:35;;;7828:1;7825;7818:12;7797:35;7864:2;7856:6;7852:15;7841:26;;7876:135;7892:6;7887:3;7884:15;7876:135;;;7958:10;;7946:23;;7909:12;;;;7989;;;;7876:135;;8045:1508;8166:6;8219:2;8207:9;8198:7;8194:23;8190:32;8187:52;;;8235:1;8232;8225:12;8187:52;8268:9;8262:16;8297:18;8338:2;8330:6;8327:14;8324:34;;;8354:1;8351;8344:12;8324:34;8377:22;;;;8433:4;8415:16;;;8411:27;8408:47;;;8451:1;8448;8441:12;8408:47;8477:22;;:::i;:::-;8529:2;8523:9;8541:33;8566:7;8541:33;:::i;:::-;8583:22;;8644:2;8636:11;;8630:18;8660:16;;;8657:36;;;8689:1;8686;8679:12;8657:36;8712:17;;8763:4;8745:16;;;8741:27;8738:47;;;8781:1;8778;8771:12;8738:47;8809:22;;:::i;:::-;8861:2;8855:9;8873:33;8898:7;8873:33;:::i;:::-;8915:24;;8978:2;8970:11;;8964:18;8994:16;;;8991:36;;;9023:1;9020;9013:12;8991:36;9061:55;9108:7;9097:8;9093:2;9089:17;9061:55;:::i;:::-;9056:2;9047:7;9043:16;9036:81;;9156:2;9152;9148:11;9142:18;9185:2;9175:8;9172:16;9169:36;;;9201:1;9198;9191:12;9169:36;9239:67;9298:7;9287:8;9283:2;9279:17;9239:67;:::i;:::-;9234:2;9225:7;9221:16;9214:93;;9339:7;9334:2;9327:5;9323:14;9316:31;;;9386:2;9382;9378:11;9372:18;9415:2;9405:8;9402:16;9399:36;;;9431:1;9428;9421:12;9399:36;9467:55;9514:7;9503:8;9499:2;9495:17;9467:55;:::i;:::-;9462:2;9451:14;;9444:79;-1:-1:-1;9455:5:190;8045:1508;-1:-1:-1;;;;;8045:1508:190:o;9558:329::-;9599:3;9637:5;9631:12;9664:6;9659:3;9652:19;9680:76;9749:6;9742:4;9737:3;9733:14;9726:4;9719:5;9715:16;9680:76;:::i;:::-;9801:2;9789:15;9806:66;9785:88;9776:98;;;;9876:4;9772:109;;9558:329;-1:-1:-1;;9558:329:190:o;9892:435::-;9945:3;9983:5;9977:12;10010:6;10005:3;9998:19;10036:4;10065:2;10060:3;10056:12;10049:19;;10102:2;10095:5;10091:14;10123:1;10133:169;10147:6;10144:1;10141:13;10133:169;;;10208:13;;10196:26;;10242:12;;;;10277:15;;;;10169:1;10162:9;10133:169;;;-1:-1:-1;10318:3:190;;9892:435;-1:-1:-1;;;;;9892:435:190:o;10332:1278::-;10554:4;10583:42;10664:2;10656:6;10652:15;10641:9;10634:34;10704:2;10699;10688:9;10684:18;10677:30;10762:2;10753:6;10747:13;10743:22;10738:2;10727:9;10723:18;10716:50;10813:2;10805:6;10801:15;10795:22;10855:4;10848;10837:9;10833:20;10826:34;10922:2;10907:12;10901:19;10897:28;10891:3;10880:9;10876:19;10869:57;10981:2;10967:12;10963:21;10957:28;10935:50;;11022:4;11016:3;11005:9;11001:19;10994:33;11050:53;11098:3;11087:9;11083:19;11067:14;11050:53;:::i;:::-;11036:67;;11158:2;11144:12;11140:21;11134:28;11112:50;;11227:66;11215:9;11207:6;11203:22;11199:95;11193:3;11182:9;11178:19;11171:124;11315:52;11360:6;11344:14;11315:52;:::i;:::-;11304:63;;;11416:2;11408:6;11404:15;11398:22;11482:66;11470:9;11465:3;11461:19;11457:92;11451:3;11440:9;11436:19;11429:121;11567:37;11600:3;11584:14;11567:37;:::i;11615:184::-;11667:77;11664:1;11657:88;11764:4;11761:1;11754:15;11788:4;11785:1;11778:15;11804:625;12107:2;12096:9;12089:21;12070:4;12133:44;12173:2;12162:9;12158:18;12150:6;12133:44;:::i;:::-;12225:9;12217:6;12213:22;12208:2;12197:9;12193:18;12186:50;12259:44;12296:6;12288;12259:44;:::i;:::-;12245:58;;12351:9;12343:6;12339:22;12334:2;12323:9;12319:18;12312:50;12379:44;12416:6;12408;12379:44;:::i;12434:572::-;12575:6;12583;12591;12644:2;12632:9;12623:7;12619:23;12615:32;12612:52;;;12660:1;12657;12650:12;12612:52;12692:9;12686:16;12711:31;12736:5;12711:31;:::i;:::-;12811:2;12796:18;;12790:25;12761:5;;-1:-1:-1;12824:33:190;12790:25;12824:33;:::i;:::-;12928:2;12913:18;;12907:25;12876:7;;-1:-1:-1;12941:33:190;12907:25;12941:33;:::i;:::-;12993:7;12983:17;;;12434:572;;;;;:::o;13210:640::-;13339:4;13345:6;13405:11;13392:25;13495:66;13484:8;13468:14;13464:29;13460:102;13440:18;13436:127;13426:155;;13577:1;13574;13567:12;13426:155;13604:33;;13656:20;;;-1:-1:-1;13699:18:190;13688:30;;13685:50;;;13731:1;13728;13721:12;13685:50;13764:4;13752:17;;-1:-1:-1;13815:1:190;13811:14;;;13795;13791:35;13781:46;;13778:66;;;13840:1;13837;13830:12;13855:392;13957:4;14015:11;14002:25;14105:66;14094:8;14078:14;14074:29;14070:102;14050:18;14046:127;14036:155;;14187:1;14184;14177:12;14036:155;14208:33;;;;;13855:392;-1:-1:-1;;13855:392:190:o;14252:382::-;14344:4;14402:11;14389:25;14492:66;14481:8;14465:14;14461:29;14457:102;14437:18;14433:127;14423:155;;14574:1;14571;14564:12;14639:630;14755:4;14761:6;14821:11;14808:25;14911:66;14900:8;14884:14;14880:29;14876:102;14856:18;14852:127;14842:155;;14993:1;14990;14983:12;14842:155;15020:33;;15072:20;;;-1:-1:-1;15115:18:190;15104:30;;15101:50;;;15147:1;15144;15137:12;15101:50;15180:4;15168:17;;-1:-1:-1;15239:4:190;15227:17;;15211:14;15207:38;15197:49;;15194:69;;;15259:1;15256;15249:12;15274:247;15333:6;15386:2;15374:9;15365:7;15361:23;15357:32;15354:52;;;15402:1;15399;15392:12;15354:52;15441:9;15428:23;15460:31;15485:5;15460:31;:::i;15526:1271::-;15904:4;15952:3;15941:9;15937:19;15995:42;15987:6;15983:55;15972:9;15965:74;16058:2;16096:6;16091:2;16080:9;16076:18;16069:34;16139:6;16134:2;16123:9;16119:18;16112:34;16182:3;16177:2;16166:9;16162:18;16155:31;16206:6;16241;16235:13;16272:6;16264;16257:22;16310:3;16299:9;16295:19;16288:26;;16373:3;16363:6;16360:1;16356:14;16345:9;16341:30;16337:40;16323:54;;16412:2;16404:6;16400:15;16433:1;16443:325;16457:6;16454:1;16451:13;16443:325;;;16546:66;16534:9;16526:6;16522:22;16518:95;16513:3;16506:108;16637:51;16681:6;16672;16666:13;16637:51;:::i;:::-;16627:61;-1:-1:-1;16746:12:190;;;;16711:15;;;;16479:1;16472:9;16443:325;;;-1:-1:-1;16785:6:190;;15526:1271;-1:-1:-1;;;;;;;;;;15526:1271:190:o;16802:614::-;16931:6;16939;16992:2;16980:9;16971:7;16967:23;16963:32;16960:52;;;17008:1;17005;16998:12;16960:52;17041:9;17035:16;17070:18;17111:2;17103:6;17100:14;17097:34;;;17127:1;17124;17117:12;17097:34;17150:72;17214:7;17205:6;17194:9;17190:22;17150:72;:::i;:::-;17140:82;;17268:2;17257:9;17253:18;17247:25;17231:41;;17297:2;17287:8;17284:16;17281:36;;;17313:1;17310;17303:12;17281:36;;17336:74;17402:7;17391:8;17380:9;17376:24;17336:74;:::i;:::-;17326:84;;;16802:614;;;;;:::o;17421:368::-;17664:6;17653:9;17646:25;17707:2;17702;17691:9;17687:18;17680:30;17627:4;17727:56;17779:2;17768:9;17764:18;17756:6;17727:56;:::i;17794:603::-;17888:5;17895:6;17955:3;17942:17;18037:66;18026:8;18010:14;18006:29;18002:102;17982:18;17978:127;17968:155;;18119:1;18116;18109:12;17968:155;18147:33;;18251:4;18238:18;;;-1:-1:-1;18199:21:190;;-1:-1:-1;18279:18:190;18268:30;;18265:50;;;18311:1;18308;18301:12;18265:50;18365:6;18362:1;18358:14;18342;18338:35;18331:5;18327:47;18324:67;;;18387:1;18384;18377:12;18402:118;18488:5;18481:13;18474:21;18467:5;18464:32;18454:60;;18510:1;18507;18500:12;18525:593;18606:5;18613:6;18673:3;18660:17;18755:66;18744:8;18728:14;18724:29;18720:102;18700:18;18696:127;18686:155;;18837:1;18834;18827:12;18686:155;18865:33;;18969:4;18956:18;;;-1:-1:-1;18917:21:190;;-1:-1:-1;18997:18:190;18986:30;;18983:50;;;19029:1;19026;19019:12;18983:50;19088:4;19080:6;19076:17;19060:14;19056:38;19049:5;19045:50;19042:70;;;19108:1;19105;19098:12;19123:892;19234:6;19229:3;19222:19;19204:3;19260:4;19289:2;19284:3;19280:12;19273:19;;19315:5;19338:1;19359;19369:621;19385:6;19380:3;19377:15;19369:621;;;19466:6;19453:20;19486:33;19511:7;19486:33;:::i;:::-;19557:42;19544:56;19532:69;;19642:15;;;19629:29;19694:4;19681:18;;19722:15;;;19712:43;;19751:1;19748;19741:12;19712:43;19775:12;;;19768:24;-1:-1:-1;19815:4:190;19866:15;;;19853:29;19839:12;;;19832:51;19906:4;19930:12;;;;19965:15;;;;19411:1;19402:11;19369:621;;;-1:-1:-1;20006:3:190;;19123:892;-1:-1:-1;;;;;;19123:892:190:o;20020:559::-;20078:5;20085:6;20145:3;20132:17;20227:66;20216:8;20200:14;20196:29;20192:102;20172:18;20168:127;20158:155;;20309:1;20306;20299:12;20158:155;20337:33;;20441:4;20428:18;;;-1:-1:-1;20389:21:190;;-1:-1:-1;20469:18:190;20458:30;;20455:50;;;20501:1;20498;20491:12;20455:50;20548:6;20532:14;20528:27;20521:5;20517:39;20514:59;;;20569:1;20566;20559:12;20584:325;20672:6;20667:3;20660:19;20724:6;20717:5;20710:4;20705:3;20701:14;20688:43;;20776:1;20769:4;20760:6;20755:3;20751:16;20747:27;20740:38;20642:3;20898:4;20828:66;20823:2;20815:6;20811:15;20807:88;20802:3;20798:98;20794:109;20787:116;;20584:325;;;;:::o;20914:1872::-;21038:6;21033:3;21026:19;21008:3;21064:4;21105:2;21100:3;21096:12;21130:11;21157;21150:18;;21187:1;21177:11;;21228:6;21224:2;21220:15;21213:5;21209:27;21259:5;21282:1;21292:1468;21306:6;21303:1;21300:13;21292:1468;;;21377:5;21371:4;21367:16;21362:3;21355:29;21436:6;21423:20;21522:66;21514:5;21498:14;21494:26;21490:99;21470:18;21466:124;21456:152;;21604:1;21601;21594:12;21456:152;21636:30;;21689:4;21721:21;;21755:33;21721:21;21755:33;:::i;:::-;21827:42;21814:56;21801:70;;21918:93;21994:16;;;21998:7;21918:93;:::i;:::-;22046:2;22041;22035:4;22031:13;22024:25;22084:12;22079:2;22073:4;22069:13;22062:35;22120:3;22110:13;;22156:66;22142:12;22139:84;22136:104;;;22236:1;22233;22226:12;22136:104;22269:21;;;22331:12;22316:13;;;22303:51;22377:19;;;-1:-1:-1;22419:4:190;22474:57;22514:16;;;22518:7;22474:57;:::i;:::-;22436:95;;22585:2;22578:4;22574:2;22570:13;22566:22;22561:2;22555:4;22551:13;22544:45;22610:70;22676:2;22672;22668:11;22652:14;22636;22610:70;:::i;:::-;22738:12;;;;22602:78;-1:-1:-1;;;22703:15:190;;;;-1:-1:-1;;;21328:1:190;21321:9;21292:1468;;;-1:-1:-1;22776:4:190;;20914:1872;-1:-1:-1;;;;;;;;20914:1872:190:o;22791:4132::-;22959:4;22988:2;23017;23006:9;22999:21;23058:3;23047:9;23043:19;23111:6;23098:20;23093:2;23082:9;23078:18;23071:48;23138:2;23201;23193:6;23189:15;23176:29;23171:2;23160:9;23156:18;23149:57;23225:2;23288;23280:6;23276:15;23263:29;23258:2;23247:9;23243:18;23236:57;23336:91;23423:2;23415:6;23411:15;23403:6;23336:91;:::i;:::-;23446:4;23469:3;23488:18;;;23481:30;;;23546:28;;;;23593:3;;23612:18;;;23676:1;23672:20;;;23657:36;;23653:45;;23721:12;23751:1;23761:2840;23775:12;23772:1;23769:19;23761:2840;;;23870:66;23858:9;23850:6;23846:22;23842:95;23837:3;23830:108;23990:6;23977:20;24083:66;24068:12;24052:14;24048:33;24044:106;24024:18;24020:131;24010:159;;24165:1;24162;24155:12;24010:159;24195:37;;24273:19;;24349:14;24345:26;;;24373:66;24341:99;24315:126;;24305:154;;24455:1;24452;24445:12;24305:154;24532:18;;;24487:32;;24578:21;;24612:33;24578:21;24612:33;:::i;:::-;24668:42;24747:16;;;24730:15;;;24723:41;24805:16;;;24792:30;;24835;24792;24835;:::i;:::-;24909:15;;24902:23;24885:15;;;24878:48;24967:16;;;24954:30;;24997:33;24954:30;24997:33;:::i;:::-;25068:16;;;25062:3;25050:16;;25043:42;25126:16;;;25113:30;;25156:33;25113:30;25156:33;:::i;:::-;25226:16;;;25209:15;;;25202:41;25284:16;;;25271:30;;25314:33;25271:30;25314:33;:::i;:::-;25385:16;25379:3;25367:16;;25360:42;25453:80;25516:16;;;25520:7;25453:80;:::i;:::-;25571:2;25565:3;25557:6;25553:16;25546:28;25601:98;25694:3;25686:6;25682:16;25666:14;25650;25601:98;:::i;:::-;25587:112;;;25750:81;25826:3;25817:7;25813:17;25804:7;25750:81;:::i;:::-;25712:119;;25894:66;25885:6;25877;25873:19;25869:92;25863:3;25855:6;25851:16;25844:118;25986:88;26067:6;26051:14;26035;25986:88;:::i;:::-;25975:99;;;;26135:2;26128:5;26124:14;26111:28;26106:2;26098:6;26094:15;26087:53;26201:2;26194:5;26190:14;26177:28;26172:2;26164:6;26160:15;26153:53;26257:89;26342:2;26335:5;26331:14;26324:5;26257:89;:::i;:::-;26219:127;;26392:6;26387:3;26383:16;26378:2;26370:6;26366:15;26359:41;26423:98;26517:3;26501:14;26485;26423:98;:::i;:::-;26579:12;;;;26413:108;-1:-1:-1;;;26544:15:190;;;;-1:-1:-1;23803:1:190;23796:9;23761:2840;;;23765:3;;26648:55;26699:2;26691:6;26687:15;26679:6;26648:55;:::i;:::-;26610:93;;;;26767:66;26755:9;26747:6;26743:22;26739:95;26734:2;26723:9;26719:18;26712:123;26852:65;26910:6;26894:14;26878;26852:65;:::i;:::-;26844:73;22791:4132;-1:-1:-1;;;;;;;;;;;;;22791:4132:190:o;26928:245::-;27007:6;27015;27068:2;27056:9;27047:7;27043:23;27039:32;27036:52;;;27084:1;27081;27074:12;27036:52;-1:-1:-1;;27107:16:190;;27163:2;27148:18;;;27142:25;27107:16;;27142:25;;-1:-1:-1;26928:245:190:o;27409:184::-;27479:6;27532:2;27520:9;27511:7;27507:23;27503:32;27500:52;;;27548:1;27545;27538:12;27500:52;-1:-1:-1;27571:16:190;;27409:184;-1:-1:-1;27409:184:190:o;30445:245::-;30512:6;30565:2;30553:9;30544:7;30540:23;30536:32;30533:52;;;30581:1;30578;30571:12;30533:52;30613:9;30607:16;30632:28;30654:5;30632:28;:::i;31513:287::-;31642:3;31680:6;31674:13;31696:66;31755:6;31750:3;31743:4;31735:6;31731:17;31696:66;:::i;31805:184::-;31857:77;31854:1;31847:88;31954:4;31951:1;31944:15;31978:4;31975:1;31968:15;32352:288;32527:6;32516:9;32509:25;32570:2;32565;32554:9;32550:18;32543:30;32490:4;32590:44;32630:2;32619:9;32615:18;32607:6;32590:44;:::i;32834:219::-;32983:2;32972:9;32965:21;32946:4;33003:44;33043:2;33032:9;33028:18;33020:6;33003:44;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "arb((uint256,uint256,uint256,((address,bool,(address,address,address),(address,uint8,uint256)[],(address,uint8,uint256)[]),uint256,uint256,(address,uint256[],bytes)[])[],bytes),uint256)": "c3b7c7c3",
    "initialize((address,(address,bytes,uint256[]),bytes))": "98da8d6a",
    "initialize(bytes)": "439fab91",
    "onTakeOrders(address,address,uint256,uint256,bytes)": "059bebe6",
    "sI9r()": "71c1dea7",
    "sI9rDispatch()": "89448c3a",
    "sI9rStore()": "61bb39e4",
    "sOrderBook()": "886d1650",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"meta\",\"type\":\"bytes\"}],\"internalType\":\"struct DeployerDiscoverableMetaV2ConstructionConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"badLender\",\"type\":\"address\"}],\"name\":\"BadLender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InitializeSignatureFn\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Initializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minimum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"MinimumOutput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoOrders\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonZeroBeforeArbStack\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"unmeta\",\"type\":\"bytes\"}],\"name\":\"NotRainMetaV1\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expectedHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actualHash\",\"type\":\"bytes32\"}],\"name\":\"UnexpectedMetaHash\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"orderBook\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IExpressionDeployerV2\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"constants\",\"type\":\"uint256[]\"}],\"internalType\":\"struct EvaluableConfigV2\",\"name\":\"evaluableConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"implementationData\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct OrderBookV3ArbOrderTakerConfigV1\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"subject\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"meta\",\"type\":\"bytes\"}],\"name\":\"MetaV1\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minimumInput\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumInput\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumIORatio\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"handleIO\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"contract IInterpreterV1\",\"name\":\"interpreter\",\"type\":\"address\"},{\"internalType\":\"contract IInterpreterStoreV1\",\"name\":\"store\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expression\",\"type\":\"address\"}],\"internalType\":\"struct Evaluable\",\"name\":\"evaluable\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"internalType\":\"struct IO[]\",\"name\":\"validInputs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"internalType\":\"struct IO[]\",\"name\":\"validOutputs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"inputIOIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputIOIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"context\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedContextV1[]\",\"name\":\"signedContext\",\"type\":\"tuple[]\"}],\"internalType\":\"struct TakeOrderConfig[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct TakeOrdersConfigV2\",\"name\":\"takeOrders\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"minimumSenderOutput\",\"type\":\"uint256\"}],\"name\":\"arb\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"orderBook\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IExpressionDeployerV2\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"constants\",\"type\":\"uint256[]\"}],\"internalType\":\"struct EvaluableConfigV2\",\"name\":\"evaluableConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"implementationData\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderBookV3ArbOrderTakerConfigV1\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmountSent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"takeOrdersData\",\"type\":\"bytes\"}],\"name\":\"onTakeOrders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sI9r\",\"outputs\":[{\"internalType\":\"contract IInterpreterV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sI9rDispatch\",\"outputs\":[{\"internalType\":\"EncodedDispatch\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sI9rStore\",\"outputs\":[{\"internalType\":\"contract IInterpreterStoreV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sOrderBook\",\"outputs\":[{\"internalType\":\"contract IOrderBookV3\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"BadLender(address)\":[{\"params\":{\"badLender\":\"The untrusted lender calling `onFlashLoan`.\"}}],\"MinimumOutput(uint256,uint256)\":[{\"params\":{\"actual\":\"The actual output that would be received by the sender.\",\"minimum\":\"The minimum output expected by the sender.\"}}],\"NotRainMetaV1(bytes)\":[{\"params\":{\"unmeta\":\"the bytes that are not meta.\"}}],\"UnexpectedMetaHash(bytes32,bytes32)\":[{\"params\":{\"actualHash\":\"The hash of the metadata seen by the `IMetaV1` contract.\",\"expectedHash\":\"The hash expected by the `IMetaV1` contract.\"}}]},\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MetaV1(address,uint256,bytes)\":{\"params\":{\"meta\":\"Rain metadata V1 compliant metadata bytes. https://github.com/rainprotocol/specs/blob/main/metadata-v1.md\",\"sender\":\"The msg.sender.\",\"subject\":\"The entity that the metadata is about. MAY be the address of the emitting contract (as `uint256`) OR anything else. The interpretation of the subject is context specific, so will often be a hash of some data/thing that this metadata is about.\"}}},\"kind\":\"dev\",\"methods\":{\"initialize(bytes)\":{\"details\":\"The `ICloneableV2` interface is identical to `ICloneableV1` except that it returns a `bytes32` success hash.\",\"params\":{\"data\":\"The initialization data.\"},\"returns\":{\"_0\":\"keccak256(\\\"ICloneableV2.initialize\\\") if successful.\"}},\"onTakeOrders(address,address,uint256,uint256,bytes)\":{\"params\":{\"inputAmountSent\":\"The amount of `inputToken` that was sent to `IOrderBookV3OrderTaker`.\",\"inputToken\":\"The token that was sent to `IOrderBookV3OrderTaker`.\",\"outputToken\":\"The token that `IOrderBookV3` will attempt to pull from `IOrderBookV3OrderTaker` after this callback returns.\",\"takeOrdersData\":\"The data passed to `takeOrders` by the caller.\",\"totalOutputAmount\":\"The total amount of `outputToken` that `IOrderBookV3` will attempt to pull from `IOrderBookV3OrderTaker` after this callback returns.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"BadLender(address)\":[{\"notice\":\"Thrown when the lender is not the trusted `OrderBook`.\"}],\"InitializeSignatureFn()\":[{\"notice\":\"Overloaded initialize function MUST revert with this error.\"}],\"Initializing()\":[{\"notice\":\"Thrown when calling functions while the contract is still initializing.\"}],\"InvalidSignature(uint256)\":[{\"notice\":\"Thrown when the ith signature from a list of signed contexts is invalid.\"}],\"MinimumOutput(uint256,uint256)\":[{\"notice\":\"Thrown when the minimum output for the sender is not met after the arb.\"}],\"NoOrders()\":[{\"notice\":\"Thrown when take orders is called with no orders.\"}],\"NonZeroBeforeArbStack()\":[{\"notice\":\"Thrown when the stack is not empty after the access control dispatch.\"}],\"NotRainMetaV1(bytes)\":[{\"notice\":\"Thrown when some bytes are expected to be rain meta and are not.\"}],\"UnexpectedMetaHash(bytes32,bytes32)\":[{\"notice\":\"Thrown when hashed metadata does NOT match the expected hash.\"}]},\"events\":{\"MetaV1(address,uint256,bytes)\":{\"notice\":\"An onchain wrapper to carry arbitrary Rain metadata. Assigns the sender to the metadata so that tooling can easily drop/ignore data from unknown sources. As metadata is about something, the subject MUST be provided.\"}},\"kind\":\"user\",\"methods\":{\"initialize(bytes)\":{\"notice\":\"Initialize is intended to work like constructors but for cloneable proxies. The `ICloneableV2` contract MUST ensure that initialize can NOT be called more than once. The `ICloneableV2` contract is designed to be deployed by an `ICloneableFactoryV2` but MUST NOT assume that it will be. It is possible for someone to directly deploy an `ICloneableV2` and fail to call initialize before other functions are called, and end users MAY NOT realise or know how to confirm a safe deployment state. The `ICloneableV2` MUST take appropriate measures to ensure that functions called before initialize are safe to do so, or revert. To be fully generic, `initilize` accepts `bytes` and so MUST ABI decode within the initialize function. This allows a single factory to service arbitrary cloneable proxies but also erases the type of the initialization config from the ABI. As tooling will inevitably require the ABI to be known, it is RECOMMENDED that the `ICloneableV2` contract implements a typed `initialize` function that overloads the generic `initialize(bytes)` function. This overloaded function MUST revert with `InitializeSignatureFn` always, so that it is NEVER accidentally called. This avoids complex and expensive delegate call style patterns where a typed overload has to call back to itself and preserve the sender, instead we force the caller to know the correct signature and call the correct function directly with encoded bytes. If initialization is successful the `ICloneableV2` MUST return the keccak256 hash of the string \\\"ICloneableV2.initialize\\\". This avoids false positives where a contract building a proxy, such as an `ICloneableFactoryV2`, may incorrectly believe that the clone has been initialized but the implementation doesn't support `ICloneableV2`.\"},\"onTakeOrders(address,address,uint256,uint256,bytes)\":{\"notice\":\"Called by `OrderBookV3` when `takeOrders` is called with non-zero data, if it caused a non-zero input amount. I.e. if the order(s) taker received some tokens. Input and output directions are relative to the `IOrderBookV3OrderTaker` contract. If the order(s) taker had an active debt from a flash loan then that debt will be paid _before_ calculating any input amounts sent. i.e. the debt is deducted from the input amount before this callback is called.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/concrete/GenericPoolOrderBookV3ArbOrderTaker.sol\":\"GenericPoolOrderBookV3ArbOrderTaker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@prb/test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/\",\":bytecode/=lib/rain.interpreter/src/lib/bytecode/\",\":caller/=lib/rain.interpreter/src/lib/caller/\",\":compile/=lib/rain.interpreter/src/lib/compile/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eval/=lib/rain.interpreter/src/lib/eval/\",\":extern/=lib/rain.interpreter/src/lib/extern/\",\":forge-std/=lib/forge-std/src/\",\":integrity/=lib/rain.interpreter/src/lib/integrity/\",\":ns/=lib/rain.interpreter/src/lib/ns/\",\":op/=lib/rain.interpreter/src/lib/op/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":parse/=lib/rain.interpreter/src/lib/parse/\",\":prb-math/=lib/rain.interpreter/lib/prb-math/src/\",\":prb-test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/\",\":rain.chainlink/=lib/rain.interpreter/lib/rain.chainlink/src/\",\":rain.datacontract/=lib/rain.datacontract/src/\",\":rain.erc1820/=lib/rain.erc1820/src/\",\":rain.extrospection/=lib/rain.factory/lib/rain.extrospection/\",\":rain.factory/=lib/rain.factory/\",\":rain.interpreter/=lib/rain.interpreter/\",\":rain.lib.hash/=lib/rain.lib.memkv/lib/rain.lib.hash/src/\",\":rain.lib.memkv/=lib/rain.lib.memkv/src/\",\":rain.lib.typecast/=lib/rain.interpreter/lib/rain.lib.typecast/src/\",\":rain.math.fixedpoint/=lib/rain.interpreter/lib/rain.math.fixedpoint/src/\",\":rain.math.saturating/=lib/rain.interpreter/lib/rain.math.fixedpoint/lib/rain.math.saturating/src/\",\":rain.metadata/=lib/rain.metadata/src/\",\":rain.solmem/=lib/rain.datacontract/lib/rain.solmem/src/\",\":sol.lib.binmaskflag/=lib/rain.interpreter/lib/sol.lib.binmaskflag/src/\",\":state/=lib/rain.interpreter/src/lib/state/\",\":uniswap/=lib/rain.interpreter/src/lib/uniswap/\",\":v2-core/=lib/rain.interpreter/lib/v2-core/contracts/\",\":v2-periphery/=lib/v2-periphery/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d\",\"dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/rain.datacontract/lib/rain.solmem/src/lib/LibBytes.sol\":{\"keccak256\":\"0xcdc485d90d6d8a89a842b64c83efd15266c5c80916535736aa8a05497bcf5625\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a45d0edb1d404207ad328d7a4eb16ee52d68db8dbb44796caa521a4765dfe353\",\"dweb:/ipfs/QmVT8vbFLMmD1sg1sEz21mTrDRE58yFNsmKDPnZ3LX8yYk\"]},\"lib/rain.datacontract/lib/rain.solmem/src/lib/LibMemCpy.sol\":{\"keccak256\":\"0x6a2df10cc8f19bf99711c06ddf744080d922104b2f8aab4093ca1df8849a8406\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://58cdb4a850867b5ae325c28cd588a98e9c0b313fb7b70974fcb9ad357f552102\",\"dweb:/ipfs/QmYvf96iHnS81aqt9sEcdvqpq6ghsk2fa8RVNBc6pttQJe\"]},\"lib/rain.datacontract/lib/rain.solmem/src/lib/LibPointer.sol\":{\"keccak256\":\"0xcd833cbf588ec10836cdfbddd426fc14dfa145ed2e63054f6bbd06e296e698f7\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://9ce0af4045e276c5e4c352c1c435f4ecea7552192b1d99e33732c1067bea0ad7\",\"dweb:/ipfs/Qmc5NCFTwgg2AemUz9K1fPei51ivge3eUrWP8k56kF8ADG\"]},\"lib/rain.datacontract/lib/rain.solmem/src/lib/LibUint256Array.sol\":{\"keccak256\":\"0x120ff38e1ce110465281d3d27d63c7c8d7ecbeba65aeacbffa7bec393501cbde\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://0acaffcfb7a060e2cc60940768ac2c8c25c142834336de35984d1c53eba6f7b6\",\"dweb:/ipfs/QmcFAtiTDm43ZQTqAmpJUYuCbbTg6U6ytziB37qWU5h7sL\"]},\"lib/rain.factory/src/interface/ICloneableV2.sol\":{\"keccak256\":\"0xbc1ceff073c177b6a0765abc20e897074b45cf620e6196a1d1c52f935d217a80\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://fd2bbdded11b1d41ee37c03e617b17d12dbdd8a2afebc17a91f463db296cb234\",\"dweb:/ipfs/QmWTtnexF9X6G12nEWPcmcsDVTuaYHmWKwUgJTvcak8pYP\"]},\"lib/rain.interpreter/src/abstract/DeployerDiscoverableMetaV2.sol\":{\"keccak256\":\"0x3a74582510521381a9bd2732847be9170fd58fc5baf257917854f35823cd94db\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://233812d35b959b522281af216123f7cc3c900342273e337cc9ba4418f655a78a\",\"dweb:/ipfs/QmZjZtdUbBzA55VSSKASr3fnmK1CZ36SY8LoyAYsFZ8gwA\"]},\"lib/rain.interpreter/src/interface/IExpressionDeployerV1.sol\":{\"keccak256\":\"0x42d4d91cc62778967ca5f1bb2e7b2c97ca2de2c49518bc8a08a0b50275074ab6\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://6f461a0c0f65a514799200a64bc0e9d926abe4e0bba0c4e2ca0e3d6a04677768\",\"dweb:/ipfs/QmeUggk58ypM3721672wdupquFM8W9VnY3qpn8swKoeLhA\"]},\"lib/rain.interpreter/src/interface/IInterpreterCallerV2.sol\":{\"keccak256\":\"0xdbcd86209f48d96355da6e3f1c7f09530667f62544aa43b7058fe99063a20b6e\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://b3803c98391a7db85b12c2ad9858abcda0022d0c004aabdad5ea736959a8ac0f\",\"dweb:/ipfs/QmbL5b4Rz1H4ZPVQzLET8UrQqXiUBnbwCkdUE6jHqPcapN\"]},\"lib/rain.interpreter/src/interface/IInterpreterStoreV1.sol\":{\"keccak256\":\"0xbd9baa8cd30406576f876a76f1c08396561ba93131741af338f63e2414e20619\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://30bb6f09d8b8f27f77e6c44591c4f2070286a91dad202043cf2351ae802e3df5\",\"dweb:/ipfs/QmRz5pfzf5w84iNmKaYYbqP8oQywzc5xbd3xzKmxgFyf9y\"]},\"lib/rain.interpreter/src/interface/IInterpreterV1.sol\":{\"keccak256\":\"0xebde08ca2e1c25fc733e0bb8867598715f8ba79772f86db1c8960ad7d68a5293\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://b93fb28a09aeea4afe7f0d4afc67354c0fa538e5a9b274b0c5f10ed1dd6b6b00\",\"dweb:/ipfs/QmatNhoHRSJ1ZvoCNo61YMt9jb1vvEkWy3mkcoPkB4FFA9\"]},\"lib/rain.interpreter/src/interface/unstable/IExpressionDeployerV2.sol\":{\"keccak256\":\"0x7bbcf9d3689bdecdc58537e5185f0b88e8d4e91a295f5124f19779609f19f219\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://ccdcba71f76f2a730685f956f1854355751a3c9b4caef9569e2a6d8acc8747a5\",\"dweb:/ipfs/QmQrWgCnxd9aGEHhmFTPkA8E3GVsKuwDhe2UQ5WyfA5LSA\"]},\"lib/rain.interpreter/src/lib/bytecode/LibBytecode.sol\":{\"keccak256\":\"0x2b25061fa0f327fd89856e72a3c274b35cd1ce6a97405f9885cd17008c740461\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://41277875d0ac8adbc5560e967ab2fe6c7a7edc4c4c91d13bffb01044adbe2691\",\"dweb:/ipfs/QmR3Yum5eeZ2i9yyzjpfF2o9m5pemv77KPrM2jSBX7LoRB\"]},\"lib/rain.interpreter/src/lib/caller/LibContext.sol\":{\"keccak256\":\"0x155499b7b1624484d2b03b9aecc7d7133c6c69bd17aa278b756c27e2c48af74a\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a2c9276f73ba44f1978b06847a23eed697b62f72eaa02e5e5711c30ea8097c05\",\"dweb:/ipfs/QmfKhi9K4Sp45t2dXCz5pms7mkoXARWkYgB661uc8DPrbF\"]},\"lib/rain.interpreter/src/lib/caller/LibDeployerDiscoverable.sol\":{\"keccak256\":\"0x80a4169a009519f7e94ce4416c9f4eb94b0cbf96f8e4c3f4f5ec8d65e59ad085\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://bc915a321a3913fdee0a8eadcc263c6a8d2425c3517da5107d3a4177789199eb\",\"dweb:/ipfs/QmYJAQepVmeHDTZRCAAcEY7J7ANikvH3pnS6eETf5gnVrG\"]},\"lib/rain.interpreter/src/lib/caller/LibEncodedDispatch.sol\":{\"keccak256\":\"0xc3cb89672e0d11a343ba593f3ecbc0a5441d5a0ee7af7cdb4dbe82f32f951034\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://692ff90cbc8804f320ff58ade514348049556bdbc10d485ae2cdc86033ac942f\",\"dweb:/ipfs/QmSina3eADDD1HtVw4tqtbhx8YnczFZUZ5Lwm9Lhscuvr3\"]},\"lib/rain.interpreter/src/lib/caller/LibEvaluable.sol\":{\"keccak256\":\"0x9bd77a3efb7e0762ca214efe30c3c49c3f3efae3b6c759db2c7a0aa52ff3d364\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://6125b3bd94d9966557c068dda143c930d37662da06cd84a4369a673f4ce8b07c\",\"dweb:/ipfs/QmepFEJseAU31gPAa7Hq2H3ZDfRJ3DnK94CBpe73H3v7yP\"]},\"lib/rain.lib.memkv/lib/rain.lib.hash/src/LibHashNoAlloc.sol\":{\"keccak256\":\"0x52c8b6906d61bcc7e70d594cb097f53e361569904e27019ebeed0b4c94d2aed8\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://62999b0afefbe97e1d41c2c57b67a186e5a1618758f8f9cf17776c1d67f27d24\",\"dweb:/ipfs/QmfVsV2CVp91F9dHNWziKvSo54Wgb84k5Ct7Rtxxyptw35\"]},\"lib/rain.metadata/src/IMetaV1.sol\":{\"keccak256\":\"0xd1959040fcc89be7a4dc8c9c193e4e5a78b84b05848b86c54d39c3d717ad1843\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://7d3cba2279a6b8912f783430eef89c4a6482a489632ead7e2a3594d2162fa2b3\",\"dweb:/ipfs/QmfJFn72vcnq4LXpeBs9PWuDRzJSr58uVeDVjWpxjMHFWs\"]},\"lib/rain.metadata/src/LibMeta.sol\":{\"keccak256\":\"0x04665ba6364cc67050b2a245daa780c39039dd51653f7b2029910f242f5dd285\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://4341f3462120c37c832c03c6c9a0d52a100708fad713ced970f09747badd9d6d\",\"dweb:/ipfs/QmUGovuLTuTmCSTvYWc6SehzyoYAzVsAnPBNmE3hmRDAQU\"]},\"src/abstract/OrderBookV3ArbCommon.sol\":{\"keccak256\":\"0xc77c321417500facb7f1a66baaf337f845674f805d56518d00bcbf78de929b4a\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://7244eaac97f18d1676afcb8fc35aeb37b0be8547e4e84a2ccf202089b760f830\",\"dweb:/ipfs/QmWhNnSPAMPL5g7Ey4ZbctVWGuznJVEU4Vj1pXdr4Cb4SB\"]},\"src/abstract/OrderBookV3ArbOrderTaker.sol\":{\"keccak256\":\"0x5dff048f85aa978c402a7cc18a8acfccbf79ba5a88271a1c0dd8be914e98505f\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://3b42b2e7b1cb743386eb823db2851517138586a5d53d21c7d90a169d08103e36\",\"dweb:/ipfs/QmTpVeWaKiPTiodWxMS2jWtQkiVDX5YGJGNWc8ah8tQhc1\"]},\"src/concrete/GenericPoolOrderBookV3ArbOrderTaker.sol\":{\"keccak256\":\"0xe9a8d11bc6302651f0d75a9fec5bd3bb07e914549fc50dc68040fd3d2ef378aa\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://4443a6c38c8cfb63277e2ecd048d0ffec6756c08162dbce470ca986ec09991be\",\"dweb:/ipfs/QmYHFbLnxuCP89QhMVgMMTK6d6f8jSQU9krgwxttYiEyy4\"]},\"src/interface/ierc3156/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x493227b1bc21c04ba2506d8d63f8fab8eb828683cf41336db1076edee2e010a7\",\"license\":\"CC0\",\"urls\":[\"bzz-raw://99b27f1f11576c22462c93ab613835522dfc89a7e28e584df034b339187bc15c\",\"dweb:/ipfs/QmQZ1H8PotScE5rSbruZn97MC6pgDNTuCQcjtg8ZWU4SPB\"]},\"src/interface/ierc3156/IERC3156FlashLender.sol\":{\"keccak256\":\"0x191637dc4503bf6cc0c6c0539bf83a758b124e37abc5da05ae4d446133cf36b5\",\"license\":\"CC0\",\"urls\":[\"bzz-raw://de7dea1fd8bd0dcdae7bdb400d4ccc9e01ecb73e23ef2b2f77704a9741669273\",\"dweb:/ipfs/QmT8BAK76nEJ5kTKkDxDovD4xuAXPACAyxshUA4RX3WLe3\"]},\"src/interface/unstable/IOrderBookV3.sol\":{\"keccak256\":\"0xb5a629cd5fb8c118a93fafed2d6376d6418fdf7fd2ef44d70cbc6c314d080aab\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://c00280364761365fabb3ffd5eacdc9d9850ade84dbb6ac7ba08ec0ef72971cf6\",\"dweb:/ipfs/QmdPkPE5fn37krz2K4xaPJoEfbhPsbqY7DgPpUn8RdaYY4\"]},\"src/interface/unstable/IOrderBookV3ArbOrderTaker.sol\":{\"keccak256\":\"0x0d08968f83de64e0aec3473bf90c5acc5527d0ef0baafc3526d114d8f4a4a59e\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://277dae815203f5ac255eba4792ba0c677927df648d198134ae602fd8e47d9226\",\"dweb:/ipfs/QmVsWYKQShc9DUxjiaVy1jZYup3A7DYvVni4VcreWrmjHK\"]},\"src/interface/unstable/IOrderBookV3OrderTaker.sol\":{\"keccak256\":\"0x256cda8259c6c344e80ea5db35c7899e2c6f337ca040653ebdf7527e2e1d776e\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://5b26e4385457c5c18b0c4cb394d00662364912f082510df6015e0127059c05b9\",\"dweb:/ipfs/QmaQmiW8dDDAcfzRJZVavcZo9QLeFrN44obvRydJouJbL1\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct DeployerDiscoverableMetaV2ConstructionConfig",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "meta",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "badLender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "BadLender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InitializeSignatureFn"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Initializing"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "i",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidSignature"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "minimum",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "actual",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "MinimumOutput"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoOrders"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonZeroBeforeArbStack"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "unmeta",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "NotRainMetaV1"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expectedHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actualHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "UnexpectedMetaHash"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct OrderBookV3ArbOrderTakerConfigV1",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "orderBook",
                  "type": "address"
                },
                {
                  "internalType": "struct EvaluableConfigV2",
                  "name": "evaluableConfig",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IExpressionDeployerV2",
                      "name": "deployer",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "bytecode",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "constants",
                      "type": "uint256[]"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "implementationData",
                  "type": "bytes"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialize",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "subject",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "meta",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetaV1",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "fallback"
        },
        {
          "inputs": [
            {
              "internalType": "struct TakeOrdersConfigV2",
              "name": "takeOrders",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "minimumInput",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maximumInput",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maximumIORatio",
                  "type": "uint256"
                },
                {
                  "internalType": "struct TakeOrderConfig[]",
                  "name": "orders",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct Order",
                      "name": "order",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "owner",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "handleIO",
                          "type": "bool"
                        },
                        {
                          "internalType": "struct Evaluable",
                          "name": "evaluable",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "contract IInterpreterV1",
                              "name": "interpreter",
                              "type": "address"
                            },
                            {
                              "internalType": "contract IInterpreterStoreV1",
                              "name": "store",
                              "type": "address"
                            },
                            {
                              "internalType": "address",
                              "name": "expression",
                              "type": "address"
                            }
                          ]
                        },
                        {
                          "internalType": "struct IO[]",
                          "name": "validInputs",
                          "type": "tuple[]",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint8",
                              "name": "decimals",
                              "type": "uint8"
                            },
                            {
                              "internalType": "uint256",
                              "name": "vaultId",
                              "type": "uint256"
                            }
                          ]
                        },
                        {
                          "internalType": "struct IO[]",
                          "name": "validOutputs",
                          "type": "tuple[]",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint8",
                              "name": "decimals",
                              "type": "uint8"
                            },
                            {
                              "internalType": "uint256",
                              "name": "vaultId",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "inputIOIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "outputIOIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SignedContextV1[]",
                      "name": "signedContext",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "signer",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256[]",
                          "name": "context",
                          "type": "uint256[]"
                        },
                        {
                          "internalType": "bytes",
                          "name": "signature",
                          "type": "bytes"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "minimumSenderOutput",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "arb"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OrderBookV3ArbOrderTakerConfigV1",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "orderBook",
                  "type": "address"
                },
                {
                  "internalType": "struct EvaluableConfigV2",
                  "name": "evaluableConfig",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IExpressionDeployerV2",
                      "name": "deployer",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "bytecode",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "constants",
                      "type": "uint256[]"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "implementationData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "initialize",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "inputToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "outputToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "inputAmountSent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalOutputAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "takeOrdersData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onTakeOrders"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sI9r",
          "outputs": [
            {
              "internalType": "contract IInterpreterV1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sI9rDispatch",
          "outputs": [
            {
              "internalType": "EncodedDispatch",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sI9rStore",
          "outputs": [
            {
              "internalType": "contract IInterpreterStoreV1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sOrderBook",
          "outputs": [
            {
              "internalType": "contract IOrderBookV3",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "initialize(bytes)": {
            "details": "The `ICloneableV2` interface is identical to `ICloneableV1` except that it returns a `bytes32` success hash.",
            "params": {
              "data": "The initialization data."
            },
            "returns": {
              "_0": "keccak256(\"ICloneableV2.initialize\") if successful."
            }
          },
          "onTakeOrders(address,address,uint256,uint256,bytes)": {
            "params": {
              "inputAmountSent": "The amount of `inputToken` that was sent to `IOrderBookV3OrderTaker`.",
              "inputToken": "The token that was sent to `IOrderBookV3OrderTaker`.",
              "outputToken": "The token that `IOrderBookV3` will attempt to pull from `IOrderBookV3OrderTaker` after this callback returns.",
              "takeOrdersData": "The data passed to `takeOrders` by the caller.",
              "totalOutputAmount": "The total amount of `outputToken` that `IOrderBookV3` will attempt to pull from `IOrderBookV3OrderTaker` after this callback returns."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "initialize(bytes)": {
            "notice": "Initialize is intended to work like constructors but for cloneable proxies. The `ICloneableV2` contract MUST ensure that initialize can NOT be called more than once. The `ICloneableV2` contract is designed to be deployed by an `ICloneableFactoryV2` but MUST NOT assume that it will be. It is possible for someone to directly deploy an `ICloneableV2` and fail to call initialize before other functions are called, and end users MAY NOT realise or know how to confirm a safe deployment state. The `ICloneableV2` MUST take appropriate measures to ensure that functions called before initialize are safe to do so, or revert. To be fully generic, `initilize` accepts `bytes` and so MUST ABI decode within the initialize function. This allows a single factory to service arbitrary cloneable proxies but also erases the type of the initialization config from the ABI. As tooling will inevitably require the ABI to be known, it is RECOMMENDED that the `ICloneableV2` contract implements a typed `initialize` function that overloads the generic `initialize(bytes)` function. This overloaded function MUST revert with `InitializeSignatureFn` always, so that it is NEVER accidentally called. This avoids complex and expensive delegate call style patterns where a typed overload has to call back to itself and preserve the sender, instead we force the caller to know the correct signature and call the correct function directly with encoded bytes. If initialization is successful the `ICloneableV2` MUST return the keccak256 hash of the string \"ICloneableV2.initialize\". This avoids false positives where a contract building a proxy, such as an `ICloneableFactoryV2`, may incorrectly believe that the clone has been initialized but the implementation doesn't support `ICloneableV2`."
          },
          "onTakeOrders(address,address,uint256,uint256,bytes)": {
            "notice": "Called by `OrderBookV3` when `takeOrders` is called with non-zero data, if it caused a non-zero input amount. I.e. if the order(s) taker received some tokens. Input and output directions are relative to the `IOrderBookV3OrderTaker` contract. If the order(s) taker had an active debt from a flash loan then that debt will be paid _before_ calculating any input amounts sent. i.e. the debt is deducted from the input amount before this callback is called."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@prb/test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/",
        "bytecode/=lib/rain.interpreter/src/lib/bytecode/",
        "caller/=lib/rain.interpreter/src/lib/caller/",
        "compile/=lib/rain.interpreter/src/lib/compile/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "eval/=lib/rain.interpreter/src/lib/eval/",
        "extern/=lib/rain.interpreter/src/lib/extern/",
        "forge-std/=lib/forge-std/src/",
        "integrity/=lib/rain.interpreter/src/lib/integrity/",
        "ns/=lib/rain.interpreter/src/lib/ns/",
        "op/=lib/rain.interpreter/src/lib/op/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "parse/=lib/rain.interpreter/src/lib/parse/",
        "prb-math/=lib/rain.interpreter/lib/prb-math/src/",
        "prb-test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/",
        "rain.chainlink/=lib/rain.interpreter/lib/rain.chainlink/src/",
        "rain.datacontract/=lib/rain.datacontract/src/",
        "rain.erc1820/=lib/rain.erc1820/src/",
        "rain.extrospection/=lib/rain.factory/lib/rain.extrospection/",
        "rain.factory/=lib/rain.factory/",
        "rain.interpreter/=lib/rain.interpreter/",
        "rain.lib.hash/=lib/rain.lib.memkv/lib/rain.lib.hash/src/",
        "rain.lib.memkv/=lib/rain.lib.memkv/src/",
        "rain.lib.typecast/=lib/rain.interpreter/lib/rain.lib.typecast/src/",
        "rain.math.fixedpoint/=lib/rain.interpreter/lib/rain.math.fixedpoint/src/",
        "rain.math.saturating/=lib/rain.interpreter/lib/rain.math.fixedpoint/lib/rain.math.saturating/src/",
        "rain.metadata/=lib/rain.metadata/src/",
        "rain.solmem/=lib/rain.datacontract/lib/rain.solmem/src/",
        "sol.lib.binmaskflag/=lib/rain.interpreter/lib/sol.lib.binmaskflag/src/",
        "state/=lib/rain.interpreter/src/lib/state/",
        "uniswap/=lib/rain.interpreter/src/lib/uniswap/",
        "v2-core/=lib/rain.interpreter/lib/v2-core/contracts/",
        "v2-periphery/=lib/v2-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "src/concrete/GenericPoolOrderBookV3ArbOrderTaker.sol": "GenericPoolOrderBookV3ArbOrderTaker"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6",
        "urls": [
          "bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed",
          "dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa",
        "urls": [
          "bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4",
          "dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol": {
        "keccak256": "0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80",
        "urls": [
          "bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d",
          "dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/rain.datacontract/lib/rain.solmem/src/lib/LibBytes.sol": {
        "keccak256": "0xcdc485d90d6d8a89a842b64c83efd15266c5c80916535736aa8a05497bcf5625",
        "urls": [
          "bzz-raw://a45d0edb1d404207ad328d7a4eb16ee52d68db8dbb44796caa521a4765dfe353",
          "dweb:/ipfs/QmVT8vbFLMmD1sg1sEz21mTrDRE58yFNsmKDPnZ3LX8yYk"
        ],
        "license": "CAL"
      },
      "lib/rain.datacontract/lib/rain.solmem/src/lib/LibMemCpy.sol": {
        "keccak256": "0x6a2df10cc8f19bf99711c06ddf744080d922104b2f8aab4093ca1df8849a8406",
        "urls": [
          "bzz-raw://58cdb4a850867b5ae325c28cd588a98e9c0b313fb7b70974fcb9ad357f552102",
          "dweb:/ipfs/QmYvf96iHnS81aqt9sEcdvqpq6ghsk2fa8RVNBc6pttQJe"
        ],
        "license": "CAL"
      },
      "lib/rain.datacontract/lib/rain.solmem/src/lib/LibPointer.sol": {
        "keccak256": "0xcd833cbf588ec10836cdfbddd426fc14dfa145ed2e63054f6bbd06e296e698f7",
        "urls": [
          "bzz-raw://9ce0af4045e276c5e4c352c1c435f4ecea7552192b1d99e33732c1067bea0ad7",
          "dweb:/ipfs/Qmc5NCFTwgg2AemUz9K1fPei51ivge3eUrWP8k56kF8ADG"
        ],
        "license": "CAL"
      },
      "lib/rain.datacontract/lib/rain.solmem/src/lib/LibUint256Array.sol": {
        "keccak256": "0x120ff38e1ce110465281d3d27d63c7c8d7ecbeba65aeacbffa7bec393501cbde",
        "urls": [
          "bzz-raw://0acaffcfb7a060e2cc60940768ac2c8c25c142834336de35984d1c53eba6f7b6",
          "dweb:/ipfs/QmcFAtiTDm43ZQTqAmpJUYuCbbTg6U6ytziB37qWU5h7sL"
        ],
        "license": "CAL"
      },
      "lib/rain.factory/src/interface/ICloneableV2.sol": {
        "keccak256": "0xbc1ceff073c177b6a0765abc20e897074b45cf620e6196a1d1c52f935d217a80",
        "urls": [
          "bzz-raw://fd2bbdded11b1d41ee37c03e617b17d12dbdd8a2afebc17a91f463db296cb234",
          "dweb:/ipfs/QmWTtnexF9X6G12nEWPcmcsDVTuaYHmWKwUgJTvcak8pYP"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/abstract/DeployerDiscoverableMetaV2.sol": {
        "keccak256": "0x3a74582510521381a9bd2732847be9170fd58fc5baf257917854f35823cd94db",
        "urls": [
          "bzz-raw://233812d35b959b522281af216123f7cc3c900342273e337cc9ba4418f655a78a",
          "dweb:/ipfs/QmZjZtdUbBzA55VSSKASr3fnmK1CZ36SY8LoyAYsFZ8gwA"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IExpressionDeployerV1.sol": {
        "keccak256": "0x42d4d91cc62778967ca5f1bb2e7b2c97ca2de2c49518bc8a08a0b50275074ab6",
        "urls": [
          "bzz-raw://6f461a0c0f65a514799200a64bc0e9d926abe4e0bba0c4e2ca0e3d6a04677768",
          "dweb:/ipfs/QmeUggk58ypM3721672wdupquFM8W9VnY3qpn8swKoeLhA"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IInterpreterCallerV2.sol": {
        "keccak256": "0xdbcd86209f48d96355da6e3f1c7f09530667f62544aa43b7058fe99063a20b6e",
        "urls": [
          "bzz-raw://b3803c98391a7db85b12c2ad9858abcda0022d0c004aabdad5ea736959a8ac0f",
          "dweb:/ipfs/QmbL5b4Rz1H4ZPVQzLET8UrQqXiUBnbwCkdUE6jHqPcapN"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IInterpreterStoreV1.sol": {
        "keccak256": "0xbd9baa8cd30406576f876a76f1c08396561ba93131741af338f63e2414e20619",
        "urls": [
          "bzz-raw://30bb6f09d8b8f27f77e6c44591c4f2070286a91dad202043cf2351ae802e3df5",
          "dweb:/ipfs/QmRz5pfzf5w84iNmKaYYbqP8oQywzc5xbd3xzKmxgFyf9y"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IInterpreterV1.sol": {
        "keccak256": "0xebde08ca2e1c25fc733e0bb8867598715f8ba79772f86db1c8960ad7d68a5293",
        "urls": [
          "bzz-raw://b93fb28a09aeea4afe7f0d4afc67354c0fa538e5a9b274b0c5f10ed1dd6b6b00",
          "dweb:/ipfs/QmatNhoHRSJ1ZvoCNo61YMt9jb1vvEkWy3mkcoPkB4FFA9"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/unstable/IExpressionDeployerV2.sol": {
        "keccak256": "0x7bbcf9d3689bdecdc58537e5185f0b88e8d4e91a295f5124f19779609f19f219",
        "urls": [
          "bzz-raw://ccdcba71f76f2a730685f956f1854355751a3c9b4caef9569e2a6d8acc8747a5",
          "dweb:/ipfs/QmQrWgCnxd9aGEHhmFTPkA8E3GVsKuwDhe2UQ5WyfA5LSA"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/bytecode/LibBytecode.sol": {
        "keccak256": "0x2b25061fa0f327fd89856e72a3c274b35cd1ce6a97405f9885cd17008c740461",
        "urls": [
          "bzz-raw://41277875d0ac8adbc5560e967ab2fe6c7a7edc4c4c91d13bffb01044adbe2691",
          "dweb:/ipfs/QmR3Yum5eeZ2i9yyzjpfF2o9m5pemv77KPrM2jSBX7LoRB"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibContext.sol": {
        "keccak256": "0x155499b7b1624484d2b03b9aecc7d7133c6c69bd17aa278b756c27e2c48af74a",
        "urls": [
          "bzz-raw://a2c9276f73ba44f1978b06847a23eed697b62f72eaa02e5e5711c30ea8097c05",
          "dweb:/ipfs/QmfKhi9K4Sp45t2dXCz5pms7mkoXARWkYgB661uc8DPrbF"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibDeployerDiscoverable.sol": {
        "keccak256": "0x80a4169a009519f7e94ce4416c9f4eb94b0cbf96f8e4c3f4f5ec8d65e59ad085",
        "urls": [
          "bzz-raw://bc915a321a3913fdee0a8eadcc263c6a8d2425c3517da5107d3a4177789199eb",
          "dweb:/ipfs/QmYJAQepVmeHDTZRCAAcEY7J7ANikvH3pnS6eETf5gnVrG"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibEncodedDispatch.sol": {
        "keccak256": "0xc3cb89672e0d11a343ba593f3ecbc0a5441d5a0ee7af7cdb4dbe82f32f951034",
        "urls": [
          "bzz-raw://692ff90cbc8804f320ff58ade514348049556bdbc10d485ae2cdc86033ac942f",
          "dweb:/ipfs/QmSina3eADDD1HtVw4tqtbhx8YnczFZUZ5Lwm9Lhscuvr3"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibEvaluable.sol": {
        "keccak256": "0x9bd77a3efb7e0762ca214efe30c3c49c3f3efae3b6c759db2c7a0aa52ff3d364",
        "urls": [
          "bzz-raw://6125b3bd94d9966557c068dda143c930d37662da06cd84a4369a673f4ce8b07c",
          "dweb:/ipfs/QmepFEJseAU31gPAa7Hq2H3ZDfRJ3DnK94CBpe73H3v7yP"
        ],
        "license": "CAL"
      },
      "lib/rain.lib.memkv/lib/rain.lib.hash/src/LibHashNoAlloc.sol": {
        "keccak256": "0x52c8b6906d61bcc7e70d594cb097f53e361569904e27019ebeed0b4c94d2aed8",
        "urls": [
          "bzz-raw://62999b0afefbe97e1d41c2c57b67a186e5a1618758f8f9cf17776c1d67f27d24",
          "dweb:/ipfs/QmfVsV2CVp91F9dHNWziKvSo54Wgb84k5Ct7Rtxxyptw35"
        ],
        "license": "CAL"
      },
      "lib/rain.metadata/src/IMetaV1.sol": {
        "keccak256": "0xd1959040fcc89be7a4dc8c9c193e4e5a78b84b05848b86c54d39c3d717ad1843",
        "urls": [
          "bzz-raw://7d3cba2279a6b8912f783430eef89c4a6482a489632ead7e2a3594d2162fa2b3",
          "dweb:/ipfs/QmfJFn72vcnq4LXpeBs9PWuDRzJSr58uVeDVjWpxjMHFWs"
        ],
        "license": "CAL"
      },
      "lib/rain.metadata/src/LibMeta.sol": {
        "keccak256": "0x04665ba6364cc67050b2a245daa780c39039dd51653f7b2029910f242f5dd285",
        "urls": [
          "bzz-raw://4341f3462120c37c832c03c6c9a0d52a100708fad713ced970f09747badd9d6d",
          "dweb:/ipfs/QmUGovuLTuTmCSTvYWc6SehzyoYAzVsAnPBNmE3hmRDAQU"
        ],
        "license": "CAL"
      },
      "src/abstract/OrderBookV3ArbCommon.sol": {
        "keccak256": "0xc77c321417500facb7f1a66baaf337f845674f805d56518d00bcbf78de929b4a",
        "urls": [
          "bzz-raw://7244eaac97f18d1676afcb8fc35aeb37b0be8547e4e84a2ccf202089b760f830",
          "dweb:/ipfs/QmWhNnSPAMPL5g7Ey4ZbctVWGuznJVEU4Vj1pXdr4Cb4SB"
        ],
        "license": "CAL"
      },
      "src/abstract/OrderBookV3ArbOrderTaker.sol": {
        "keccak256": "0x5dff048f85aa978c402a7cc18a8acfccbf79ba5a88271a1c0dd8be914e98505f",
        "urls": [
          "bzz-raw://3b42b2e7b1cb743386eb823db2851517138586a5d53d21c7d90a169d08103e36",
          "dweb:/ipfs/QmTpVeWaKiPTiodWxMS2jWtQkiVDX5YGJGNWc8ah8tQhc1"
        ],
        "license": "CAL"
      },
      "src/concrete/GenericPoolOrderBookV3ArbOrderTaker.sol": {
        "keccak256": "0xe9a8d11bc6302651f0d75a9fec5bd3bb07e914549fc50dc68040fd3d2ef378aa",
        "urls": [
          "bzz-raw://4443a6c38c8cfb63277e2ecd048d0ffec6756c08162dbce470ca986ec09991be",
          "dweb:/ipfs/QmYHFbLnxuCP89QhMVgMMTK6d6f8jSQU9krgwxttYiEyy4"
        ],
        "license": "CAL"
      },
      "src/interface/ierc3156/IERC3156FlashBorrower.sol": {
        "keccak256": "0x493227b1bc21c04ba2506d8d63f8fab8eb828683cf41336db1076edee2e010a7",
        "urls": [
          "bzz-raw://99b27f1f11576c22462c93ab613835522dfc89a7e28e584df034b339187bc15c",
          "dweb:/ipfs/QmQZ1H8PotScE5rSbruZn97MC6pgDNTuCQcjtg8ZWU4SPB"
        ],
        "license": "CC0"
      },
      "src/interface/ierc3156/IERC3156FlashLender.sol": {
        "keccak256": "0x191637dc4503bf6cc0c6c0539bf83a758b124e37abc5da05ae4d446133cf36b5",
        "urls": [
          "bzz-raw://de7dea1fd8bd0dcdae7bdb400d4ccc9e01ecb73e23ef2b2f77704a9741669273",
          "dweb:/ipfs/QmT8BAK76nEJ5kTKkDxDovD4xuAXPACAyxshUA4RX3WLe3"
        ],
        "license": "CC0"
      },
      "src/interface/unstable/IOrderBookV3.sol": {
        "keccak256": "0xb5a629cd5fb8c118a93fafed2d6376d6418fdf7fd2ef44d70cbc6c314d080aab",
        "urls": [
          "bzz-raw://c00280364761365fabb3ffd5eacdc9d9850ade84dbb6ac7ba08ec0ef72971cf6",
          "dweb:/ipfs/QmdPkPE5fn37krz2K4xaPJoEfbhPsbqY7DgPpUn8RdaYY4"
        ],
        "license": "CAL"
      },
      "src/interface/unstable/IOrderBookV3ArbOrderTaker.sol": {
        "keccak256": "0x0d08968f83de64e0aec3473bf90c5acc5527d0ef0baafc3526d114d8f4a4a59e",
        "urls": [
          "bzz-raw://277dae815203f5ac255eba4792ba0c677927df648d198134ae602fd8e47d9226",
          "dweb:/ipfs/QmVsWYKQShc9DUxjiaVy1jZYup3A7DYvVni4VcreWrmjHK"
        ],
        "license": "CAL"
      },
      "src/interface/unstable/IOrderBookV3OrderTaker.sol": {
        "keccak256": "0x256cda8259c6c344e80ea5db35c7899e2c6f337ca040653ebdf7527e2e1d776e",
        "urls": [
          "bzz-raw://5b26e4385457c5c18b0c4cb394d00662364912f082510df6015e0127059c05b9",
          "dweb:/ipfs/QmaQmiW8dDDAcfzRJZVavcZo9QLeFrN44obvRydJouJbL1"
        ],
        "license": "CAL"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/concrete/GenericPoolOrderBookV3ArbOrderTaker.sol",
    "id": 73520,
    "exportedSymbols": {
      "Address": [
        44651
      ],
      "BEFORE_ARB_MAX_OUTPUTS": [
        71901
      ],
      "BEFORE_ARB_MIN_OUTPUTS": [
        71897
      ],
      "BEFORE_ARB_SOURCE_INDEX": [
        71893
      ],
      "BadLender": [
        71850
      ],
      "CALLER_META_HASH": [
        73404
      ],
      "ClearConfig": [
        76595
      ],
      "ClearStateChange": [
        76604
      ],
      "DEFAULT_STATE_NAMESPACE": [
        56619
      ],
      "DeployerDiscoverableMetaV2": [
        55564
      ],
      "DeployerDiscoverableMetaV2ConstructionConfig": [
        55519
      ],
      "ECDSA": [
        45323
      ],
      "ERC165": [
        45446
      ],
      "EncodedDispatch": [
        56607
      ],
      "Evaluable": [
        57613
      ],
      "EvaluableConfig": [
        57595
      ],
      "EvaluableConfigV2": [
        57604
      ],
      "FullyQualifiedNamespace": [
        56568
      ],
      "GenericPoolOrderBookV3ArbOrderTaker": [
        73519
      ],
      "HASH_NIL": [
        71058
      ],
      "ICLONEABLE_V2_SUCCESS": [
        47299
      ],
      "ICloneableV2": [
        47312
      ],
      "IERC165": [
        45458
      ],
      "IERC1820_NAME_IEXPRESSION_DEPLOYER_V1": [
        56497
      ],
      "IERC1820_NAME_IEXPRESSION_DEPLOYER_V2": [
        56736
      ],
      "IERC20": [
        43884
      ],
      "IERC3156FlashBorrower": [
        76475
      ],
      "IERC3156FlashLender": [
        76512
      ],
      "IExpressionDeployerV1": [
        56533
      ],
      "IExpressionDeployerV2": [
        56771
      ],
      "IInterpreterCallerV2": [
        56563
      ],
      "IInterpreterStoreV1": [
        56600
      ],
      "IInterpreterV1": [
        56650
      ],
      "IO": [
        76527
      ],
      "IOrderBookV3": [
        76846
      ],
      "IOrderBookV3ArbOrderTaker": [
        76861
      ],
      "IOrderBookV3OrderTaker": [
        76878
      ],
      "Initializable": [
        43154
      ],
      "Initializing": [
        71842
      ],
      "InvalidSignature": [
        57109
      ],
      "LibBytecode": [
        57095
      ],
      "LibBytes": [
        46507
      ],
      "LibContext": [
        57394
      ],
      "LibEncodedDispatch": [
        57579
      ],
      "LibEvaluable": [
        57626
      ],
      "LibHashNoAlloc": [
        71100
      ],
      "LibMemCpy": [
        46539
      ],
      "LibMeta": [
        71304
      ],
      "LibPointer": [
        46674
      ],
      "LibUint256Array": [
        47065
      ],
      "MinimumOutput": [
        71839
      ],
      "NO_STORE": [
        56577
      ],
      "NoOrders": [
        76520
      ],
      "NonZeroBeforeArbStack": [
        71845
      ],
      "ON_FLASH_LOAN_CALLBACK_SUCCESS": [
        76458
      ],
      "Operand": [
        56611
      ],
      "Order": [
        76557
      ],
      "OrderBookV3ArbOrderTaker": [
        72395
      ],
      "OrderBookV3ArbOrderTakerConfigV1": [
        71885
      ],
      "OrderConfigV2": [
        76541
      ],
      "OutOfBoundsTruncate": [
        46847
      ],
      "Pointer": [
        46554
      ],
      "ReentrancyGuard": [
        43219
      ],
      "SIGNED_CONTEXT_CONTEXT_OFFSET": [
        56549
      ],
      "SIGNED_CONTEXT_SIGNATURE_OFFSET": [
        56552
      ],
      "SIGNED_CONTEXT_SIGNER_OFFSET": [
        56546
      ],
      "SafeERC20": [
        44321
      ],
      "SignatureChecker": [
        45422
      ],
      "SignedContextV1": [
        56543
      ],
      "SourceIndex": [
        56605
      ],
      "SourceOffsetOutOfBounds": [
        56826
      ],
      "StateNamespace": [
        56609
      ],
      "TakeOrderConfig": [
        76582
      ],
      "TakeOrdersConfigV2": [
        76570
      ],
      "TruncateError": [
        46439
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1718:159",
    "nodes": [
      {
        "id": 73391,
        "nodeType": "PragmaDirective",
        "src": "32:24:159",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 73392,
        "nodeType": "ImportDirective",
        "src": "58:50:159",
        "nodes": [],
        "absolutePath": "src/abstract/OrderBookV3ArbOrderTaker.sol",
        "file": "../abstract/OrderBookV3ArbOrderTaker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 73520,
        "sourceUnit": 72396,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 73394,
        "nodeType": "ImportDirective",
        "src": "109:79:159",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 73520,
        "sourceUnit": 43885,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73393,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43884,
              "src": "117:6:159",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73396,
        "nodeType": "ImportDirective",
        "src": "189:91:159",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 73520,
        "sourceUnit": 44322,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73395,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44321,
              "src": "197:9:159",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73398,
        "nodeType": "ImportDirective",
        "src": "281:75:159",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "openzeppelin-contracts/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 73520,
        "sourceUnit": 44652,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73397,
              "name": "Address",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44651,
              "src": "289:7:159",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73404,
        "nodeType": "VariableDeclaration",
        "src": "358:111:159",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "CALLER_META_HASH",
        "nameLocation": "375:16:159",
        "scope": 73520,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_bytes32",
          "typeString": "bytes32"
        },
        "typeName": {
          "id": 73399,
          "name": "bytes32",
          "nodeType": "ElementaryTypeName",
          "src": "358:7:159",
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "value": {
          "arguments": [
            {
              "hexValue": "307833643639303934383138323066633639323930366230343737653866393832343865383439373362633862386435616339333531333238353764346634313235",
              "id": 73402,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "402:66:159",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_27776666764755325840291907462788228669295272623583244789707041676659769950501_by_1",
                "typeString": "int_const 2777...(69 digits omitted)...0501"
              },
              "value": "0x3d6909481820fc692906b0477e8f98248e84973bc8b8d5ac935132857d4f4125"
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_rational_27776666764755325840291907462788228669295272623583244789707041676659769950501_by_1",
                "typeString": "int_const 2777...(69 digits omitted)...0501"
              }
            ],
            "id": 73401,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "nodeType": "ElementaryTypeNameExpression",
            "src": "394:7:159",
            "typeDescriptions": {
              "typeIdentifier": "t_type$_t_bytes32_$",
              "typeString": "type(bytes32)"
            },
            "typeName": {
              "id": 73400,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "394:7:159",
              "typeDescriptions": {}
            }
          },
          "id": 73403,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "typeConversion",
          "lValueRequested": false,
          "nameLocations": [],
          "names": [],
          "nodeType": "FunctionCall",
          "src": "394:75:159",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 73519,
        "nodeType": "ContractDefinition",
        "src": "472:1277:159",
        "nodes": [
          {
            "id": 73410,
            "nodeType": "UsingForDirective",
            "src": "551:27:159",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 73407,
              "name": "SafeERC20",
              "nameLocations": [
                "557:9:159"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44321,
              "src": "557:9:159"
            },
            "typeName": {
              "id": 73409,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 73408,
                "name": "IERC20",
                "nameLocations": [
                  "571:6:159"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 43884,
                "src": "571:6:159"
              },
              "referencedDeclaration": 43884,
              "src": "571:6:159",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$43884",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 73413,
            "nodeType": "UsingForDirective",
            "src": "583:26:159",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 73411,
              "name": "Address",
              "nameLocations": [
                "589:7:159"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44651,
              "src": "589:7:159"
            },
            "typeName": {
              "id": 73412,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "601:7:159",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 73424,
            "nodeType": "FunctionDefinition",
            "src": "615:137:159",
            "nodes": [],
            "body": {
              "id": 73423,
              "nodeType": "Block",
              "src": "750:2:159",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 73419,
                    "name": "CALLER_META_HASH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 73404,
                    "src": "720:16:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 73420,
                    "name": "config",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 73416,
                    "src": "738:6:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DeployerDiscoverableMetaV2ConstructionConfig_$55519_memory_ptr",
                      "typeString": "struct DeployerDiscoverableMetaV2ConstructionConfig memory"
                    }
                  }
                ],
                "id": 73421,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 73418,
                  "name": "OrderBookV3ArbOrderTaker",
                  "nameLocations": [
                    "695:24:159"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 72395,
                  "src": "695:24:159"
                },
                "nodeType": "ModifierInvocation",
                "src": "695:50:159"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 73417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73416,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "679:6:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 73424,
                  "src": "627:58:159",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DeployerDiscoverableMetaV2ConstructionConfig_$55519_memory_ptr",
                    "typeString": "struct DeployerDiscoverableMetaV2ConstructionConfig"
                  },
                  "typeName": {
                    "id": 73415,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 73414,
                      "name": "DeployerDiscoverableMetaV2ConstructionConfig",
                      "nameLocations": [
                        "627:44:159"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55519,
                      "src": "627:44:159"
                    },
                    "referencedDeclaration": 55519,
                    "src": "627:44:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DeployerDiscoverableMetaV2ConstructionConfig_$55519_storage_ptr",
                      "typeString": "struct DeployerDiscoverableMetaV2ConstructionConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "626:60:159"
            },
            "returnParameters": {
              "id": 73422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "750:0:159"
            },
            "scope": 73519,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 73511,
            "nodeType": "FunctionDefinition",
            "src": "803:867:159",
            "nodes": [],
            "body": {
              "id": 73510,
              "nodeType": "Block",
              "src": "1019:651:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73442,
                        "name": "inputToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73427,
                        "src": "1048:10:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73443,
                        "name": "outputToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73429,
                        "src": "1060:11:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73444,
                        "name": "inputAmountSent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73431,
                        "src": "1073:15:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 73445,
                        "name": "totalOutputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73433,
                        "src": "1090:17:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 73446,
                        "name": "takeOrdersData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73435,
                        "src": "1109:14:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 73439,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1029:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_GenericPoolOrderBookV3ArbOrderTaker_$73519_$",
                          "typeString": "type(contract super GenericPoolOrderBookV3ArbOrderTaker)"
                        }
                      },
                      "id": 73441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1035:12:159",
                      "memberName": "onTakeOrders",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72394,
                      "src": "1029:18:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes calldata)"
                      }
                    },
                    "id": 73447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1029:95:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73448,
                  "nodeType": "ExpressionStatement",
                  "src": "1029:95:159"
                },
                {
                  "assignments": [
                    73450,
                    73452,
                    73454
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73450,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "1143:7:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 73510,
                      "src": "1135:15:159",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 73449,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1135:7:159",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 73452,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "1160:4:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 73510,
                      "src": "1152:12:159",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 73451,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1152:7:159",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 73454,
                      "mutability": "mutable",
                      "name": "encodedFunctionCall",
                      "nameLocation": "1179:19:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 73510,
                      "src": "1166:32:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 73453,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1166:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73466,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 73457,
                        "name": "takeOrdersData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73435,
                        "src": "1225:14:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 73459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1242:7:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 73458,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1242:7:159",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 73461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1251:7:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 73460,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1251:7:159",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 73463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1260:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 73462,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1260:5:159",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 73464,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1241:25:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$",
                          "typeString": "tuple(type(address),type(address),type(bytes storage pointer))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$",
                          "typeString": "tuple(type(address),type(address),type(bytes storage pointer))"
                        }
                      ],
                      "expression": {
                        "id": 73455,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1214:3:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 73456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1218:6:159",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1214:10:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 73465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1214:53:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(address payable,address payable,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1134:133:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73471,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73450,
                        "src": "1309:7:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 73472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1318:1:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 73468,
                            "name": "inputToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73427,
                            "src": "1285:10:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 73467,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43884,
                          "src": "1278:6:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$43884_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 73469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1278:18:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$43884",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 73470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1297:11:159",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44049,
                      "src": "1278:30:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$43884_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$43884_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 73473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1278:42:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73474,
                  "nodeType": "ExpressionStatement",
                  "src": "1278:42:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73479,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73450,
                        "src": "1361:7:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 73482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1375:7:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 73481,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1375:7:159",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 73480,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1370:4:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 73483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1370:13:159",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 73484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1384:3:159",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1370:17:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 73476,
                            "name": "inputToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73427,
                            "src": "1337:10:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 73475,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43884,
                          "src": "1330:6:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$43884_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 73477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1330:18:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$43884",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 73478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1349:11:159",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44049,
                      "src": "1330:30:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$43884_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$43884_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 73485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1330:58:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73486,
                  "nodeType": "ExpressionStatement",
                  "src": "1330:58:159"
                },
                {
                  "assignments": [
                    73488
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73488,
                      "mutability": "mutable",
                      "name": "returnData",
                      "nameLocation": "1411:10:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 73510,
                      "src": "1398:23:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 73487,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1398:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73498,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 73491,
                        "name": "encodedFunctionCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73454,
                        "src": "1451:19:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 73494,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1480:4:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GenericPoolOrderBookV3ArbOrderTaker_$73519",
                                "typeString": "contract GenericPoolOrderBookV3ArbOrderTaker"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_GenericPoolOrderBookV3ArbOrderTaker_$73519",
                                "typeString": "contract GenericPoolOrderBookV3ArbOrderTaker"
                              }
                            ],
                            "id": 73493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1472:7:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 73492,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1472:7:159",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 73495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1472:13:159",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 73496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1486:7:159",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1472:21:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 73489,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73452,
                        "src": "1424:4:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 73490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1429:21:159",
                      "memberName": "functionCallWithValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44431,
                      "src": "1424:26:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
                        "typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
                      }
                    },
                    "id": 73497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1424:70:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1398:96:159"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 73499,
                        "name": "returnData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73488,
                        "src": "1600:10:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "id": 73500,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1599:12:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 73501,
                  "nodeType": "ExpressionStatement",
                  "src": "1599:12:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73506,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73450,
                        "src": "1652:7:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 73507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1661:1:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 73503,
                            "name": "inputToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73427,
                            "src": "1628:10:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 73502,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43884,
                          "src": "1621:6:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$43884_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 73504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1621:18:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$43884",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 73505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1640:11:159",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44049,
                      "src": "1621:30:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$43884_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$43884_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 73508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1621:42:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73509,
                  "nodeType": "ExpressionStatement",
                  "src": "1621:42:159"
                }
              ]
            },
            "baseFunctions": [
              72394
            ],
            "documentation": {
              "id": 73425,
              "nodeType": "StructuredDocumentation",
              "src": "758:40:159",
              "text": "@inheritdoc OrderBookV3ArbOrderTaker"
            },
            "functionSelector": "059bebe6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onTakeOrders",
            "nameLocation": "812:12:159",
            "overrides": {
              "id": 73437,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1010:8:159"
            },
            "parameters": {
              "id": 73436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73427,
                  "mutability": "mutable",
                  "name": "inputToken",
                  "nameLocation": "842:10:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 73511,
                  "src": "834:18:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "834:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73429,
                  "mutability": "mutable",
                  "name": "outputToken",
                  "nameLocation": "870:11:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 73511,
                  "src": "862:19:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "862:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73431,
                  "mutability": "mutable",
                  "name": "inputAmountSent",
                  "nameLocation": "899:15:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 73511,
                  "src": "891:23:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73433,
                  "mutability": "mutable",
                  "name": "totalOutputAmount",
                  "nameLocation": "932:17:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 73511,
                  "src": "924:25:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73435,
                  "mutability": "mutable",
                  "name": "takeOrdersData",
                  "nameLocation": "974:14:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 73511,
                  "src": "959:29:159",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 73434,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "959:5:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "824:170:159"
            },
            "returnParameters": {
              "id": 73438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1019:0:159"
            },
            "scope": 73519,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 73518,
            "nodeType": "FunctionDefinition",
            "src": "1705:42:159",
            "nodes": [],
            "body": {
              "id": 73517,
              "nodeType": "Block",
              "src": "1745:2:159",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 73512,
              "nodeType": "StructuredDocumentation",
              "src": "1676:24:159",
              "text": "Allow receiving gas."
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [
              {
                "id": 73515,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 73514,
                  "name": "onlyNotInitializing",
                  "nameLocations": [
                    "1725:19:159"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 71999,
                  "src": "1725:19:159"
                },
                "nodeType": "ModifierInvocation",
                "src": "1725:19:159"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 73513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1713:2:159"
            },
            "returnParameters": {
              "id": 73516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1745:0:159"
            },
            "scope": 73519,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 73405,
              "name": "OrderBookV3ArbOrderTaker",
              "nameLocations": [
                "520:24:159"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 72395,
              "src": "520:24:159"
            },
            "id": 73406,
            "nodeType": "InheritanceSpecifier",
            "src": "520:24:159"
          }
        ],
        "canonicalName": "GenericPoolOrderBookV3ArbOrderTaker",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          73519,
          72395,
          45446,
          45458,
          55564,
          71220,
          47312,
          43154,
          43219,
          76861,
          76878
        ],
        "name": "GenericPoolOrderBookV3ArbOrderTaker",
        "nameLocation": "481:35:159",
        "scope": 73520,
        "usedErrors": [
          47303,
          57109,
          71200,
          71205,
          71839,
          71842,
          71845,
          71850,
          76520
        ]
      }
    ],
    "license": "CAL"
  },
  "id": 159
}