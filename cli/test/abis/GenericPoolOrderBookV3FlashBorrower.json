{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "deployer",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "meta",
              "type": "bytes"
            }
          ],
          "internalType": "struct DeployerDiscoverableMetaV2ConstructionConfig",
          "name": "config",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "badInitiator",
          "type": "address"
        }
      ],
      "name": "BadInitiator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "badLender",
          "type": "address"
        }
      ],
      "name": "BadLender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FlashLoanFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InitializeSignatureFn",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Initializing",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "InvalidSignature",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minimum",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "actual",
          "type": "uint256"
        }
      ],
      "name": "MinimumOutput",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoOrders",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonZeroBeforeArbStack",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "unmeta",
          "type": "bytes"
        }
      ],
      "name": "NotRainMetaV1",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "expectedHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "actualHash",
          "type": "bytes32"
        }
      ],
      "name": "UnexpectedMetaHash",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "orderBook",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IExpressionDeployerV2",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "bytecode",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256[]",
                  "name": "constants",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct EvaluableConfigV2",
              "name": "evaluableConfig",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "implementationData",
              "type": "bytes"
            }
          ],
          "indexed": false,
          "internalType": "struct OrderBookV3FlashBorrowerConfigV2",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "Initialize",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "subject",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "meta",
          "type": "bytes"
        }
      ],
      "name": "MetaV1",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "minimumInput",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maximumInput",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maximumIORatio",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "handleIO",
                      "type": "bool"
                    },
                    {
                      "components": [
                        {
                          "internalType": "contract IInterpreterV1",
                          "name": "interpreter",
                          "type": "address"
                        },
                        {
                          "internalType": "contract IInterpreterStoreV1",
                          "name": "store",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "expression",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct Evaluable",
                      "name": "evaluable",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint8",
                          "name": "decimals",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "vaultId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IO[]",
                      "name": "validInputs",
                      "type": "tuple[]"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint8",
                          "name": "decimals",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "vaultId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IO[]",
                      "name": "validOutputs",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct Order",
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "inputIOIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "outputIOIndex",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "signer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "context",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct SignedContextV1[]",
                  "name": "signedContext",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct TakeOrderConfig[]",
              "name": "orders",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct TakeOrdersConfigV2",
          "name": "takeOrders",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "minimumSenderOutput",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "exchangeData",
          "type": "bytes"
        }
      ],
      "name": "arb",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "orderBook",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IExpressionDeployerV2",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "bytecode",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256[]",
                  "name": "constants",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct EvaluableConfigV2",
              "name": "evaluableConfig",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "implementationData",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderBookV3FlashBorrowerConfigV2",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initiator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onFlashLoan",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sI9r",
      "outputs": [
        {
          "internalType": "contract IInterpreterV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sI9rDispatch",
      "outputs": [
        {
          "internalType": "EncodedDispatch",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sI9rStore",
      "outputs": [
        {
          "internalType": "contract IInterpreterStoreV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sOrderBook",
      "outputs": [
        {
          "internalType": "contract IOrderBookV3",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162003ec138038062003ec1833981016040819052620000349162000383565b600160005560208101517f3d6909481820fc692906b0477e8f98248e84973bc8b8d5ac935132857d4f41259082908290829062000073908390620000d7565b60208101516040517fbea766d03fa1efd3f81cc8634d08320bc62bb0ed9234ac59bbaafa5893fb6b1391620000ac913391309162000491565b60405180910390a18051620000c1906200011e565b50620000ce9050620001b5565b505050620005a7565b805160208201208281146200010e5760405163074fe10f60e41b815260048101849052602481018290526044015b60405180910390fd5b620001198262000273565b505050565b60408051600080825260208201818152828401938490526331a66b6560e01b90935291829182916001600160a01b038616916331a66b65916200016691906044820162000500565b6060604051808303816000875af115801562000186573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001ac919062000537565b50505050505050565b600154610100900460ff16156200021f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840162000105565b60015460ff9081161462000271576001805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6200027e81620002a3565b620002a05780604051630c89984b60e31b81526004016200010591906200058b565b50565b6000600882511015620002b857506000919050565b50600801516001600160401b031667ff0a89c674ee78741490565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156200030e576200030e620002d3565b60405290565b604051601f8201601f191681016001600160401b03811182821017156200033f576200033f620002d3565b604052919050565b6001600160a01b0381168114620002a057600080fd5b60005b838110156200037a57818101518382015260200162000360565b50506000910152565b600060208083850312156200039757600080fd5b82516001600160401b0380821115620003af57600080fd5b9084019060408287031215620003c457600080fd5b620003ce620002e9565b8251620003db8162000347565b81528284015182811115620003ef57600080fd5b80840193505086601f8401126200040557600080fd5b8251828111156200041a576200041a620002d3565b6200042e601f8201601f1916860162000314565b925080835287858286010111156200044557600080fd5b62000456818685018787016200035d565b5092830152509392505050565b600081518084526200047d8160208601602086016200035d565b601f01601f19169290920160200192915050565b60018060a01b0384168152826020820152606060408201526000620004ba606083018462000463565b95945050505050565b600081518084526020808501945080840160005b83811015620004f557815187529582019590820190600101620004d7565b509495945050505050565b6060815260006060820152608060208201526000620005236080830185620004c3565b8281036040840152620004ba8185620004c3565b6000806000606084860312156200054d57600080fd5b83516200055a8162000347565b60208501519093506200056d8162000347565b6040850151909250620005808162000347565b809150509250925092565b602081526000620005a0602083018462000463565b9392505050565b61390a80620005b76000396000f3fe6080604052600436106100965760003560e01c806371c1dea71161006957806389448c3a1161004e57806389448c3a1461021c57806398da8d6a14610232578063ae61ec121461025257610096565b806371c1dea7146101bc578063886d1650146101e957610096565b806301ffc9a7146100e757806323e30c8b1461011c578063439fab911461014a57806361bb39e41461016a575b3480156100a257600080fd5b50600154610100900460ff16156100e5576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b005b3480156100f357600080fd5b50610107610102366004611ff5565b610265565b60405190151581526020015b60405180910390f35b34801561012857600080fd5b5061013c6101373660046120a2565b61034a565b604051908152602001610113565b34801561015657600080fd5b5061013c6101653660046122a7565b610545565b34801561017657600080fd5b506004546101979073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610113565b3480156101c857600080fd5b506003546101979073ffffffffffffffffffffffffffffffffffffffff1681565b3480156101f557600080fd5b506001546101979062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b34801561022857600080fd5b5061013c60025481565b34801561023e57600080fd5b5061013c61024d3660046122dc565b610928565b6100e5610260366004612317565b61095c565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f23e30c8b0000000000000000000000000000000000000000000000000000000014806102f857507fffffffff0000000000000000000000000000000000000000000000000000000082167f439fab9100000000000000000000000000000000000000000000000000000000145b8061034457507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b600154600090610100900460ff161561038f576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015462010000900473ffffffffffffffffffffffffffffffffffffffff1633146103ed576040517f0bc3cde00000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff87163014610454576040517f8b1f7c6400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff881660048201526024016103e4565b6000806104638486018661264b565b91509150610471828261110b565b6001546040517f8a44689c00000000000000000000000000000000000000000000000000000000815260009182916201000090910473ffffffffffffffffffffffffffffffffffffffff1690638a44689c906104d1908790600401612a86565b60408051808303816000875af11580156104ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105139190612c3b565b507f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd99c9b505050505050505050505050565b600154600090610100900460ff161580801561056557506001805460ff16105b8061057e5750303b15801561057e57506001805460ff16145b61060a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016103e4565b600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001681179055801561066757600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61066f611247565b6000838060200190518101906106859190612cff565b905080516001805473ffffffffffffffffffffffffffffffffffffffff90921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff9092169190911790556040517f61f559321bdc3ad3a0e3b8692a91eaffa9773753bfec4e5f4c344cfed245cab7906107069033908490612e08565b60405180910390a160006107218260200151602001516112bd565b11156108925760408051600180825281830190925260009182919060208083019080368337019050509050600081600061ffff168151811061076557610765612edd565b6020908102919091018101919091528381015180519181015160409182015191517f31a66b6500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909316926331a66b65926107d792918690600401612f0c565b6060604051808303816000875af11580156107f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081a9190612f45565b600480547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff94851617909155600380549091169390921692909217905560201b77ffffffffffffffffffffffffffffffffffffffff000000001660025550505b7fe0e57eda3f08f2a93bbe980d3df7f9c315eac41181f58b865a13d917fe769fc39250506108c06001600055565b801561092257600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50919050565b60006040517faf1fbb2100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610964611247565b600154610100900460ff16156109a6576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109b36060850185612f92565b90506000036109ee576040517f9c95219f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000848383604051602001610a05939291906132fd565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905290506000610a446060870187612f92565b6000818110610a5557610a55612edd565b9050602002810190610a67919061357b565b610a7190806135b9565b610a7f9060c08101906135ed565b610a8c6060890189612f92565b6000818110610a9d57610a9d612edd565b9050602002810190610aaf919061357b565b60400135818110610ac257610ac2612edd565b610ad89260206060909202019081019150613654565b90506000610ae96060880188612f92565b6000818110610afa57610afa612edd565b9050602002810190610b0c919061357b565b610b1690806135b9565b610b249060a08101906135ed565b610b3160608a018a612f92565b6000818110610b4257610b42612edd565b9050602002810190610b54919061357b565b60200135818110610b6757610b67612edd565b610b7d9260206060909202019081019150613654565b6002549091508735908015610daf57600354600454600091829173ffffffffffffffffffffffffffffffffffffffff91821691636715f82591168386610c5a82604051908082528060200260200182016040528015610bf057816020015b6060815260200190600190039081610bdb5790505b506040805160008082526020820190925290610c54565b610c416040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b815260200190600190039081610c075790505b506112db565b6040518563ffffffff1660e01b8152600401610c799493929190613671565b600060405180830381865afa158015610c96573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610cdc919081019061371d565b8151919350915015610d1a576040517f379fa94000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805115610dac57600480546040517f946aadc600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169163946aadc691610d7991600091869101613781565b600060405180830381600087803b158015610d9357600080fd5b505af1158015610da7573d6000803e3d6000fd5b505050505b50505b600154610ddd9073ffffffffffffffffffffffffffffffffffffffff858116916201000090041660006115eb565b600154610e2a9073ffffffffffffffffffffffffffffffffffffffff85811691620100009004167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6115eb565b6001546040517f5cffe9de0000000000000000000000000000000000000000000000000000000081526201000090910473ffffffffffffffffffffffffffffffffffffffff1690635cffe9de90610e8b903090889087908b9060040161379a565b6020604051808303816000875af1158015610eaa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ece91906137d9565b610f04576040517f92111eb200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600154610f329073ffffffffffffffffffffffffffffffffffffffff858116916201000090041660006115eb565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015610f9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc391906137f6565b905088811015611009576040517f0c08b5bc000000000000000000000000000000000000000000000000000000008152600481018a9052602481018290526044016103e4565b80156110305761103073ffffffffffffffffffffffffffffffffffffffff851633836117f0565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa15801561109d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c191906137f6565b905080156110ea576110ea73ffffffffffffffffffffffffffffffffffffffff871633836117f0565b6110f43347611846565b505050505050506111056001600055565b50505050565b600080600083806020019051810190611124919061380f565b9250925092506000856060015160008151811061114357611143612edd565b60200260200101516000015160800151866060015160008151811061116a5761116a612edd565b6020026020010151604001518151811061118657611186612edd565b60209081029190910101515190506111b673ffffffffffffffffffffffffffffffffffffffff82168560006115eb565b6111f773ffffffffffffffffffffffffffffffffffffffff8216857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6115eb565b600061121a73ffffffffffffffffffffffffffffffffffffffff851684476119a0565b905061123e73ffffffffffffffffffffffffffffffffffffffff83168660006115eb565b50505050505050565b6002600054036112b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103e4565b6002600055565b50565b600081516000036112d057506000919050565b506020015160001a90565b60606000825167ffffffffffffffff8111156112f9576112f961211e565b604051908082528060200260200182016040528015611322578160200160208202803683370190505b50905060008084511161133657600061133c565b83516001015b855160010101905060008167ffffffffffffffff81111561135f5761135f61211e565b60405190808252806020026020018201604052801561139257816020015b606081526020019060019003908161137d5790505b50905060006113b7604080516002815233602082015230818301526060810190915290565b8282815181106113c9576113c9612edd565b602002602001018190525060005b87518110156114275781806001019250508781815181106113fa576113fa612edd565b602002602001015183838151811061141457611414612edd565b60209081029190910101526001016113d7565b508551156115e15780806001019150508382828151811061144a5761144a612edd565b602002602001018190525060005b86518110156115df5761150987828151811061147657611476612edd565b6020026020010151600001516114e66114b38a858151811061149a5761149a612edd565b6020026020010151602001518051602090810291012090565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b8984815181106114f8576114f8612edd565b6020026020010151604001516119ce565b611542576040517f52bf9848000000000000000000000000000000000000000000000000000000008152600481018290526024016103e4565b86818151811061155457611554612edd565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1685828151811061158857611588612edd565b60200260200101818152505081806001019250508681815181106115ae576115ae612edd565b6020026020010151602001518383815181106115cc576115cc612edd565b6020908102919091010152600101611458565b505b5095945050505050565b80158061168b57506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611665573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168991906137f6565b155b611717576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084016103e4565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526117eb9084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611a49565b505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526117eb9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611769565b804710156118b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016103e4565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d806000811461190a576040519150601f19603f3d011682016040523d82523d6000602084013e61190f565b606091505b50509050806117eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016103e4565b60606119c68484846040518060600160405280602981526020016138e160299139611b58565b949350505050565b60008060006119dd8585611c71565b909250905060008160048111156119f6576119f6613873565b148015611a2e57508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611a3f5750611a3f868686611cb6565b9695505050505050565b6000611aab826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611e139092919063ffffffff16565b9050805160001480611acc575080806020019051810190611acc91906137d9565b6117eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016103e4565b606082471015611bea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016103e4565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611c1391906138a2565b60006040518083038185875af1925050503d8060008114611c50576040519150601f19603f3d011682016040523d82523d6000602084013e611c55565b606091505b5091509150611c6687838387611e22565b979650505050505050565b6000808251604103611ca75760208301516040840151606085015160001a611c9b87828585611ec2565b94509450505050611caf565b506000905060025b9250929050565b60008060008573ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b8686604051602401611ced9291906138b4565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051611d7691906138a2565b600060405180830381855afa9150503d8060008114611db1576040519150601f19603f3d011682016040523d82523d6000602084013e611db6565b606091505b5091509150818015611dca57506020815110155b8015611a3f575080517f1626ba7e0000000000000000000000000000000000000000000000000000000090611e0890830160209081019084016137f6565b149695505050505050565b60606119c68484600085611b58565b60608315611eb8578251600003611eb15773ffffffffffffffffffffffffffffffffffffffff85163b611eb1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103e4565b50816119c6565b6119c68383611fb1565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611ef95750600090506003611fa8565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611f4d573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611fa157600060019250925050611fa8565b9150600090505b94509492505050565b815115611fc15781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e491906138cd565b60006020828403121561200757600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461203757600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146112ba57600080fd5b60008083601f84011261207257600080fd5b50813567ffffffffffffffff81111561208a57600080fd5b602083019150836020828501011115611caf57600080fd5b60008060008060008060a087890312156120bb57600080fd5b86356120c68161203e565b955060208701356120d68161203e565b94506040870135935060608701359250608087013567ffffffffffffffff81111561210057600080fd5b61210c89828a01612060565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156121705761217061211e565b60405290565b60405160a0810167ffffffffffffffff811182821017156121705761217061211e565b6040516080810167ffffffffffffffff811182821017156121705761217061211e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156122035761220361211e565b604052919050565b600067ffffffffffffffff8211156122255761222561211e565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261226257600080fd5b81356122756122708261220b565b6121bc565b81815284602083860101111561228a57600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156122b957600080fd5b813567ffffffffffffffff8111156122d057600080fd5b6119c684828501612251565b6000602082840312156122ee57600080fd5b813567ffffffffffffffff81111561230557600080fd5b82016060818503121561203757600080fd5b6000806000806060858703121561232d57600080fd5b843567ffffffffffffffff8082111561234557600080fd5b9086019060a0828903121561235957600080fd5b909450602086013593506040860135908082111561237657600080fd5b5061238387828801612060565b95989497509550505050565b600067ffffffffffffffff8211156123a9576123a961211e565b5060051b60200190565b80151581146112ba57600080fd5b80356123cc816123b3565b919050565b6000606082840312156123e357600080fd5b6123eb61214d565b905081356123f88161203e565b815260208201356124088161203e565b6020820152604082013561241b8161203e565b604082015292915050565b803560ff811681146123cc57600080fd5b600082601f83011261244857600080fd5b813560206124586122708361238f565b8281526060928302850182019282820191908785111561247757600080fd5b8387015b858110156124ce5781818a0312156124935760008081fd5b61249b61214d565b81356124a68161203e565b81526124b3828701612426565b8187015260408281013590820152845292840192810161247b565b5090979650505050505050565b600082601f8301126124ec57600080fd5b813560206124fc6122708361238f565b82815260059290921b8401810191818101908684111561251b57600080fd5b8286015b8481101561264057803567ffffffffffffffff8082111561253f57600080fd5b908801906060828b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00112156125765760008081fd5b61257e61214d565b8683013561258b8161203e565b8152604083810135838111156125a15760008081fd5b8401603f81018d136125b35760008081fd5b888101356125c36122708261238f565b81815260059190911b82018301908a8101908f8311156125e35760008081fd5b928401925b828410156126015783358252928b0192908b01906125e8565b858c015250505060608401358381111561261b5760008081fd5b6126298d8a83880101612251565b91830191909152508552505091830191830161251f565b509695505050505050565b6000806040838503121561265e57600080fd5b67ffffffffffffffff808435111561267557600080fd5b60a0843585018603121561268857600080fd5b612690612176565b84358501803582526020808201359083015260408082013590830152606001358210156126bc57600080fd5b84358501606081013501601f810187136126d557600080fd5b6126e2612270823561238f565b81358082526020808301929160051b84010189101561270057600080fd5b602083015b6020843560051b85010181101561288157858135111561272457600080fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0608081833587018d0301121561275a57600080fd5b612762612199565b876020843588010135111561277657600080fd5b8235860160208101350160e0818e038401121561279257600080fd5b61279a612176565b92506127a9602082013561203e565b602081013583526127bc604082016123c1565b60208401526127ce8d606083016123d1565b60408401528860c082013511156127e457600080fd5b6127f78d602060c0840135840101612437565b60608401528860e0820135111561280d57600080fd5b6128208d602060e0840135840101612437565b6080840152508181526040833587010135602082015260608335870101356040820152876080843588010135111561285757600080fd5b61286d8c843588016080810135016020016124db565b606082015284525060209283019201612705565b5060608401525050843585016080013582101561289d57600080fd5b6128b08686358701608081013501612251565b6080820152925060208401358110156128c857600080fd5b506128d98460208501358501612251565b90509250929050565b600081518084526020808501945080840160005b83811015612941578151805173ffffffffffffffffffffffffffffffffffffffff1688528381015160ff168489015260409081015190880152606090960195908201906001016128f6565b509495945050505050565b600081518084526020808501945080840160005b8381101561294157815187529582019590820190600101612960565b60005b8381101561299757818101518382015260200161297f565b50506000910152565b600081518084526129b881602086016020860161297c565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b85811015612a795782840389528151606073ffffffffffffffffffffffffffffffffffffffff8251168652868201518188880152612a488288018261294c565b91505060408083015192508682038188015250612a6581836129a0565b9a87019a9550505090840190600101612a08565b5091979650505050505050565b6000602080835260c0830184518285015281850151604081818701528087015191506060828188015280880151925060a0608081818a015285855180885260e09750878b019150878160051b8c0101898801975060005b82811015612bf0578c82037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2001845288518051868452805173ffffffffffffffffffffffffffffffffffffffff908116888601528d8201511515898601528a8201518051821660c0870152808f015182168e8701528b0151166101008501528881015161012085018d9052612b766101608601826128e2565b918801518583037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8001610140870152919050612bb281836128e2565b9150508c8201518d850152898201518a85015288820151915083810389850152612bdc81836129ea565b9a8d019a958d019593505050600101612add565b50838d015199507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08c820301858d0152612c2a818b6129a0565b9d9c50505050505050505050505050565b60008060408385031215612c4e57600080fd5b505080516020909101519092909150565b600082601f830112612c7057600080fd5b8151612c7e6122708261220b565b818152846020838601011115612c9357600080fd5b6119c682602083016020870161297c565b600082601f830112612cb557600080fd5b81516020612cc56122708361238f565b82815260059290921b84018101918181019086841115612ce457600080fd5b8286015b848110156126405780518352918301918301612ce8565b600060208284031215612d1157600080fd5b815167ffffffffffffffff80821115612d2957600080fd5b9083019060608286031215612d3d57600080fd5b612d4561214d565b8251612d508161203e565b8152602083015182811115612d6457600080fd5b830160608188031215612d7657600080fd5b612d7e61214d565b8151612d898161203e565b8152602082015184811115612d9d57600080fd5b612da989828501612c5f565b602083015250604082015184811115612dc157600080fd5b612dcd89828501612ca4565b6040830152508060208401525050604083015182811115612ded57600080fd5b612df987828601612c5f565b60408301525095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff80851683526040602084015280845116604084015260208401516060808501528181511660a085015260208101519150606060c0850152612e646101008501836129a0565b9150604081015190507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff608483030160e0850152612ea1828261294c565b91505060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848303016080850152611a3f82826129a0565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b606081526000612f1f60608301866129a0565b8281036020840152612f31818661294c565b90508281036040840152611a3f818561294c565b600080600060608486031215612f5a57600080fd5b8351612f658161203e565b6020850151909350612f768161203e565b6040850151909250612f878161203e565b809150509250925092565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612fc757600080fd5b83018035915067ffffffffffffffff821115612fe257600080fd5b6020019150600581901b3603821315611caf57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261302f57600080fd5b830160208101925035905067ffffffffffffffff81111561304f57600080fd5b8060051b3603821315611caf57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261309657600080fd5b830160208101925035905067ffffffffffffffff8111156130b657600080fd5b606081023603821315611caf57600080fd5b8183526000602080850194508260005b858110156129415781356130eb8161203e565b73ffffffffffffffffffffffffffffffffffffffff16875260ff613110838501612426565b168784015260408281013590880152606096870196909101906001016130d8565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261316657600080fd5b830160208101925035905067ffffffffffffffff81111561318657600080fd5b803603821315611caf57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b81835260006020808501808196506005915085821b81018560005b888110156132ef578383038a5281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa189360301811261323857600080fd5b8801606081356132478161203e565b73ffffffffffffffffffffffffffffffffffffffff16855261326b82890183612ffa565b828a8801528083880152608092507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8111156132a657600080fd5b881b8082888501378601905060406132c084820185613131565b94508388840301828901526132d88484018683613195565b9e8b019e97505050938801935050506001016131f9565b509098975050505050505050565b6000604080835260e083018635828501526020606081890135818701526080848a013581880152613330828b018b612ffa565b60a0898101529485905261010094858901600582901b8a0187018360005b84811015613518577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008d840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818736030181126133af57600080fd5b86018035368290037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff210181126133e457600080fd5b888552810180356133f48161203e565b73ffffffffffffffffffffffffffffffffffffffff908116868b0152818c01359061341e826123b3565b90151560a087015260c090828f01356134368161203e565b811687830152828c01356134498161203e565b811660e0880152828b013561345d8161203e565b16868e015261346f60a0830183613061565b60e0610120890152613486610160890182846130c8565b91505061349582840184613061565b935091507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80878203016101408801526134cf8184846130c8565b925050508a8201358b8601528c8201358d8601526134ef8a830183612ffa565b92508582038b8701526135038284836131de565b968c019695505050918901915060010161334e565b5050613526858f018f613131565b995097507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08b82030160c08c015261355f818a8a613195565b9850505050505050848303818601525050611a3f818587613195565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818336030181126135af57600080fd5b9190910192915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126135af57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261362257600080fd5b83018035915067ffffffffffffffff82111561363d57600080fd5b6020019150606081023603821315611caf57600080fd5b60006020828403121561366657600080fd5b81356120378161203e565b60006080820173ffffffffffffffffffffffffffffffffffffffff87168352602086818501528560408501526080606085015281855180845260a08601915060a08160051b870101935082870160005b8281101561370d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff608887030184526136fb86835161294c565b955092840192908401906001016136c1565b50939a9950505050505050505050565b6000806040838503121561373057600080fd5b825167ffffffffffffffff8082111561374857600080fd5b61375486838701612ca4565b9350602085015191508082111561376a57600080fd5b5061377785828601612ca4565b9150509250929050565b8281526040602082015260006119c6604083018461294c565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525083604083015260806060830152611a3f60808301846129a0565b6000602082840312156137eb57600080fd5b8151612037816123b3565b60006020828403121561380857600080fd5b5051919050565b60008060006060848603121561382457600080fd5b835161382f8161203e565b60208501519093506138408161203e565b604085015190925067ffffffffffffffff81111561385d57600080fd5b61386986828701612c5f565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600082516135af81846020870161297c565b8281526040602082015260006119c660408301846129a0565b60208152600061203760208301846129a056fe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
    "sourceMap": "1200:1170:160:-:0;;;1343:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:22;444:75:160;1821:22:22;1109:11:80;;;;452:66:160;;1466:6;;452:66;;1466:6;;1075:46:80;;452:66:160;;1075:23:80;:46::i;:::-;1188:11;;;;1136:64;;;;;;1143:10;;1179:4;;1136:64;:::i;:::-;;;;;;;;1250:15;;1210:56;;:39;:56::i;:::-;-1:-1:-1;4702:22:157::1;::::0;-1:-1:-1;4702:20:157::1;:22::i;:::-;4406:325:::0;;1343:137:160;1200:1170;;1424:292:150;1538:16;;;;;;1568:28;;;1564:112;;1619:46;;-1:-1:-1;;;1619:46:150;;;;;3082:25:190;;;3123:18;;;3116:34;;;3055:18;;1619:46:150;;;;;;;;1564:112;1685:24;1703:5;1685:17;:24::i;:::-;1506:210;1424:292;;:::o;1308:309:95:-;1513:16;;;1371:26;1513:16;;;;;;1531;;;;;;;;;;-1:-1:-1;;;1460:88:95;;;1371:26;;;;;-1:-1:-1;;;;;1460:48:95;;;;;:88;;1513:16;1460:88;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;1308:309:95:o;5917:280:21:-;5985:13;;;;;;;5984:14;5976:66;;;;-1:-1:-1;;;5976:66:21;;5031:2:190;5976:66:21;;;5013:21:190;5070:2;5050:18;;;5043:30;5109:34;5089:18;;;5082:62;-1:-1:-1;;;5160:18:190;;;5153:37;5207:19;;5976:66:21;4829:403:190;5976:66:21;6056:12;;6072:15;6056:12;;;:31;6052:139;;6103:12;:30;;-1:-1:-1;;6103:30:21;6118:15;6103:30;;;;;;6152:28;;5379:36:190;;;6152:28:21;;5367:2:190;5352:18;6152:28:21;;;;;;;6052:139;5917:280::o;1075:155:150:-;1151:19;1164:5;1151:12;:19::i;:::-;1146:78;;1207:5;1193:20;;-1:-1:-1;;;1193:20:150;;;;;;;;:::i;1146:78::-;1075:155;:::o;550:376::-;615:4;650:1;635:5;:12;:16;631:34;;;-1:-1:-1;660:5:150;;550:376;-1:-1:-1;550:376:150:o;631:34::-;-1:-1:-1;846:1:150;835:13;829:20;-1:-1:-1;;;;;825:32:150;667:18:149;883:36:150;;550:376::o;14:127:190:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:256;217:4;211:11;;;249:17;;-1:-1:-1;;;;;281:34:190;;317:22;;;278:62;275:88;;;343:18;;:::i;:::-;379:4;372:24;146:256;:::o;407:275::-;478:2;472:9;543:2;524:13;;-1:-1:-1;;520:27:190;508:40;;-1:-1:-1;;;;;563:34:190;;599:22;;;560:62;557:88;;;625:18;;:::i;:::-;661:2;654:22;407:275;;-1:-1:-1;407:275:190:o;687:131::-;-1:-1:-1;;;;;762:31:190;;752:42;;742:70;;808:1;805;798:12;823:250;908:1;918:113;932:6;929:1;926:13;918:113;;;1008:11;;;1002:18;989:11;;;982:39;954:2;947:10;918:113;;;-1:-1:-1;;1065:1:190;1047:16;;1040:27;823:250::o;1078:1160::-;1211:6;1242:2;1285;1273:9;1264:7;1260:23;1256:32;1253:52;;;1301:1;1298;1291:12;1253:52;1328:16;;-1:-1:-1;;;;;1393:14:190;;;1390:34;;;1420:1;1417;1410:12;1390:34;1443:22;;;;1499:4;1481:16;;;1477:27;1474:47;;;1517:1;1514;1507:12;1474:47;1543:21;;:::i;:::-;1594:2;1588:9;1606:33;1631:7;1606:33;:::i;:::-;1648:22;;1701:11;;;1695:18;1725:16;;;1722:36;;;1754:1;1751;1744:12;1722:36;1785:8;1781:2;1777:17;1767:27;;;1832:7;1825:4;1821:2;1817:13;1813:27;1803:55;;1854:1;1851;1844:12;1803:55;1883:2;1877:9;1905:2;1901;1898:10;1895:36;;;1911:18;;:::i;:::-;1953:53;1996:2;1977:13;;-1:-1:-1;;1973:27:190;1969:36;;1953:53;:::i;:::-;1940:66;;2029:2;2022:5;2015:17;2069:7;2064:2;2059;2055;2051:11;2047:20;2044:33;2041:53;;;2090:1;2087;2080:12;2041:53;2103:67;2167:2;2162;2155:5;2151:14;2146:2;2142;2138:11;2103:67;:::i;:::-;-1:-1:-1;2186:14:190;;;2179:29;-1:-1:-1;2190:5:190;1078:1160;-1:-1:-1;;;1078:1160:190:o;2243:270::-;2284:3;2322:5;2316:12;2349:6;2344:3;2337:19;2365:76;2434:6;2427:4;2422:3;2418:14;2411:4;2404:5;2400:16;2365:76;:::i;:::-;2495:2;2474:15;-1:-1:-1;;2470:29:190;2461:39;;;;2502:4;2457:50;;2243:270;-1:-1:-1;;2243:270:190:o;2518:385::-;2750:1;2746;2741:3;2737:11;2733:19;2725:6;2721:32;2710:9;2703:51;2790:6;2785:2;2774:9;2770:18;2763:34;2833:2;2828;2817:9;2813:18;2806:30;2684:4;2853:44;2893:2;2882:9;2878:18;2870:6;2853:44;:::i;:::-;2845:52;2518:385;-1:-1:-1;;;;;2518:385:190:o;3161:435::-;3214:3;3252:5;3246:12;3279:6;3274:3;3267:19;3305:4;3334:2;3329:3;3325:12;3318:19;;3371:2;3364:5;3360:14;3392:1;3402:169;3416:6;3413:1;3410:13;3402:169;;;3477:13;;3465:26;;3511:12;;;;3546:15;;;;3438:1;3431:9;3402:169;;;-1:-1:-1;3587:3:190;;3161:435;-1:-1:-1;;;;;3161:435:190:o;3601:646::-;3958:2;3947:9;3940:21;3997:1;3992:2;3981:9;3977:18;3970:29;4037:3;4030:4;4019:9;4015:20;4008:33;3921:4;4064:57;4116:3;4105:9;4101:19;4093:6;4064:57;:::i;:::-;4169:9;4161:6;4157:22;4152:2;4141:9;4137:18;4130:50;4197:44;4234:6;4226;4197:44;:::i;4252:572::-;4393:6;4401;4409;4462:2;4450:9;4441:7;4437:23;4433:32;4430:52;;;4478:1;4475;4468:12;4430:52;4510:9;4504:16;4529:31;4554:5;4529:31;:::i;:::-;4629:2;4614:18;;4608:25;4579:5;;-1:-1:-1;4642:33:190;4608:25;4642:33;:::i;:::-;4746:2;4731:18;;4725:25;4694:7;;-1:-1:-1;4759:33:190;4725:25;4759:33;:::i;:::-;4811:7;4801:17;;;4252:572;;;;;:::o;5426:217::-;5573:2;5562:9;5555:21;5536:4;5593:44;5633:2;5622:9;5618:18;5610:6;5593:44;:::i;:::-;5585:52;5426:217;-1:-1:-1;;;5426:217:190:o;:::-;1200:1170:160;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100965760003560e01c806371c1dea71161006957806389448c3a1161004e57806389448c3a1461021c57806398da8d6a14610232578063ae61ec121461025257610096565b806371c1dea7146101bc578063886d1650146101e957610096565b806301ffc9a7146100e757806323e30c8b1461011c578063439fab911461014a57806361bb39e41461016a575b3480156100a257600080fd5b50600154610100900460ff16156100e5576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b005b3480156100f357600080fd5b50610107610102366004611ff5565b610265565b60405190151581526020015b60405180910390f35b34801561012857600080fd5b5061013c6101373660046120a2565b61034a565b604051908152602001610113565b34801561015657600080fd5b5061013c6101653660046122a7565b610545565b34801561017657600080fd5b506004546101979073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610113565b3480156101c857600080fd5b506003546101979073ffffffffffffffffffffffffffffffffffffffff1681565b3480156101f557600080fd5b506001546101979062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b34801561022857600080fd5b5061013c60025481565b34801561023e57600080fd5b5061013c61024d3660046122dc565b610928565b6100e5610260366004612317565b61095c565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f23e30c8b0000000000000000000000000000000000000000000000000000000014806102f857507fffffffff0000000000000000000000000000000000000000000000000000000082167f439fab9100000000000000000000000000000000000000000000000000000000145b8061034457507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b600154600090610100900460ff161561038f576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015462010000900473ffffffffffffffffffffffffffffffffffffffff1633146103ed576040517f0bc3cde00000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff87163014610454576040517f8b1f7c6400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff881660048201526024016103e4565b6000806104638486018661264b565b91509150610471828261110b565b6001546040517f8a44689c00000000000000000000000000000000000000000000000000000000815260009182916201000090910473ffffffffffffffffffffffffffffffffffffffff1690638a44689c906104d1908790600401612a86565b60408051808303816000875af11580156104ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105139190612c3b565b507f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd99c9b505050505050505050505050565b600154600090610100900460ff161580801561056557506001805460ff16105b8061057e5750303b15801561057e57506001805460ff16145b61060a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016103e4565b600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001681179055801561066757600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61066f611247565b6000838060200190518101906106859190612cff565b905080516001805473ffffffffffffffffffffffffffffffffffffffff90921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff9092169190911790556040517f61f559321bdc3ad3a0e3b8692a91eaffa9773753bfec4e5f4c344cfed245cab7906107069033908490612e08565b60405180910390a160006107218260200151602001516112bd565b11156108925760408051600180825281830190925260009182919060208083019080368337019050509050600081600061ffff168151811061076557610765612edd565b6020908102919091018101919091528381015180519181015160409182015191517f31a66b6500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909316926331a66b65926107d792918690600401612f0c565b6060604051808303816000875af11580156107f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081a9190612f45565b600480547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff94851617909155600380549091169390921692909217905560201b77ffffffffffffffffffffffffffffffffffffffff000000001660025550505b7fe0e57eda3f08f2a93bbe980d3df7f9c315eac41181f58b865a13d917fe769fc39250506108c06001600055565b801561092257600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50919050565b60006040517faf1fbb2100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610964611247565b600154610100900460ff16156109a6576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109b36060850185612f92565b90506000036109ee576040517f9c95219f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000848383604051602001610a05939291906132fd565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905290506000610a446060870187612f92565b6000818110610a5557610a55612edd565b9050602002810190610a67919061357b565b610a7190806135b9565b610a7f9060c08101906135ed565b610a8c6060890189612f92565b6000818110610a9d57610a9d612edd565b9050602002810190610aaf919061357b565b60400135818110610ac257610ac2612edd565b610ad89260206060909202019081019150613654565b90506000610ae96060880188612f92565b6000818110610afa57610afa612edd565b9050602002810190610b0c919061357b565b610b1690806135b9565b610b249060a08101906135ed565b610b3160608a018a612f92565b6000818110610b4257610b42612edd565b9050602002810190610b54919061357b565b60200135818110610b6757610b67612edd565b610b7d9260206060909202019081019150613654565b6002549091508735908015610daf57600354600454600091829173ffffffffffffffffffffffffffffffffffffffff91821691636715f82591168386610c5a82604051908082528060200260200182016040528015610bf057816020015b6060815260200190600190039081610bdb5790505b506040805160008082526020820190925290610c54565b610c416040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b815260200190600190039081610c075790505b506112db565b6040518563ffffffff1660e01b8152600401610c799493929190613671565b600060405180830381865afa158015610c96573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610cdc919081019061371d565b8151919350915015610d1a576040517f379fa94000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805115610dac57600480546040517f946aadc600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169163946aadc691610d7991600091869101613781565b600060405180830381600087803b158015610d9357600080fd5b505af1158015610da7573d6000803e3d6000fd5b505050505b50505b600154610ddd9073ffffffffffffffffffffffffffffffffffffffff858116916201000090041660006115eb565b600154610e2a9073ffffffffffffffffffffffffffffffffffffffff85811691620100009004167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6115eb565b6001546040517f5cffe9de0000000000000000000000000000000000000000000000000000000081526201000090910473ffffffffffffffffffffffffffffffffffffffff1690635cffe9de90610e8b903090889087908b9060040161379a565b6020604051808303816000875af1158015610eaa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ece91906137d9565b610f04576040517f92111eb200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600154610f329073ffffffffffffffffffffffffffffffffffffffff858116916201000090041660006115eb565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015610f9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc391906137f6565b905088811015611009576040517f0c08b5bc000000000000000000000000000000000000000000000000000000008152600481018a9052602481018290526044016103e4565b80156110305761103073ffffffffffffffffffffffffffffffffffffffff851633836117f0565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa15801561109d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c191906137f6565b905080156110ea576110ea73ffffffffffffffffffffffffffffffffffffffff871633836117f0565b6110f43347611846565b505050505050506111056001600055565b50505050565b600080600083806020019051810190611124919061380f565b9250925092506000856060015160008151811061114357611143612edd565b60200260200101516000015160800151866060015160008151811061116a5761116a612edd565b6020026020010151604001518151811061118657611186612edd565b60209081029190910101515190506111b673ffffffffffffffffffffffffffffffffffffffff82168560006115eb565b6111f773ffffffffffffffffffffffffffffffffffffffff8216857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6115eb565b600061121a73ffffffffffffffffffffffffffffffffffffffff851684476119a0565b905061123e73ffffffffffffffffffffffffffffffffffffffff83168660006115eb565b50505050505050565b6002600054036112b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103e4565b6002600055565b50565b600081516000036112d057506000919050565b506020015160001a90565b60606000825167ffffffffffffffff8111156112f9576112f961211e565b604051908082528060200260200182016040528015611322578160200160208202803683370190505b50905060008084511161133657600061133c565b83516001015b855160010101905060008167ffffffffffffffff81111561135f5761135f61211e565b60405190808252806020026020018201604052801561139257816020015b606081526020019060019003908161137d5790505b50905060006113b7604080516002815233602082015230818301526060810190915290565b8282815181106113c9576113c9612edd565b602002602001018190525060005b87518110156114275781806001019250508781815181106113fa576113fa612edd565b602002602001015183838151811061141457611414612edd565b60209081029190910101526001016113d7565b508551156115e15780806001019150508382828151811061144a5761144a612edd565b602002602001018190525060005b86518110156115df5761150987828151811061147657611476612edd565b6020026020010151600001516114e66114b38a858151811061149a5761149a612edd565b6020026020010151602001518051602090810291012090565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b8984815181106114f8576114f8612edd565b6020026020010151604001516119ce565b611542576040517f52bf9848000000000000000000000000000000000000000000000000000000008152600481018290526024016103e4565b86818151811061155457611554612edd565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1685828151811061158857611588612edd565b60200260200101818152505081806001019250508681815181106115ae576115ae612edd565b6020026020010151602001518383815181106115cc576115cc612edd565b6020908102919091010152600101611458565b505b5095945050505050565b80158061168b57506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611665573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168991906137f6565b155b611717576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084016103e4565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526117eb9084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611a49565b505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526117eb9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611769565b804710156118b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016103e4565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d806000811461190a576040519150601f19603f3d011682016040523d82523d6000602084013e61190f565b606091505b50509050806117eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016103e4565b60606119c68484846040518060600160405280602981526020016138e160299139611b58565b949350505050565b60008060006119dd8585611c71565b909250905060008160048111156119f6576119f6613873565b148015611a2e57508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611a3f5750611a3f868686611cb6565b9695505050505050565b6000611aab826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611e139092919063ffffffff16565b9050805160001480611acc575080806020019051810190611acc91906137d9565b6117eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016103e4565b606082471015611bea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016103e4565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611c1391906138a2565b60006040518083038185875af1925050503d8060008114611c50576040519150601f19603f3d011682016040523d82523d6000602084013e611c55565b606091505b5091509150611c6687838387611e22565b979650505050505050565b6000808251604103611ca75760208301516040840151606085015160001a611c9b87828585611ec2565b94509450505050611caf565b506000905060025b9250929050565b60008060008573ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b8686604051602401611ced9291906138b4565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051611d7691906138a2565b600060405180830381855afa9150503d8060008114611db1576040519150601f19603f3d011682016040523d82523d6000602084013e611db6565b606091505b5091509150818015611dca57506020815110155b8015611a3f575080517f1626ba7e0000000000000000000000000000000000000000000000000000000090611e0890830160209081019084016137f6565b149695505050505050565b60606119c68484600085611b58565b60608315611eb8578251600003611eb15773ffffffffffffffffffffffffffffffffffffffff85163b611eb1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103e4565b50816119c6565b6119c68383611fb1565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611ef95750600090506003611fa8565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611f4d573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611fa157600060019250925050611fa8565b9150600090505b94509492505050565b815115611fc15781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e491906138cd565b60006020828403121561200757600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461203757600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146112ba57600080fd5b60008083601f84011261207257600080fd5b50813567ffffffffffffffff81111561208a57600080fd5b602083019150836020828501011115611caf57600080fd5b60008060008060008060a087890312156120bb57600080fd5b86356120c68161203e565b955060208701356120d68161203e565b94506040870135935060608701359250608087013567ffffffffffffffff81111561210057600080fd5b61210c89828a01612060565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156121705761217061211e565b60405290565b60405160a0810167ffffffffffffffff811182821017156121705761217061211e565b6040516080810167ffffffffffffffff811182821017156121705761217061211e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156122035761220361211e565b604052919050565b600067ffffffffffffffff8211156122255761222561211e565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261226257600080fd5b81356122756122708261220b565b6121bc565b81815284602083860101111561228a57600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156122b957600080fd5b813567ffffffffffffffff8111156122d057600080fd5b6119c684828501612251565b6000602082840312156122ee57600080fd5b813567ffffffffffffffff81111561230557600080fd5b82016060818503121561203757600080fd5b6000806000806060858703121561232d57600080fd5b843567ffffffffffffffff8082111561234557600080fd5b9086019060a0828903121561235957600080fd5b909450602086013593506040860135908082111561237657600080fd5b5061238387828801612060565b95989497509550505050565b600067ffffffffffffffff8211156123a9576123a961211e565b5060051b60200190565b80151581146112ba57600080fd5b80356123cc816123b3565b919050565b6000606082840312156123e357600080fd5b6123eb61214d565b905081356123f88161203e565b815260208201356124088161203e565b6020820152604082013561241b8161203e565b604082015292915050565b803560ff811681146123cc57600080fd5b600082601f83011261244857600080fd5b813560206124586122708361238f565b8281526060928302850182019282820191908785111561247757600080fd5b8387015b858110156124ce5781818a0312156124935760008081fd5b61249b61214d565b81356124a68161203e565b81526124b3828701612426565b8187015260408281013590820152845292840192810161247b565b5090979650505050505050565b600082601f8301126124ec57600080fd5b813560206124fc6122708361238f565b82815260059290921b8401810191818101908684111561251b57600080fd5b8286015b8481101561264057803567ffffffffffffffff8082111561253f57600080fd5b908801906060828b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00112156125765760008081fd5b61257e61214d565b8683013561258b8161203e565b8152604083810135838111156125a15760008081fd5b8401603f81018d136125b35760008081fd5b888101356125c36122708261238f565b81815260059190911b82018301908a8101908f8311156125e35760008081fd5b928401925b828410156126015783358252928b0192908b01906125e8565b858c015250505060608401358381111561261b5760008081fd5b6126298d8a83880101612251565b91830191909152508552505091830191830161251f565b509695505050505050565b6000806040838503121561265e57600080fd5b67ffffffffffffffff808435111561267557600080fd5b60a0843585018603121561268857600080fd5b612690612176565b84358501803582526020808201359083015260408082013590830152606001358210156126bc57600080fd5b84358501606081013501601f810187136126d557600080fd5b6126e2612270823561238f565b81358082526020808301929160051b84010189101561270057600080fd5b602083015b6020843560051b85010181101561288157858135111561272457600080fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0608081833587018d0301121561275a57600080fd5b612762612199565b876020843588010135111561277657600080fd5b8235860160208101350160e0818e038401121561279257600080fd5b61279a612176565b92506127a9602082013561203e565b602081013583526127bc604082016123c1565b60208401526127ce8d606083016123d1565b60408401528860c082013511156127e457600080fd5b6127f78d602060c0840135840101612437565b60608401528860e0820135111561280d57600080fd5b6128208d602060e0840135840101612437565b6080840152508181526040833587010135602082015260608335870101356040820152876080843588010135111561285757600080fd5b61286d8c843588016080810135016020016124db565b606082015284525060209283019201612705565b5060608401525050843585016080013582101561289d57600080fd5b6128b08686358701608081013501612251565b6080820152925060208401358110156128c857600080fd5b506128d98460208501358501612251565b90509250929050565b600081518084526020808501945080840160005b83811015612941578151805173ffffffffffffffffffffffffffffffffffffffff1688528381015160ff168489015260409081015190880152606090960195908201906001016128f6565b509495945050505050565b600081518084526020808501945080840160005b8381101561294157815187529582019590820190600101612960565b60005b8381101561299757818101518382015260200161297f565b50506000910152565b600081518084526129b881602086016020860161297c565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b85811015612a795782840389528151606073ffffffffffffffffffffffffffffffffffffffff8251168652868201518188880152612a488288018261294c565b91505060408083015192508682038188015250612a6581836129a0565b9a87019a9550505090840190600101612a08565b5091979650505050505050565b6000602080835260c0830184518285015281850151604081818701528087015191506060828188015280880151925060a0608081818a015285855180885260e09750878b019150878160051b8c0101898801975060005b82811015612bf0578c82037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2001845288518051868452805173ffffffffffffffffffffffffffffffffffffffff908116888601528d8201511515898601528a8201518051821660c0870152808f015182168e8701528b0151166101008501528881015161012085018d9052612b766101608601826128e2565b918801518583037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8001610140870152919050612bb281836128e2565b9150508c8201518d850152898201518a85015288820151915083810389850152612bdc81836129ea565b9a8d019a958d019593505050600101612add565b50838d015199507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08c820301858d0152612c2a818b6129a0565b9d9c50505050505050505050505050565b60008060408385031215612c4e57600080fd5b505080516020909101519092909150565b600082601f830112612c7057600080fd5b8151612c7e6122708261220b565b818152846020838601011115612c9357600080fd5b6119c682602083016020870161297c565b600082601f830112612cb557600080fd5b81516020612cc56122708361238f565b82815260059290921b84018101918181019086841115612ce457600080fd5b8286015b848110156126405780518352918301918301612ce8565b600060208284031215612d1157600080fd5b815167ffffffffffffffff80821115612d2957600080fd5b9083019060608286031215612d3d57600080fd5b612d4561214d565b8251612d508161203e565b8152602083015182811115612d6457600080fd5b830160608188031215612d7657600080fd5b612d7e61214d565b8151612d898161203e565b8152602082015184811115612d9d57600080fd5b612da989828501612c5f565b602083015250604082015184811115612dc157600080fd5b612dcd89828501612ca4565b6040830152508060208401525050604083015182811115612ded57600080fd5b612df987828601612c5f565b60408301525095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff80851683526040602084015280845116604084015260208401516060808501528181511660a085015260208101519150606060c0850152612e646101008501836129a0565b9150604081015190507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff608483030160e0850152612ea1828261294c565b91505060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848303016080850152611a3f82826129a0565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b606081526000612f1f60608301866129a0565b8281036020840152612f31818661294c565b90508281036040840152611a3f818561294c565b600080600060608486031215612f5a57600080fd5b8351612f658161203e565b6020850151909350612f768161203e565b6040850151909250612f878161203e565b809150509250925092565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612fc757600080fd5b83018035915067ffffffffffffffff821115612fe257600080fd5b6020019150600581901b3603821315611caf57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261302f57600080fd5b830160208101925035905067ffffffffffffffff81111561304f57600080fd5b8060051b3603821315611caf57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261309657600080fd5b830160208101925035905067ffffffffffffffff8111156130b657600080fd5b606081023603821315611caf57600080fd5b8183526000602080850194508260005b858110156129415781356130eb8161203e565b73ffffffffffffffffffffffffffffffffffffffff16875260ff613110838501612426565b168784015260408281013590880152606096870196909101906001016130d8565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261316657600080fd5b830160208101925035905067ffffffffffffffff81111561318657600080fd5b803603821315611caf57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b81835260006020808501808196506005915085821b81018560005b888110156132ef578383038a5281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa189360301811261323857600080fd5b8801606081356132478161203e565b73ffffffffffffffffffffffffffffffffffffffff16855261326b82890183612ffa565b828a8801528083880152608092507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8111156132a657600080fd5b881b8082888501378601905060406132c084820185613131565b94508388840301828901526132d88484018683613195565b9e8b019e97505050938801935050506001016131f9565b509098975050505050505050565b6000604080835260e083018635828501526020606081890135818701526080848a013581880152613330828b018b612ffa565b60a0898101529485905261010094858901600582901b8a0187018360005b84811015613518577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008d840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818736030181126133af57600080fd5b86018035368290037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff210181126133e457600080fd5b888552810180356133f48161203e565b73ffffffffffffffffffffffffffffffffffffffff908116868b0152818c01359061341e826123b3565b90151560a087015260c090828f01356134368161203e565b811687830152828c01356134498161203e565b811660e0880152828b013561345d8161203e565b16868e015261346f60a0830183613061565b60e0610120890152613486610160890182846130c8565b91505061349582840184613061565b935091507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80878203016101408801526134cf8184846130c8565b925050508a8201358b8601528c8201358d8601526134ef8a830183612ffa565b92508582038b8701526135038284836131de565b968c019695505050918901915060010161334e565b5050613526858f018f613131565b995097507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08b82030160c08c015261355f818a8a613195565b9850505050505050848303818601525050611a3f818587613195565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818336030181126135af57600080fd5b9190910192915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff218336030181126135af57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261362257600080fd5b83018035915067ffffffffffffffff82111561363d57600080fd5b6020019150606081023603821315611caf57600080fd5b60006020828403121561366657600080fd5b81356120378161203e565b60006080820173ffffffffffffffffffffffffffffffffffffffff87168352602086818501528560408501526080606085015281855180845260a08601915060a08160051b870101935082870160005b8281101561370d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff608887030184526136fb86835161294c565b955092840192908401906001016136c1565b50939a9950505050505050505050565b6000806040838503121561373057600080fd5b825167ffffffffffffffff8082111561374857600080fd5b61375486838701612ca4565b9350602085015191508082111561376a57600080fd5b5061377785828601612ca4565b9150509250929050565b8281526040602082015260006119c6604083018461294c565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525083604083015260806060830152611a3f60808301846129a0565b6000602082840312156137eb57600080fd5b8151612037816123b3565b60006020828403121561380857600080fd5b5051919050565b60008060006060848603121561382457600080fd5b835161382f8161203e565b60208501519093506138408161203e565b604085015190925067ffffffffffffffff81111561385d57600080fd5b61386986828701612c5f565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600082516135af81846020870161297c565b8281526040602082015260006119c660408301846129a0565b60208152600061203760208301846129a056fe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
    "sourceMap": "1200:1170:160:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6596:13:21;;;;;;;7466:69:157;;;7510:14;;;;;;;;;;;;;;7466:69;1200:1170:160;4765:270:157;;;;;;;;;;-1:-1:-1;4765:270:157;;;;;:::i;:::-;;:::i;:::-;;;516:14:190;;509:22;491:41;;479:2;464:18;4765:270:157;;;;;;;;8265:1279;;;;;;;;;;-1:-1:-1;8265:1279:157;;;;;:::i;:::-;;:::i;:::-;;;2028:25:190;;;2016:2;2001:18;8265:1279:157;1882:177:190;5710:1660:157;;;;;;;;;;-1:-1:-1;5710:1660:157;;;;;:::i;:::-;;:::i;4363:36::-;;;;;;;;;;-1:-1:-1;4363:36:157;;;;;;;;;;;4613:42:190;4601:55;;;4583:74;;4571:2;4556:18;4363:36:157;4408:255:190;4281:26:157;;;;;;;;;;-1:-1:-1;4281:26:157;;;;;;;;4067:30;;;;;;;;;;-1:-1:-1;4067:30:157;;;;;;;;;;;4176:35;;;;;;;;;;;;;;;;5529:142;;;;;;;;;;-1:-1:-1;5529:142:157;;;;;:::i;:::-;;:::i;11301:3522::-;;;;;;:::i;:::-;;:::i;4765:270::-;4850:4;4873:54;;;4888:39;4873:54;;:103;;-1:-1:-1;4931:45:157;;;4946:30;4931:45;4873:103;:155;;;-1:-1:-1;952:25:34;937:40;;;;4992:36:157;4866:162;4765:270;-1:-1:-1;;4765:270:157:o;8265:1279::-;6596:13:21;;8415:7:157;;6596:13:21;;;;;7466:69:157;;;7510:14;;;;;;;;;;;;;;7466:69;8508:10:::1;::::0;;;::::1;;;8486;:33;8482:92;;8542:21;::::0;::::1;::::0;;8552:10:::1;8542:21;::::0;::::1;4583:74:190::0;4556:18;;8542:21:157::1;;;;;;;;8482:92;8631:26;::::0;::::1;8652:4;8631:26;8627:87;;8680:23;::::0;::::1;::::0;;4613:42:190;4601:55;;8680:23:157::1;::::0;::::1;4583:74:190::0;4556:18;;8680:23:157::1;4408:255:190::0;8627:87:157::1;8725:36;::::0;8804:45:::1;::::0;;::::1;8815:4:::0;8804:45:::1;:::i;:::-;8724:125;;;;8984:35;8994:10;9006:12;8984:9;:35::i;:::-;9421:10;::::0;:33:::1;::::0;;;;9378:18:::1;::::0;;;9421:10;;;::::1;;;::::0;:21:::1;::::0;:33:::1;::::0;9443:10;;9421:33:::1;;;:::i;:::-;;::::0;::::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;425:45:165::1;::::0;8265:1279:157;-1:-1:-1;;;;;;;;;;;;8265:1279:157:o;5710:1660::-;3291:13:21;;5792:7:157;;3291:13:21;;;;;3290:14;;3336:34;;;;-1:-1:-1;3369:1:21;3354:12;;;;:16;3336:34;3335:97;;;-1:-1:-1;3404:4:21;1702:19:28;:23;;;3376:55:21;;-1:-1:-1;3414:12:21;;;;;:17;3376:55;3314:190;;;;;;;21600:2:190;3314:190:21;;;21582:21:190;21639:2;21619:18;;;21612:30;21678:34;21658:18;;;21651:62;21749:16;21729:18;;;21722:44;21783:19;;3314:190:21;21398:410:190;3314:190:21;3529:1;3514:16;;;;;;;;3540:65;;;;3590:4;3574:20;;;;;;;;3540:65;2261:21:22::1;:19;:21::i;:::-;5812:46:157::2;5873:4;5862:52;;;;;;;;;;;;:::i;:::-;5811:103:::0;-1:-1:-1;6126:16:157;;6100:10:::2;:43:::0;;::::2;::::0;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;6218:30:::2;::::0;::::2;::::0;::::2;::::0;6229:10:::2;::::0;6126:6;;6218:30:::2;:::i;:::-;;;;;;;;6467:1;6408:56;6432:6;:22;;;:31;;;6408:23;:56::i;:::-;:60;6404:921;;;6548:16;::::0;;6562:1:::2;6548:16:::0;;;;;::::2;::::0;;;6484:18:::2;::::0;;;6548:16;::::2;::::0;;::::2;::::0;;::::2;::::0;::::2;;::::0;-1:-1:-1;6548:16:157::2;6517:47;;2103:1;6578:11;2019:1;6578:56;;;;;;;;;;:::i;:::-;;::::0;;::::2;::::0;;;;;;:81;;;;7041:22;;::::2;::::0;:31;;7107;;::::2;::::0;7140:32:::2;::::0;;::::2;::::0;7041:158;;;;;:48:::2;::::0;;::::2;::::0;::::2;::::0;:158:::2;::::0;7107:31;7174:11;;7041:158:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7016:9;7009:190:::0;;;;;::::2;;::::0;;::::2;;::::0;;;7010:4:::2;7009:190:::0;;;;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;1048:2:96;1016:34;;;7213:12:157::2;:101:::0;-1:-1:-1;;6404:921:157::2;191:36:47;7335:28:157;;;2303:20:22::1;1716:1:::0;2809:7;:22;2629:209;2303:20:::1;3629:14:21::0;3625:99;;;3659:13;:21;;;;;;3699:14;;27282:36:190;;;3699:14:21;;27270:2:190;27255:18;3699:14:21;;;;;;;3625:99;3258:472;5710:1660:157;;;:::o;5529:142::-;5615:7;5641:23;;;;;;;;;;;;;;11301:3522;2261:21:22;:19;:21::i;:::-;6596:13:21;;;;;;;7466:69:157::1;;;7510:14;;;;;;;;;;;;;;7466:69;11581:17:::2;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;:24;;11609:1;11581:29:::0;11577:77:::2;;11633:10;;;;;;;;;;;;;;11577:77;11739:17;11770:10;11782:12;;11759:36;;;;;;;;;;:::i;:::-;;::::0;;;;;::::2;::::0;;;;;;;-1:-1:-1;11916:25:157::2;11944:17;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;11962:1;11944:20;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:26;::::0;;::::2;:::i;:::-;:39;::::0;::::2;::::0;::::2;::::0;::::2;:::i;:::-;11984:17;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;12002:1;11984:20;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:34;;;11944:75;;;;;;;:::i;:::-;:81;::::0;::::2;:75;::::0;;::::2;;:81:::0;;::::2;::::0;-1:-1:-1;11944:81:157::2;:::i;:::-;11916:109:::0;-1:-1:-1;12035:24:157::2;12062:17;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;12080:1;12062:20;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:26;::::0;;::::2;:::i;:::-;:38;::::0;::::2;::::0;::::2;::::0;::::2;:::i;:::-;12101:17;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;12119:1;12101:20;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:33;;;12062:73;;;;;;;:::i;:::-;:79;::::0;::::2;:73;::::0;;::::2;;:79:::0;;::::2;::::0;-1:-1:-1;12062:79:157::2;:::i;:::-;12430:12;::::0;12035:106;;-1:-1:-1;12312:23:157;::::2;::::0;12456:36;;12452:648:::2;;12557:4;::::0;12584:9:::2;::::0;12509:22:::2;::::0;;;12557:4:::2;::::0;;::::2;::::0;:9:::2;::::0;12584::::2;12509:22:::0;12652:8;12678:62:::2;12509:22:::0;12695:18:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;12715:24:157::2;::::0;;12737:1:::2;12715:24:::0;;;::::2;::::0;::::2;::::0;;;;::::2;::::0;::::2;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;12715:24:157::2;;;;;;;;;;;;;;;;;12678:16;:62::i;:::-;12557:197;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;::::0;;::::2;::::0;::::2;::::0;::::2;;::::0;::::2;::::0;;;::::2;::::0;::::2;:::i;:::-;12838:12:::0;;12508:246;;-1:-1:-1;12508:246:157;-1:-1:-1;12838:16:157;12834:85:::2;;12881:23;;;;;;;;;;;;;;12834:85;12998:10:::0;;:14;12994:96:::2;;13032:9;::::0;;:43:::2;::::0;;;;:9:::2;::::0;;::::2;::::0;:13:::2;::::0;:43:::2;::::0;:9:::2;::::0;13071:3;;13032:43:::2;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;12994:96;12494:606;;12452:648;13377:10;::::0;13332:60:::2;::::0;13377:10:::2;13332:36:::0;;::::2;::::0;13377:10;;::::2;;13390:1;13332:36;:60::i;:::-;13447:10;::::0;13402:76:::2;::::0;13447:10:::2;13402:36:::0;;::::2;::::0;13447:10;;::::2;;13460:17;13402:36;:76::i;:::-;13493:10;::::0;:68:::2;::::0;;;;:10;;;::::2;;;::::0;:20:::2;::::0;:68:::2;::::0;13514:4:::2;::::0;13520:17;;13539:15;;13556:4;;13493:68:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13488:124;;13584:17;;;;;;;;;;;;;;13488:124;13666:10;::::0;13621:60:::2;::::0;13666:10:::2;13621:36:::0;;::::2;::::0;13666:10;;::::2;;13679:1;13621:36;:60::i;:::-;13771:49;::::0;;;;13814:4:::2;13771:49;::::0;::::2;4583:74:190::0;13748:20:157::2;::::0;13771:34:::2;::::0;::::2;::::0;::::2;::::0;4556:18:190;;13771:49:157::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13748:72;;13849:19;13834:12;:34;13830:120;;;13891:48;::::0;::::2;::::0;;::::2;::::0;::::2;42145:25:190::0;;;42186:18;;;42179:34;;;42118:18;;13891:48:157::2;41971:248:190::0;13830:120:157::2;13963:16:::0;;13959:110:::2;;13995:63;:37;::::0;::::2;14033:10;14045:12:::0;13995:37:::2;:63::i;:::-;14159:50;::::0;;;;14203:4:::2;14159:50;::::0;::::2;4583:74:190::0;14135:21:157::2;::::0;14159:35:::2;::::0;::::2;::::0;::::2;::::0;4556:18:190;;14159:50:157::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14135:74:::0;-1:-1:-1;14223:17:157;;14219:113:::2;;14256:65;:38;::::0;::::2;14295:10;14307:13:::0;14256:38:::2;:65::i;:::-;14755:61;14781:10;14794:21;14755:17;:61::i;:::-;11498:3325;;;;;;;2303:20:22::0;1716:1;2809:7;:22;2629:209;2303:20;11301:3522:157;;;;:::o;1531:760:160:-;1652:15;1669:12;1683:32;1742:12;1731:51;;;;;;;;;;;;:::i;:::-;1651:131;;;;;;1793:21;1817:10;:17;;;1835:1;1817:20;;;;;;;;:::i;:::-;;;;;;;:26;;;:39;;;1857:10;:17;;;1875:1;1857:20;;;;;;;;:::i;:::-;;;;;;;:34;;;1817:75;;;;;;;;:::i;:::-;;;;;;;;;;;:81;;-1:-1:-1;1909:45:160;:33;;;1943:7;1817:81;1909:33;:45::i;:::-;1964:61;:33;;;1998:7;2007:17;1964:33;:61::i;:::-;2035:23;2061:70;:26;;;2088:19;2109:21;2061:26;:70::i;:::-;2035:96;-1:-1:-1;2239:45:160;:33;;;2273:7;2282:1;2239:33;:45::i;:::-;1641:650;;;;;1531:760;;:::o;2336:287:22:-;1759:1;2468:7;;:19;2460:63;;;;;;;43044:2:190;2460:63:22;;;43026:21:190;43083:2;43063:18;;;43056:30;43122:33;43102:18;;;43095:61;43173:18;;2460:63:22;42842:355:190;2460:63:22;1759:1;2598:7;:18;2336:287::o;5312:65:157:-;;:::o;476:349:93:-;543:13;572:8;:15;591:1;572:20;568:59;;-1:-1:-1;615:1:93;;476:349;-1:-1:-1;476:349:93:o;568:59::-;-1:-1:-1;802:4:93;788:19;782:26;779:1;774:35;;476:349::o;7166:2290:94:-;7301:18;7359:24;7400:14;:21;7386:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7386:36:94;;7359:63;;7571:21;7645:1;7621:14;:21;:25;:57;;7677:1;7621:57;;;7649:14;:21;7673:1;7649:25;7621:57;7599:11;:18;7595:1;:22;:84;7571:108;;7694:26;7739:13;7723:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7694:59;;7767:14;7817:17;3283:4:43;3277:11;;3315:1;3301:16;;2288:10:94;3348:4:43;3337:16;;3330:27;2326:4:94;3377:16:43;;;3370:27;2211:16:94;3423::43;;3410:30;;;3277:11;2172:169:94;7817:17;7799:7;7807:6;7799:15;;;;;;;;:::i;:::-;;;;;;:35;;;;7854:9;7849:140;7873:11;:18;7869:1;:22;7849:140;;;7916:8;;;;;;;7960:11;7972:1;7960:14;;;;;;;;:::i;:::-;;;;;;;7942:7;7950:6;7942:15;;;;;;;;:::i;:::-;;;;;;;;;;:32;7893:3;;7849:140;;;-1:-1:-1;8007:21:94;;:25;8003:1408;;8052:8;;;;;;;8096:7;8078;8086:6;8078:15;;;;;;;;:::i;:::-;;;;;;:25;;;;8127:9;8122:1275;8146:14;:21;8142:1;:25;8122:1275;;;8824:284;8890:14;8905:1;8890:17;;;;;;;;:::i;:::-;;;;;;;:24;;;8944:81;8973:51;8998:14;9013:1;8998:17;;;;;;;;:::i;:::-;;;;;;;:25;;;4081:13:147;;4096:4;4077:24;;;4058:17;;4048:54;;3908:210;8973:51:94;7389:34:32;7189:15;7376:48;;;7444:4;7437:18;;;;7495:4;7479:21;;;7120:396;8944:81:94;9055:14;9070:1;9055:17;;;;;;;;:::i;:::-;;;;;;;:27;;;8824:36;:284::i;:::-;8196:1010;;9164:19;;;;;;;;2028:25:190;;;2001:18;;9164:19:94;1882:177:190;8196:1010:94;9257:14;9272:1;9257:17;;;;;;;;:::i;:::-;;;;;;;:24;;;9241:42;;9228:7;9236:1;9228:10;;;;;;;;:::i;:::-;;;;;;:55;;;;;9305:8;;;;;;;9353:14;9368:1;9353:17;;;;;;;;:::i;:::-;;;;;;;:25;;;9335:7;9343:6;9335:15;;;;;;;;:::i;:::-;;;;;;;;;;:43;8169:3;;8122:1275;;;;8003:1408;-1:-1:-1;9432:7:94;7166:2290;-1:-1:-1;;;;;7166:2290:94:o;1818:573:27:-;2143:10;;;2142:62;;-1:-1:-1;2159:39:27;;;;;2183:4;2159:39;;;43619:34:190;2159:15:27;43689::190;;;43669:18;;;43662:43;2159:15:27;;;;;43531:18:190;;2159:39:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;2142:62;2121:163;;;;;;;43918:2:190;2121:163:27;;;43900:21:190;43957:2;43937:18;;;43930:30;43996:34;43976:18;;;43969:62;44067:24;44047:18;;;44040:52;44109:19;;2121:163:27;43716:418:190;2121:163:27;2321:62;;44343:42:190;44331:55;;2321:62:27;;;44313:74:190;44403:18;;;44396:34;;;2294:90:27;;2314:5;;2344:22;;44286:18:190;;2321:62:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2294:19;:90::i;:::-;1818:573;;;:::o;941:175::-;1050:58;;44343:42:190;44331:55;;1050:58:27;;;44313:74:190;44403:18;;;44396:34;;;1023:86:27;;1043:5;;1073:23;;44286:18:190;;1050:58:27;44139:297:190;2647:312:28;2761:6;2736:21;:31;;2728:73;;;;;;;44643:2:190;2728:73:28;;;44625:21:190;44682:2;44662:18;;;44655:30;44721:31;44701:18;;;44694:59;44770:18;;2728:73:28;44441:353:190;2728:73:28;2813:12;2831:9;:14;;2853:6;2831:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2812:52;;;2882:7;2874:78;;;;;;;45211:2:190;2874:78:28;;;45193:21:190;45250:2;45230:18;;;45223:30;45289:34;45269:18;;;45262:62;45360:28;45340:18;;;45333:56;45406:19;;2874:78:28;45009:422:190;4693:224:28;4792:12;4823:87;4845:6;4853:4;4859:5;4823:87;;;;;;;;;;;;;;;;;:21;:87::i;:::-;4816:94;4693:224;-1:-1:-1;;;;4693:224:28:o;1014:366:33:-;1120:4;1137:17;1156:24;1184:33;1201:4;1207:9;1184:16;:33::i;:::-;1136:81;;-1:-1:-1;1136:81:33;-1:-1:-1;1256:26:33;1247:5;:35;;;;;;;;:::i;:::-;;:58;;;;;1299:6;1286:19;;:9;:19;;;1247:58;1246:127;;;;1322:51;1349:6;1357:4;1363:9;1322:26;:51::i;:::-;1227:146;1014:366;-1:-1:-1;;;;;;1014:366:33:o;5173:642:27:-;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;5618:27;;;;:69;;;;;:::i;:::-;5592:95;;5705:10;:17;5726:1;5705:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5697:111;;;;;;;45827:2:190;5697:111:27;;;45809:21:190;45866:2;45846:18;;;45839:30;45905:34;45885:18;;;45878:62;45976:12;45956:18;;;45949:40;46006:19;;5697:111:27;45625:406:190;5165:446:28;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;46238:2:190;5354:81:28;;;46220:21:190;46277:2;46257:18;;;46250:30;46316:34;46296:18;;;46289:62;46387:8;46367:18;;;46360:36;46413:19;;5354:81:28;46036:402:190;5354:81:28;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:28:o;2145:730:32:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:32;;-1:-1:-1;2822:35:32;2259:610;2145:730;;;;;:::o;1786:473:33:-;1929:4;1946:12;1960:19;1983:6;:17;;2037:34;;;2073:4;2079:9;2014:75;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1983:116;;;;2014:75;1983:116;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1945:154;;;;2117:7;:42;;;;;2157:2;2140:6;:13;:19;;2117:42;:134;;;;-1:-1:-1;2175:29:33;;2216:34;;2175:29;;;;;;;;;;;;:::i;:::-;:76;;1786:473;-1:-1:-1;;;;;;1786:473:33:o;4108:223:28:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;1702:19;;;;8113:60;;;;;;;47419:2:190;8113:60:28;;;47401:21:190;47458:2;47438:18;;;47431:30;47497:31;47477:18;;;47470:59;47546:18;;8113:60:28;47217:353:190;8113:60:28;-1:-1:-1;8208:10:28;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;5009:1456:32:-;5097:7;;6021:66;6008:79;;6004:161;;;-1:-1:-1;6119:1:32;;-1:-1:-1;6123:30:32;6103:51;;6004:161;6276:24;;;6259:14;6276:24;;;;;;;;;47802:25:190;;;47875:4;47863:17;;47843:18;;;47836:45;;;;47897:18;;;47890:34;;;47940:18;;;47933:34;;;6276:24:32;;47774:19:190;;6276:24:32;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6276:24:32;;;;;;-1:-1:-1;;6314:20:32;;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;-1:-1:-1;6437:20:32;;-1:-1:-1;5009:1456:32;;;;;;;;:::o;8821:540:28:-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;14:332:190:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;199:117;335:5;14:332;-1:-1:-1;;;14:332:190:o;543:154::-;629:42;622:5;618:54;611:5;608:65;598:93;;687:1;684;677:12;702:347;753:8;763:6;817:3;810:4;802:6;798:17;794:27;784:55;;835:1;832;825:12;784:55;-1:-1:-1;858:20:190;;901:18;890:30;;887:50;;;933:1;930;923:12;887:50;970:4;962:6;958:17;946:29;;1022:3;1015:4;1006:6;998;994:19;990:30;987:39;984:59;;;1039:1;1036;1029:12;1054:823;1160:6;1168;1176;1184;1192;1200;1253:3;1241:9;1232:7;1228:23;1224:33;1221:53;;;1270:1;1267;1260:12;1221:53;1309:9;1296:23;1328:31;1353:5;1328:31;:::i;:::-;1378:5;-1:-1:-1;1435:2:190;1420:18;;1407:32;1448:33;1407:32;1448:33;:::i;:::-;1500:7;-1:-1:-1;1554:2:190;1539:18;;1526:32;;-1:-1:-1;1605:2:190;1590:18;;1577:32;;-1:-1:-1;1660:3:190;1645:19;;1632:33;1688:18;1677:30;;1674:50;;;1720:1;1717;1710:12;1674:50;1759:58;1809:7;1800:6;1789:9;1785:22;1759:58;:::i;:::-;1054:823;;;;-1:-1:-1;1054:823:190;;-1:-1:-1;1054:823:190;;1836:8;;1054:823;-1:-1:-1;;;1054:823:190:o;2064:184::-;2116:77;2113:1;2106:88;2213:4;2210:1;2203:15;2237:4;2234:1;2227:15;2253:253;2325:2;2319:9;2367:4;2355:17;;2402:18;2387:34;;2423:22;;;2384:62;2381:88;;;2449:18;;:::i;:::-;2485:2;2478:22;2253:253;:::o;2511:::-;2583:2;2577:9;2625:4;2613:17;;2660:18;2645:34;;2681:22;;;2642:62;2639:88;;;2707:18;;:::i;2769:253::-;2841:2;2835:9;2883:4;2871:17;;2918:18;2903:34;;2939:22;;;2900:62;2897:88;;;2965:18;;:::i;3027:334::-;3098:2;3092:9;3154:2;3144:13;;3159:66;3140:86;3128:99;;3257:18;3242:34;;3278:22;;;3239:62;3236:88;;;3304:18;;:::i;:::-;3340:2;3333:22;3027:334;;-1:-1:-1;3027:334:190:o;3366:245::-;3414:4;3447:18;3439:6;3436:30;3433:56;;;3469:18;;:::i;:::-;-1:-1:-1;3526:2:190;3514:15;3531:66;3510:88;3600:4;3506:99;;3366:245::o;3616:462::-;3658:5;3711:3;3704:4;3696:6;3692:17;3688:27;3678:55;;3729:1;3726;3719:12;3678:55;3765:6;3752:20;3796:48;3812:31;3840:2;3812:31;:::i;:::-;3796:48;:::i;:::-;3869:2;3860:7;3853:19;3915:3;3908:4;3903:2;3895:6;3891:15;3887:26;3884:35;3881:55;;;3932:1;3929;3922:12;3881:55;3997:2;3990:4;3982:6;3978:17;3971:4;3962:7;3958:18;3945:55;4045:1;4020:16;;;4038:4;4016:27;4009:38;;;;4024:7;3616:462;-1:-1:-1;;;3616:462:190:o;4083:320::-;4151:6;4204:2;4192:9;4183:7;4179:23;4175:32;4172:52;;;4220:1;4217;4210:12;4172:52;4260:9;4247:23;4293:18;4285:6;4282:30;4279:50;;;4325:1;4322;4315:12;4279:50;4348:49;4389:7;4380:6;4369:9;4365:22;4348:49;:::i;5395:412::-;5507:6;5560:2;5548:9;5539:7;5535:23;5531:32;5528:52;;;5576:1;5573;5566:12;5528:52;5616:9;5603:23;5649:18;5641:6;5638:30;5635:50;;;5681:1;5678;5671:12;5635:50;5704:22;;5760:2;5742:16;;;5738:25;5735:45;;;5776:1;5773;5766:12;5812:775;5939:6;5947;5955;5963;6016:2;6004:9;5995:7;5991:23;5987:32;5984:52;;;6032:1;6029;6022:12;5984:52;6072:9;6059:23;6101:18;6142:2;6134:6;6131:14;6128:34;;;6158:1;6155;6148:12;6128:34;6181:22;;;;6237:3;6219:16;;;6215:26;6212:46;;;6254:1;6251;6244:12;6212:46;6277:2;;-1:-1:-1;6326:2:190;6311:18;;6298:32;;-1:-1:-1;6383:2:190;6368:18;;6355:32;;6399:16;;;6396:36;;;6428:1;6425;6418:12;6396:36;;6467:60;6519:7;6508:8;6497:9;6493:24;6467:60;:::i;:::-;5812:775;;;;-1:-1:-1;6546:8:190;-1:-1:-1;;;;5812:775:190:o;6823:198::-;6898:4;6931:18;6923:6;6920:30;6917:56;;;6953:18;;:::i;:::-;-1:-1:-1;6998:1:190;6994:14;7010:4;6990:25;;6823:198::o;7026:118::-;7112:5;7105:13;7098:21;7091:5;7088:32;7078:60;;7134:1;7131;7124:12;7149:128;7214:20;;7243:28;7214:20;7243:28;:::i;:::-;7149:128;;;:::o;7282:568::-;7338:5;7386:4;7374:9;7369:3;7365:19;7361:30;7358:50;;;7404:1;7401;7394:12;7358:50;7426:22;;:::i;:::-;7417:31;;7485:9;7472:23;7504:33;7529:7;7504:33;:::i;:::-;7546:22;;7620:2;7605:18;;7592:32;7633:33;7592:32;7633:33;:::i;:::-;7693:2;7682:14;;7675:31;7758:2;7743:18;;7730:32;7771:33;7730:32;7771:33;:::i;:::-;7831:2;7820:14;;7813:31;7824:5;7282:568;-1:-1:-1;;7282:568:190:o;7855:156::-;7921:20;;7981:4;7970:16;;7960:27;;7950:55;;8001:1;7998;7991:12;8016:1145;8072:5;8125:3;8118:4;8110:6;8106:17;8102:27;8092:55;;8143:1;8140;8133:12;8092:55;8179:6;8166:20;8205:4;8229:75;8245:58;8300:2;8245:58;:::i;8229:75::-;8338:15;;;8400:4;8443:11;;;8431:24;;8427:33;;;8369:12;;;;8326:3;8472:15;;;8469:35;;;8500:1;8497;8490:12;8469:35;8536:2;8528:6;8524:15;8548:584;8564:6;8559:3;8556:15;8548:584;;;8640:2;8634:3;8629;8625:13;8621:22;8618:112;;;8684:1;8713:2;8709;8702:14;8618:112;8756:22;;:::i;:::-;8819:3;8806:17;8836:33;8861:7;8836:33;:::i;:::-;8882:22;;8940:30;8957:12;;;8940:30;:::i;:::-;8924:14;;;8917:54;8994:2;9045:12;;;9032:26;9016:14;;;9009:50;9072:18;;9110:12;;;;8581;;8548:584;;;-1:-1:-1;9150:5:190;;8016:1145;-1:-1:-1;;;;;;;8016:1145:190:o;9166:2580::-;9235:5;9288:3;9281:4;9273:6;9269:17;9265:27;9255:55;;9306:1;9303;9296:12;9255:55;9342:6;9329:20;9368:4;9392:75;9408:58;9463:2;9408:58;:::i;9392:75::-;9501:15;;;9587:1;9583:10;;;;9571:23;;9567:32;;;9532:12;;;;9611:15;;;9608:35;;;9639:1;9636;9629:12;9608:35;9675:2;9667:6;9663:15;9687:2030;9703:6;9698:3;9695:15;9687:2030;;;9789:3;9776:17;9816:18;9866:2;9853:11;9850:19;9847:39;;;9882:1;9879;9872:12;9847:39;9909:24;;;;10040:4;9957:12;;;9971:66;9953:85;9949:96;9946:186;;;10086:1;10115:2;10111;10104:14;9946:186;10158:22;;:::i;:::-;10229:2;10225;10221:11;10208:25;10246:33;10271:7;10246:33;:::i;:::-;10292:22;;10337:2;10381:11;;;10368:25;10409:16;;;10406:106;;;10466:1;10495:2;10491;10484:14;10406:106;10535:17;;10587:2;10579:11;;10575:21;-1:-1:-1;10565:119:190;;10638:1;10667:2;10663;10656:14;10565:119;10729:2;10725;10721:11;10708:25;10759:76;10775:59;10830:3;10775:59;:::i;10759:76::-;10879:18;;;10978:1;10974:11;;;;10966:20;;10962:29;;;10919:14;;;;11007:17;;;11004:110;;;11066:1;11096:3;11091;11084:16;11004:110;11140:11;;;;11164:174;11182:8;11175:5;11172:19;11164:174;;;11264:19;;11250:34;;11203:14;;;;11310;;;;11164:174;;;11358:14;;;11351:29;-1:-1:-1;;;11430:4:190;11422:13;;11409:27;11452:16;;;11449:109;;;11510:1;11540:3;11535;11528:16;11449:109;11594:49;11639:3;11634:2;11623:8;11619:2;11615:17;11611:26;11594:49;:::i;:::-;11578:14;;;11571:73;;;;-1:-1:-1;11657:18:190;;-1:-1:-1;;11695:12:190;;;;9720;;9687:2030;;;-1:-1:-1;11735:5:190;9166:2580;-1:-1:-1;;;;;;9166:2580:190:o;11751:3753::-;11865:6;11873;11926:2;11914:9;11905:7;11901:23;11897:32;11894:52;;;11942:1;11939;11932:12;11894:52;11965:18;12023:2;12011:9;11998:23;11995:31;11992:51;;;12039:1;12036;12029:12;11992:51;12114:4;12100:9;12087:23;12076:9;12072:39;12063:7;12059:53;12055:64;12052:84;;;12132:1;12129;12122:12;12052:84;12158:22;;:::i;:::-;12231:23;;12216:39;;12203:53;;12189:68;;12347:2;12302:48;;;12289:62;12273:14;;;12266:86;12442:2;12397:48;;;12384:62;12368:14;;;12361:86;12520:2;12475:48;12462:62;12459:70;-1:-1:-1;12456:90:190;;;12542:1;12539;12532:12;12456:90;12642:23;;12627:39;;12668:2;12623:48;;12610:62;12565:108;12704:4;12696:13;;12692:27;-1:-1:-1;12682:55:190;;12733:1;12730;12723:12;12682:55;12757:89;12773:72;12841:2;12828:16;12773:72;:::i;12757:89::-;12892:16;;12880:29;;;12934:2;12925:12;;;;12868:3;12968:1;12964:24;12956:33;;12952:42;12949:55;-1:-1:-1;12946:75:190;;;13017:1;13014;13007:12;12946:75;13049:2;13045;13041:11;13061:1939;13124:2;13117;13104:16;13101:1;13097:24;13093:2;13089:33;13085:42;13080:3;13077:51;13061:1939;;;13208:2;13202:3;13189:17;13186:25;13183:45;;;13224:1;13221;13214:12;13183:45;13251:66;13388:4;13383:2;13375:3;13362:17;13358:2;13354:26;13345:7;13341:40;13337:49;13333:60;13330:80;;;13406:1;13403;13396:12;13330:80;13438:22;;:::i;:::-;13530:2;13524;13517:3;13504:17;13500:2;13496:26;13492:35;13479:49;13476:57;13473:77;;;13546:1;13543;13536:12;13473:77;13630:17;;13622:26;;13650:2;13618:35;;13605:49;13573:82;13702:4;13679:16;;;13675:25;;13671:36;13668:56;;;13720:1;13717;13710:12;13668:56;13752:22;;:::i;:::-;13737:37;;13787:51;13833:2;13829;13825:11;13812:25;13787:51;:::i;:::-;13888:2;13884;13880:11;13867:25;13858:7;13851:42;13931:28;13955:2;13951;13947:11;13931:28;:::i;:::-;13926:2;13917:7;13913:16;13906:54;13998:49;14039:7;14034:2;14030;14026:11;13998:49;:::i;:::-;13993:2;13984:7;13980:16;13973:75;14095:2;14088:3;14084:2;14080:12;14067:26;14064:34;14061:54;;;14111:1;14108;14101:12;14061:54;14153:85;14230:7;14225:2;14217:3;14213:2;14209:12;14196:26;14192:2;14188:35;14184:44;14153:85;:::i;:::-;14148:2;14139:7;14135:16;14128:111;14287:2;14279:4;14275:2;14271:13;14258:27;14255:35;14252:55;;;14303:1;14300;14293:12;14252:55;14347:86;14425:7;14420:2;14411:4;14407:2;14403:13;14390:27;14386:2;14382:36;14378:45;14347:86;:::i;:::-;14340:4;14331:7;14327:18;14320:114;;14463:7;14454;14447:24;14554:2;14547:3;14534:17;14530:2;14526:26;14522:35;14509:49;14504:2;14495:7;14491:16;14484:75;14642:2;14635:3;14622:17;14618:2;14614:26;14610:35;14597:49;14592:2;14583:7;14579:16;14572:75;14719:2;14711:4;14704:3;14691:17;14687:2;14683:26;14679:37;14666:51;14663:59;14660:79;;;14735:1;14732;14725:12;14660:79;14777:147;14916:7;14882:17;;14874:26;;14902:4;14870:37;;14857:51;14825:84;14911:2;14821:93;14777:147;:::i;:::-;14772:2;14759:16;;14752:173;14938:20;;-1:-1:-1;14987:2:190;14978:12;;;;13146;13061:1939;;;-1:-1:-1;15027:2:190;15016:14;;15009:29;-1:-1:-1;;15085:23:190;;15070:39;;15111:4;15066:50;15053:64;15050:72;-1:-1:-1;15047:92:190;;;15135:1;15132;15125:12;15047:92;15173:137;15302:7;15267:23;;15252:39;;15293:4;15248:50;;15235:64;15190:110;15173:137;:::i;:::-;15166:4;15155:16;;15148:163;15159:5;-1:-1:-1;15378:2:190;15363:18;;15350:32;15347:40;-1:-1:-1;15344:60:190;;;15400:1;15397;15390:12;15344:60;;15423:75;15490:7;15483:2;15472:9;15468:18;15455:32;15444:9;15440:48;15423:75;:::i;:::-;15413:85;;11751:3753;;;;;:::o;15509:664::-;15564:3;15602:5;15596:12;15629:6;15624:3;15617:19;15655:4;15684:2;15679:3;15675:12;15668:19;;15721:2;15714:5;15710:14;15742:1;15752:396;15766:6;15763:1;15760:13;15752:396;;;15825:13;;15867:9;;15878:42;15863:58;15851:71;;15966:11;;;15960:18;15980:4;15956:29;15942:12;;;15935:51;16009:4;16053:11;;;16047:18;16033:12;;;16026:40;16095:4;16086:14;;;;16123:15;;;;15788:1;15781:9;15752:396;;;-1:-1:-1;16164:3:190;;15509:664;-1:-1:-1;;;;;15509:664:190:o;16178:435::-;16231:3;16269:5;16263:12;16296:6;16291:3;16284:19;16322:4;16351:2;16346:3;16342:12;16335:19;;16388:2;16381:5;16377:14;16409:1;16419:169;16433:6;16430:1;16427:13;16419:169;;;16494:13;;16482:26;;16528:12;;;;16563:15;;;;16455:1;16448:9;16419:169;;16618:250;16703:1;16713:113;16727:6;16724:1;16721:13;16713:113;;;16803:11;;;16797:18;16784:11;;;16777:39;16749:2;16742:10;16713:113;;;-1:-1:-1;;16860:1:190;16842:16;;16835:27;16618:250::o;16873:329::-;16914:3;16952:5;16946:12;16979:6;16974:3;16967:19;16995:76;17064:6;17057:4;17052:3;17048:14;17041:4;17034:5;17030:16;16995:76;:::i;:::-;17116:2;17104:15;17121:66;17100:88;17091:98;;;;17191:4;17087:109;;16873:329;-1:-1:-1;;16873:329:190:o;17207:1088::-;17275:3;17313:5;17307:12;17340:6;17335:3;17328:19;17366:4;17407:2;17402:3;17398:12;17432:11;17459;17452:18;;17509:6;17506:1;17502:14;17495:5;17491:26;17479:38;;17551:2;17544:5;17540:14;17572:1;17582:687;17596:6;17593:1;17590:13;17582:687;;;17667:5;17661:4;17657:16;17652:3;17645:29;17703:6;17697:13;17733:4;17778:42;17773:2;17767:9;17763:58;17757:4;17750:72;17869:2;17865;17861:11;17855:18;17908:2;17903;17897:4;17893:13;17886:25;17938:57;17991:2;17985:4;17981:13;17967:12;17938:57;:::i;:::-;17924:71;;;18018:4;18071:2;18067;18063:11;18057:18;18035:40;;18122:4;18114:6;18110:17;18105:2;18099:4;18095:13;18088:40;;18149;18182:6;18166:14;18149:40;:::i;:::-;18247:12;;;;18141:48;-1:-1:-1;;;18212:15:190;;;;17618:1;17611:9;17582:687;;;-1:-1:-1;18285:4:190;;17207:1088;-1:-1:-1;;;;;;;17207:1088:190:o;18300:2843::-;18466:4;18495:2;18524;18513:9;18506:21;18565:3;18554:9;18550:19;18611:6;18605:13;18600:2;18589:9;18585:18;18578:41;18656:2;18648:6;18644:15;18638:22;18679:2;18717;18712;18701:9;18697:18;18690:30;18757:2;18749:6;18745:15;18739:22;18729:32;;18780:2;18818;18813;18802:9;18798:18;18791:30;18868:2;18860:6;18856:15;18850:22;18830:42;;18891:4;18914:3;18953:2;18948;18937:9;18933:18;18926:30;18976:6;19011:12;19005:19;19048:6;19040;19033:22;19074:3;19064:13;;19108:2;19097:9;19093:18;19086:25;;19170:2;19160:6;19157:1;19153:14;19142:9;19138:30;19134:39;19214:2;19200:12;19196:21;19182:35;;19235:1;19245:1650;19259:6;19256:1;19253:13;19245:1650;;;19324:22;;;19348:66;19320:95;19308:108;;19439:13;;19487:9;;19509:18;;;19634:21;;19551:42;19630:31;;;19613:15;;;19606:56;19719:23;;;19713:30;19706:38;19699:46;19682:15;;;19675:71;19787:23;;;19781:30;19853:21;;19849:31;;19843:3;19831:16;;19824:57;19928:23;;;19922:30;19918:40;;19901:15;;;19894:65;20007:23;;20001:30;19997:40;19991:3;19979:16;;19972:66;20079:23;;;20073:30;20135:3;20123:16;;20116:28;;;20171:64;20230:3;20218:16;;20073:30;20171:64;:::i;:::-;20276:23;;;20270:30;20342:19;;;20363:66;20338:92;20332:3;20320:16;;20313:118;20270:30;20157:78;-1:-1:-1;20455:54:190;20157:78;20270:30;20455:54;:::i;:::-;20444:65;;;20560:2;20556;20552:11;20546:18;20541:2;20533:6;20529:15;20522:43;20616:2;20612;20608:11;20602:18;20597:2;20589:6;20585:15;20578:43;20670:2;20666;20662:11;20656:18;20634:40;;20720:6;20715:3;20711:16;20706:2;20698:6;20694:15;20687:41;20751:64;20811:3;20795:14;20751:64;:::i;:::-;20838:15;;;;20873:12;;;;20741:74;-1:-1:-1;;;19281:1:190;19274:9;19245:1650;;;19249:3;20944:2;20936:6;20932:15;20926:22;20904:44;;21012:66;21000:9;20992:6;20988:22;20984:95;20979:2;20968:9;20964:18;20957:123;21097:40;21130:6;21114:14;21097:40;:::i;:::-;21089:48;18300:2843;-1:-1:-1;;;;;;;;;;;;;18300:2843:190:o;21148:245::-;21227:6;21235;21288:2;21276:9;21267:7;21263:23;21259:32;21256:52;;;21304:1;21301;21294:12;21256:52;-1:-1:-1;;21327:16:190;;21383:2;21368:18;;;21362:25;21327:16;;21362:25;;-1:-1:-1;21148:245:190:o;21813:441::-;21866:5;21919:3;21912:4;21904:6;21900:17;21896:27;21886:55;;21937:1;21934;21927:12;21886:55;21966:6;21960:13;21997:48;22013:31;22041:2;22013:31;:::i;21997:48::-;22070:2;22061:7;22054:19;22116:3;22109:4;22104:2;22096:6;22092:15;22088:26;22085:35;22082:55;;;22133:1;22130;22123:12;22082:55;22146:77;22220:2;22213:4;22204:7;22200:18;22193:4;22185:6;22181:17;22146:77;:::i;22259:674::-;22324:5;22377:3;22370:4;22362:6;22358:17;22354:27;22344:55;;22395:1;22392;22385:12;22344:55;22424:6;22418:13;22450:4;22474:75;22490:58;22545:2;22490:58;:::i;22474:75::-;22583:15;;;22669:1;22665:10;;;;22653:23;;22649:32;;;22614:12;;;;22693:15;;;22690:35;;;22721:1;22718;22711:12;22690:35;22757:2;22749:6;22745:15;22769:135;22785:6;22780:3;22777:15;22769:135;;;22851:10;;22839:23;;22882:12;;;;22802;;22769:135;;22938:1508;23059:6;23112:2;23100:9;23091:7;23087:23;23083:32;23080:52;;;23128:1;23125;23118:12;23080:52;23161:9;23155:16;23190:18;23231:2;23223:6;23220:14;23217:34;;;23247:1;23244;23237:12;23217:34;23270:22;;;;23326:4;23308:16;;;23304:27;23301:47;;;23344:1;23341;23334:12;23301:47;23370:22;;:::i;:::-;23422:2;23416:9;23434:33;23459:7;23434:33;:::i;:::-;23476:22;;23537:2;23529:11;;23523:18;23553:16;;;23550:36;;;23582:1;23579;23572:12;23550:36;23605:17;;23656:4;23638:16;;;23634:27;23631:47;;;23674:1;23671;23664:12;23631:47;23702:22;;:::i;:::-;23754:2;23748:9;23766:33;23791:7;23766:33;:::i;:::-;23808:24;;23871:2;23863:11;;23857:18;23887:16;;;23884:36;;;23916:1;23913;23906:12;23884:36;23954:55;24001:7;23990:8;23986:2;23982:17;23954:55;:::i;:::-;23949:2;23940:7;23936:16;23929:81;;24049:2;24045;24041:11;24035:18;24078:2;24068:8;24065:16;24062:36;;;24094:1;24091;24084:12;24062:36;24132:67;24191:7;24180:8;24176:2;24172:17;24132:67;:::i;:::-;24127:2;24118:7;24114:16;24107:93;;24232:7;24227:2;24220:5;24216:14;24209:31;;;24279:2;24275;24271:11;24265:18;24308:2;24298:8;24295:16;24292:36;;;24324:1;24321;24314:12;24292:36;24360:55;24407:7;24396:8;24392:2;24388:17;24360:55;:::i;:::-;24355:2;24344:14;;24337:79;-1:-1:-1;24348:5:190;22938:1508;-1:-1:-1;;;;;22938:1508:190:o;24451:1278::-;24673:4;24702:42;24783:2;24775:6;24771:15;24760:9;24753:34;24823:2;24818;24807:9;24803:18;24796:30;24881:2;24872:6;24866:13;24862:22;24857:2;24846:9;24842:18;24835:50;24932:2;24924:6;24920:15;24914:22;24974:4;24967;24956:9;24952:20;24945:34;25041:2;25026:12;25020:19;25016:28;25010:3;24999:9;24995:19;24988:57;25100:2;25086:12;25082:21;25076:28;25054:50;;25141:4;25135:3;25124:9;25120:19;25113:33;25169:53;25217:3;25206:9;25202:19;25186:14;25169:53;:::i;:::-;25155:67;;25277:2;25263:12;25259:21;25253:28;25231:50;;25346:66;25334:9;25326:6;25322:22;25318:95;25312:3;25301:9;25297:19;25290:124;25434:52;25479:6;25463:14;25434:52;:::i;:::-;25423:63;;;25535:2;25527:6;25523:15;25517:22;25601:66;25589:9;25584:3;25580:19;25576:92;25570:3;25559:9;25555:19;25548:121;25686:37;25719:3;25703:14;25686:37;:::i;25734:184::-;25786:77;25783:1;25776:88;25883:4;25880:1;25873:15;25907:4;25904:1;25897:15;25923:625;26226:2;26215:9;26208:21;26189:4;26252:44;26292:2;26281:9;26277:18;26269:6;26252:44;:::i;:::-;26344:9;26336:6;26332:22;26327:2;26316:9;26312:18;26305:50;26378:44;26415:6;26407;26378:44;:::i;:::-;26364:58;;26470:9;26462:6;26458:22;26453:2;26442:9;26438:18;26431:50;26498:44;26535:6;26527;26498:44;:::i;26553:572::-;26694:6;26702;26710;26763:2;26751:9;26742:7;26738:23;26734:32;26731:52;;;26779:1;26776;26769:12;26731:52;26811:9;26805:16;26830:31;26855:5;26830:31;:::i;:::-;26930:2;26915:18;;26909:25;26880:5;;-1:-1:-1;26943:33:190;26909:25;26943:33;:::i;:::-;27047:2;27032:18;;27026:25;26995:7;;-1:-1:-1;27060:33:190;27026:25;27060:33;:::i;:::-;27112:7;27102:17;;;26553:572;;;;;:::o;27329:640::-;27458:4;27464:6;27524:11;27511:25;27614:66;27603:8;27587:14;27583:29;27579:102;27559:18;27555:127;27545:155;;27696:1;27693;27686:12;27545:155;27723:33;;27775:20;;;-1:-1:-1;27818:18:190;27807:30;;27804:50;;;27850:1;27847;27840:12;27804:50;27883:4;27871:17;;-1:-1:-1;27934:1:190;27930:14;;;27914;27910:35;27900:46;;27897:66;;;27959:1;27956;27949:12;27974:603;28068:5;28075:6;28135:3;28122:17;28217:66;28206:8;28190:14;28186:29;28182:102;28162:18;28158:127;28148:155;;28299:1;28296;28289:12;28148:155;28327:33;;28431:4;28418:18;;;-1:-1:-1;28379:21:190;;-1:-1:-1;28459:18:190;28448:30;;28445:50;;;28491:1;28488;28481:12;28445:50;28545:6;28542:1;28538:14;28522;28518:35;28511:5;28507:47;28504:67;;;28567:1;28564;28557:12;28582:593;28663:5;28670:6;28730:3;28717:17;28812:66;28801:8;28785:14;28781:29;28777:102;28757:18;28753:127;28743:155;;28894:1;28891;28884:12;28743:155;28922:33;;29026:4;29013:18;;;-1:-1:-1;28974:21:190;;-1:-1:-1;29054:18:190;29043:30;;29040:50;;;29086:1;29083;29076:12;29040:50;29145:4;29137:6;29133:17;29117:14;29113:38;29106:5;29102:50;29099:70;;;29165:1;29162;29155:12;29180:753;29291:6;29286:3;29279:19;29261:3;29317:4;29346:2;29341:3;29337:12;29330:19;;29372:5;29395:1;29405:503;29419:6;29416:1;29413:13;29405:503;;;29496:6;29483:20;29516:33;29541:7;29516:33;:::i;:::-;29587:42;29574:56;29562:69;;29704:4;29669:33;29686:15;;;29669:33;:::i;:::-;29665:44;29651:12;;;29644:66;29733:4;29784:15;;;29771:29;29757:12;;;29750:51;29824:4;29848:12;;;;29883:15;;;;29441:1;29434:9;29405:503;;29938:559;29996:5;30003:6;30063:3;30050:17;30145:66;30134:8;30118:14;30114:29;30110:102;30090:18;30086:127;30076:155;;30227:1;30224;30217:12;30076:155;30255:33;;30359:4;30346:18;;;-1:-1:-1;30307:21:190;;-1:-1:-1;30387:18:190;30376:30;;30373:50;;;30419:1;30416;30409:12;30373:50;30466:6;30450:14;30446:27;30439:5;30435:39;30432:59;;;30487:1;30484;30477:12;30502:325;30590:6;30585:3;30578:19;30642:6;30635:5;30628:4;30623:3;30619:14;30606:43;;30694:1;30687:4;30678:6;30673:3;30669:16;30665:27;30658:38;30560:3;30816:4;30746:66;30741:2;30733:6;30729:15;30725:88;30720:3;30716:98;30712:109;30705:116;;30502:325;;;;:::o;30832:1872::-;30956:6;30951:3;30944:19;30926:3;30982:4;31023:2;31018:3;31014:12;31048:11;31075;31068:18;;31105:1;31095:11;;31146:6;31142:2;31138:15;31131:5;31127:27;31177:5;31200:1;31210:1468;31224:6;31221:1;31218:13;31210:1468;;;31295:5;31289:4;31285:16;31280:3;31273:29;31354:6;31341:20;31440:66;31432:5;31416:14;31412:26;31408:99;31388:18;31384:124;31374:152;;31522:1;31519;31512:12;31374:152;31554:30;;31607:4;31639:21;;31673:33;31639:21;31673:33;:::i;:::-;31745:42;31732:56;31719:70;;31836:93;31912:16;;;31916:7;31836:93;:::i;:::-;31964:2;31959;31953:4;31949:13;31942:25;32002:12;31997:2;31991:4;31987:13;31980:35;32038:3;32028:13;;32074:66;32060:12;32057:84;32054:104;;;32154:1;32151;32144:12;32054:104;32187:21;;;32249:12;32234:13;;;32221:51;32295:19;;;-1:-1:-1;32337:4:190;32392:57;32432:16;;;32436:7;32392:57;:::i;:::-;32354:95;;32503:2;32496:4;32492:2;32488:13;32484:22;32479:2;32473:4;32469:13;32462:45;32528:70;32594:2;32590;32586:11;32570:14;32554;32528:70;:::i;:::-;32656:12;;;;32520:78;-1:-1:-1;;;32621:15:190;;;;-1:-1:-1;;;31246:1:190;31239:9;31210:1468;;;-1:-1:-1;32694:4:190;;30832:1872;-1:-1:-1;;;;;;;;30832:1872:190:o;32709:4329::-;32933:4;32962:2;32991;32980:9;32973:21;33032:3;33021:9;33017:19;33085:6;33072:20;33067:2;33056:9;33052:18;33045:48;33112:4;33135:2;33198;33190:6;33186:15;33173:29;33168:2;33157:9;33153:18;33146:57;33222:3;33286:2;33278:6;33274:15;33261:29;33256:2;33245:9;33241:18;33234:57;33334:91;33421:2;33413:6;33409:15;33401:6;33334:91;:::i;:::-;33463:4;33441:20;;;33434:34;33503:28;;;;33550:3;;33569:18;;;33633:1;33629:20;;;33614:36;;33610:45;;33678:12;33708:1;33718:2869;33732:12;33729:1;33726:19;33718:2869;;;33827:66;33815:9;33807:6;33803:22;33799:95;33794:3;33787:108;33947:6;33934:20;34040:66;34025:12;34009:14;34005:33;34001:106;33981:18;33977:131;33967:159;;34122:1;34119;34112:12;33967:159;34152:37;;34230:19;;34306:14;34302:26;;;34330:66;34298:99;34272:126;;34262:154;;34412:1;34409;34402:12;34262:154;34489:18;;;34444:32;;34535:21;;34569:33;34535:21;34569:33;:::i;:::-;34625:42;34704:16;;;34687:15;;;34680:41;34762:16;;;34749:30;;34792;34749;34792;:::i;:::-;34868:15;;34861:23;34854:4;34842:17;;34835:50;34908:3;;34952:16;;;34939:30;34982:33;34939:30;34982:33;:::i;:::-;35052:16;;35035:15;;;35028:41;35110:16;;;35097:30;35140:33;35097:30;35140:33;:::i;:::-;35211:16;;35205:3;35193:16;;35186:42;35269:16;;;35256:30;35299:33;35256:30;35299:33;:::i;:::-;35369:16;35352:15;;;35345:41;35437:82;35513:4;35500:18;;35504:7;35437:82;:::i;:::-;35557:3;35551;35543:6;35539:16;35532:29;35588:98;35681:3;35673:6;35669:16;35653:14;35637;35588:98;:::i;:::-;35574:112;;;35737:80;35813:2;35804:7;35800:16;35791:7;35737:80;:::i;:::-;35699:118;;;;35880:66;35871:6;35863;35859:19;35855:92;35849:3;35841:6;35837:16;35830:118;35972:88;36053:6;36037:14;36021;35972:88;:::i;:::-;35961:99;;;;36121:2;36114:5;36110:14;36097:28;36092:2;36084:6;36080:15;36073:53;36187:2;36180:5;36176:14;36163:28;36158:2;36150:6;36146:15;36139:53;36243:89;36328:2;36321:5;36317:14;36310:5;36243:89;:::i;:::-;36205:127;;36378:6;36373:3;36369:16;36364:2;36356:6;36352:15;36345:41;36409:98;36503:3;36487:14;36471;36409:98;:::i;:::-;36565:12;;;;36399:108;-1:-1:-1;;;36530:15:190;;;;-1:-1:-1;33760:1:190;33753:9;33718:2869;;;33722:3;;36634:55;36685:2;36677:6;36673:15;36665:6;36634:55;:::i;:::-;36596:93;;;;36754:66;36742:9;36734:6;36730:22;36726:95;36720:3;36709:9;36705:19;36698:124;36844:65;36902:6;36886:14;36870;36844:65;:::i;:::-;36831:78;;;;;;;;36956:9;36949:5;36945:21;36940:2;36929:9;36925:18;36918:49;;;36984:48;37026:5;37018:6;37010;36984:48;:::i;37043:392::-;37145:4;37203:11;37190:25;37293:66;37282:8;37266:14;37262:29;37258:102;37238:18;37234:127;37224:155;;37375:1;37372;37365:12;37224:155;37396:33;;;;;37043:392;-1:-1:-1;;37043:392:190:o;37440:382::-;37532:4;37590:11;37577:25;37680:66;37669:8;37653:14;37649:29;37645:102;37625:18;37621:127;37611:155;;37762:1;37759;37752:12;37827:630;37943:4;37949:6;38009:11;37996:25;38099:66;38088:8;38072:14;38068:29;38064:102;38044:18;38040:127;38030:155;;38181:1;38178;38171:12;38030:155;38208:33;;38260:20;;;-1:-1:-1;38303:18:190;38292:30;;38289:50;;;38335:1;38332;38325:12;38289:50;38368:4;38356:17;;-1:-1:-1;38427:4:190;38415:17;;38399:14;38395:38;38385:49;;38382:69;;;38447:1;38444;38437:12;38462:247;38521:6;38574:2;38562:9;38553:7;38549:23;38545:32;38542:52;;;38590:1;38587;38580:12;38542:52;38629:9;38616:23;38648:31;38673:5;38648:31;:::i;38714:1271::-;39092:4;39140:3;39129:9;39125:19;39183:42;39175:6;39171:55;39160:9;39153:74;39246:2;39284:6;39279:2;39268:9;39264:18;39257:34;39327:6;39322:2;39311:9;39307:18;39300:34;39370:3;39365:2;39354:9;39350:18;39343:31;39394:6;39429;39423:13;39460:6;39452;39445:22;39498:3;39487:9;39483:19;39476:26;;39561:3;39551:6;39548:1;39544:14;39533:9;39529:30;39525:40;39511:54;;39600:2;39592:6;39588:15;39621:1;39631:325;39645:6;39642:1;39639:13;39631:325;;;39734:66;39722:9;39714:6;39710:22;39706:95;39701:3;39694:108;39825:51;39869:6;39860;39854:13;39825:51;:::i;:::-;39815:61;-1:-1:-1;39934:12:190;;;;39899:15;;;;39667:1;39660:9;39631:325;;;-1:-1:-1;39973:6:190;;38714:1271;-1:-1:-1;;;;;;;;;;38714:1271:190:o;39990:614::-;40119:6;40127;40180:2;40168:9;40159:7;40155:23;40151:32;40148:52;;;40196:1;40193;40186:12;40148:52;40229:9;40223:16;40258:18;40299:2;40291:6;40288:14;40285:34;;;40315:1;40312;40305:12;40285:34;40338:72;40402:7;40393:6;40382:9;40378:22;40338:72;:::i;:::-;40328:82;;40456:2;40445:9;40441:18;40435:25;40419:41;;40485:2;40475:8;40472:16;40469:36;;;40501:1;40498;40491:12;40469:36;;40524:74;40590:7;40579:8;40568:9;40564:24;40524:74;:::i;:::-;40514:84;;;39990:614;;;;;:::o;40609:368::-;40852:6;40841:9;40834:25;40895:2;40890;40879:9;40875:18;40868:30;40815:4;40915:56;40967:2;40956:9;40952:18;40944:6;40915:56;:::i;40982:545::-;41210:4;41239:42;41320:2;41312:6;41308:15;41297:9;41290:34;41372:2;41364:6;41360:15;41355:2;41344:9;41340:18;41333:43;;41412:6;41407:2;41396:9;41392:18;41385:34;41455:3;41450:2;41439:9;41435:18;41428:31;41476:45;41516:3;41505:9;41501:19;41493:6;41476:45;:::i;41532:245::-;41599:6;41652:2;41640:9;41631:7;41627:23;41623:32;41620:52;;;41668:1;41665;41658:12;41620:52;41700:9;41694:16;41719:28;41741:5;41719:28;:::i;41782:184::-;41852:6;41905:2;41893:9;41884:7;41880:23;41876:32;41873:52;;;41921:1;41918;41911:12;41873:52;-1:-1:-1;41944:16:190;;41782:184;-1:-1:-1;41782:184:190:o;42224:613::-;42337:6;42345;42353;42406:2;42394:9;42385:7;42381:23;42377:32;42374:52;;;42422:1;42419;42412:12;42374:52;42454:9;42448:16;42473:31;42498:5;42473:31;:::i;:::-;42573:2;42558:18;;42552:25;42523:5;;-1:-1:-1;42586:33:190;42552:25;42586:33;:::i;:::-;42689:2;42674:18;;42668:25;42638:7;;-1:-1:-1;42716:18:190;42705:30;;42702:50;;;42748:1;42745;42738:12;42702:50;42771:60;42823:7;42814:6;42803:9;42799:22;42771:60;:::i;:::-;42761:70;;;42224:613;;;;;:::o;45436:184::-;45488:77;45485:1;45478:88;45585:4;45582:1;45575:15;45609:4;45606:1;45599:15;46443:287;46572:3;46610:6;46604:13;46626:66;46685:6;46680:3;46673:4;46665:6;46661:17;46626:66;:::i;46735:288::-;46910:6;46899:9;46892:25;46953:2;46948;46937:9;46933:18;46926:30;46873:4;46973:44;47013:2;47002:9;46998:18;46990:6;46973:44;:::i;47978:219::-;48127:2;48116:9;48109:21;48090:4;48147:44;48187:2;48176:9;48172:18;48164:6;48147:44;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "arb((uint256,uint256,uint256,((address,bool,(address,address,address),(address,uint8,uint256)[],(address,uint8,uint256)[]),uint256,uint256,(address,uint256[],bytes)[])[],bytes),uint256,bytes)": "ae61ec12",
    "initialize((address,(address,bytes,uint256[]),bytes))": "98da8d6a",
    "initialize(bytes)": "439fab91",
    "onFlashLoan(address,address,uint256,uint256,bytes)": "23e30c8b",
    "sI9r()": "71c1dea7",
    "sI9rDispatch()": "89448c3a",
    "sI9rStore()": "61bb39e4",
    "sOrderBook()": "886d1650",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"meta\",\"type\":\"bytes\"}],\"internalType\":\"struct DeployerDiscoverableMetaV2ConstructionConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"badInitiator\",\"type\":\"address\"}],\"name\":\"BadInitiator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"badLender\",\"type\":\"address\"}],\"name\":\"BadLender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FlashLoanFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InitializeSignatureFn\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Initializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minimum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"MinimumOutput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoOrders\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonZeroBeforeArbStack\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"unmeta\",\"type\":\"bytes\"}],\"name\":\"NotRainMetaV1\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expectedHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actualHash\",\"type\":\"bytes32\"}],\"name\":\"UnexpectedMetaHash\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"orderBook\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IExpressionDeployerV2\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"constants\",\"type\":\"uint256[]\"}],\"internalType\":\"struct EvaluableConfigV2\",\"name\":\"evaluableConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"implementationData\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct OrderBookV3FlashBorrowerConfigV2\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"subject\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"meta\",\"type\":\"bytes\"}],\"name\":\"MetaV1\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minimumInput\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumInput\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumIORatio\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"handleIO\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"contract IInterpreterV1\",\"name\":\"interpreter\",\"type\":\"address\"},{\"internalType\":\"contract IInterpreterStoreV1\",\"name\":\"store\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expression\",\"type\":\"address\"}],\"internalType\":\"struct Evaluable\",\"name\":\"evaluable\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"internalType\":\"struct IO[]\",\"name\":\"validInputs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"internalType\":\"struct IO[]\",\"name\":\"validOutputs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"inputIOIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputIOIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"context\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedContextV1[]\",\"name\":\"signedContext\",\"type\":\"tuple[]\"}],\"internalType\":\"struct TakeOrderConfig[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct TakeOrdersConfigV2\",\"name\":\"takeOrders\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"minimumSenderOutput\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"exchangeData\",\"type\":\"bytes\"}],\"name\":\"arb\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"orderBook\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IExpressionDeployerV2\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"constants\",\"type\":\"uint256[]\"}],\"internalType\":\"struct EvaluableConfigV2\",\"name\":\"evaluableConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"implementationData\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderBookV3FlashBorrowerConfigV2\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sI9r\",\"outputs\":[{\"internalType\":\"contract IInterpreterV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sI9rDispatch\",\"outputs\":[{\"internalType\":\"EncodedDispatch\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sI9rStore\",\"outputs\":[{\"internalType\":\"contract IInterpreterStoreV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sOrderBook\",\"outputs\":[{\"internalType\":\"contract IOrderBookV3\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"BadInitiator(address)\":[{\"params\":{\"badInitiator\":\"The untrusted initiator of the flash loan.\"}}],\"BadLender(address)\":[{\"params\":{\"badLender\":\"The untrusted lender calling `onFlashLoan`.\"}}],\"MinimumOutput(uint256,uint256)\":[{\"params\":{\"actual\":\"The actual output that would be received by the sender.\",\"minimum\":\"The minimum output expected by the sender.\"}}],\"NotRainMetaV1(bytes)\":[{\"params\":{\"unmeta\":\"the bytes that are not meta.\"}}],\"UnexpectedMetaHash(bytes32,bytes32)\":[{\"params\":{\"actualHash\":\"The hash of the metadata seen by the `IMetaV1` contract.\",\"expectedHash\":\"The hash expected by the `IMetaV1` contract.\"}}]},\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MetaV1(address,uint256,bytes)\":{\"params\":{\"meta\":\"Rain metadata V1 compliant metadata bytes. https://github.com/rainprotocol/specs/blob/main/metadata-v1.md\",\"sender\":\"The msg.sender.\",\"subject\":\"The entity that the metadata is about. MAY be the address of the emitting contract (as `uint256`) OR anything else. The interpretation of the subject is context specific, so will often be a hash of some data/thing that this metadata is about.\"}}},\"kind\":\"dev\",\"methods\":{\"arb((uint256,uint256,uint256,((address,bool,(address,address,address),(address,uint8,uint256)[],(address,uint8,uint256)[]),uint256,uint256,(address,uint256[],bytes)[])[],bytes),uint256,bytes)\":{\"params\":{\"exchangeData\":\"Arbitrary bytes that will be passed to `_exchange` after the flash loan is taken. The inheriting contract is responsible for decoding this data and defining how it controls interactions with the external liquidity. For example, `GenericPoolOrderBookFlashBorrower` uses this data as a literal encoded external call.\",\"minimumSenderOutput\":\"The minimum output that must be sent to the sender by the end of the arb call. This, in combination with the orderbook's own asset handling, is expected to REPLACE the standard slippage protection that would be provided by a DEX. The sender is expected to calculate absolute values based on prevailing conditions such as gas price and the risk of holding the assets any arb profit is denominated in.\",\"takeOrders\":\"As per `IOrderBookV3.takeOrders`.\"}},\"initialize(bytes)\":{\"details\":\"The `ICloneableV2` interface is identical to `ICloneableV1` except that it returns a `bytes32` success hash.\",\"params\":{\"data\":\"The initialization data.\"},\"returns\":{\"_0\":\"keccak256(\\\"ICloneableV2.initialize\\\") if successful.\"}},\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"details\":\"Receive a flash loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"fee\":\"The additional amount of tokens to repay.\",\"initiator\":\"The initiator of the loan.\",\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The keccak256 hash of \\\"ERC3156FlashBorrower.onFlashLoan\\\"\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"GenericPoolOrderBookV3FlashBorrower Implements the OrderBookV3FlashBorrower interface for a external liquidity source that behaves vaguely like a standard AMM. The `exchangeData` from `arb` is decoded into a spender, pool and callData. The `callData` is literally the encoded function call to the pool. This allows the `arb` caller to process a trade against any liquidity source that can swap tokens within a single function call. The `spender` is the address that will be approved to spend the input token on `takeOrders`, which is almost always going to be the pool itself. If you are unsure, simply set it to the pool address.\",\"version\":1},\"userdoc\":{\"errors\":{\"BadInitiator(address)\":[{\"notice\":\"Thrown when the initiator is not the order book.\"}],\"BadLender(address)\":[{\"notice\":\"Thrown when the lender is not the trusted `OrderBook`.\"}],\"FlashLoanFailed()\":[{\"notice\":\"Thrown when the flash loan fails somehow.\"}],\"InitializeSignatureFn()\":[{\"notice\":\"Overloaded initialize function MUST revert with this error.\"}],\"Initializing()\":[{\"notice\":\"Thrown when calling functions while the contract is still initializing.\"}],\"InvalidSignature(uint256)\":[{\"notice\":\"Thrown when the ith signature from a list of signed contexts is invalid.\"}],\"MinimumOutput(uint256,uint256)\":[{\"notice\":\"Thrown when the minimum output for the sender is not met after the arb.\"}],\"NoOrders()\":[{\"notice\":\"Thrown when take orders is called with no orders.\"}],\"NonZeroBeforeArbStack()\":[{\"notice\":\"Thrown when the stack is not empty after the access control dispatch.\"}],\"NotRainMetaV1(bytes)\":[{\"notice\":\"Thrown when some bytes are expected to be rain meta and are not.\"}],\"UnexpectedMetaHash(bytes32,bytes32)\":[{\"notice\":\"Thrown when hashed metadata does NOT match the expected hash.\"}]},\"events\":{\"Initialize(address,(address,(address,bytes,uint256[]),bytes))\":{\"notice\":\"Emitted when the contract is initialized. Contains the OrderBookFlashBorrowerConfig struct to ensure the type appears in the ABI.\"},\"MetaV1(address,uint256,bytes)\":{\"notice\":\"An onchain wrapper to carry arbitrary Rain metadata. Assigns the sender to the metadata so that tooling can easily drop/ignore data from unknown sources. As metadata is about something, the subject MUST be provided.\"}},\"kind\":\"user\",\"methods\":{\"arb((uint256,uint256,uint256,((address,bool,(address,address,address),(address,uint8,uint256)[],(address,uint8,uint256)[]),uint256,uint256,(address,uint256[],bytes)[])[],bytes),uint256,bytes)\":{\"notice\":\"Primary function to process arbitrage opportunities. Firstly the access gate is evaluated to ensure the sender is allowed to submit arbitrage. If there is no access control the sender should expect to be front run on the arb for any sufficiently profitable opportunity. This may be desirable in some cases, as the sender may simply want to be clearing the orderbook and they are expecting profit/utility from the orderbook strategies themselves somehow. Secondly the flash loan is taken and the `_exchange` hook is called to allow the inheriting contract to convert the flash loaned assets into the assets required to fill the orders. Finally the orders are taken and the remaining assets are sent to the sender.\"},\"initialize((address,(address,bytes,uint256[]),bytes))\":{\"notice\":\"Type hints for the input encoding for the `initialize` function. Reverts ALWAYS with `InitializeSignatureFn` as per ICloneableV2.\"},\"initialize(bytes)\":{\"notice\":\"Initialize is intended to work like constructors but for cloneable proxies. The `ICloneableV2` contract MUST ensure that initialize can NOT be called more than once. The `ICloneableV2` contract is designed to be deployed by an `ICloneableFactoryV2` but MUST NOT assume that it will be. It is possible for someone to directly deploy an `ICloneableV2` and fail to call initialize before other functions are called, and end users MAY NOT realise or know how to confirm a safe deployment state. The `ICloneableV2` MUST take appropriate measures to ensure that functions called before initialize are safe to do so, or revert. To be fully generic, `initilize` accepts `bytes` and so MUST ABI decode within the initialize function. This allows a single factory to service arbitrary cloneable proxies but also erases the type of the initialization config from the ABI. As tooling will inevitably require the ABI to be known, it is RECOMMENDED that the `ICloneableV2` contract implements a typed `initialize` function that overloads the generic `initialize(bytes)` function. This overloaded function MUST revert with `InitializeSignatureFn` always, so that it is NEVER accidentally called. This avoids complex and expensive delegate call style patterns where a typed overload has to call back to itself and preserve the sender, instead we force the caller to know the correct signature and call the correct function directly with encoded bytes. If initialization is successful the `ICloneableV2` MUST return the keccak256 hash of the string \\\"ICloneableV2.initialize\\\". This avoids false positives where a contract building a proxy, such as an `ICloneableFactoryV2`, may incorrectly believe that the clone has been initialized but the implementation doesn't support `ICloneableV2`.\"},\"sI9r()\":{\"notice\":\"The interpreter that will eval access control to `arb`.\"},\"sI9rDispatch()\":{\"notice\":\"The encoded dispatch that will run for access control to `arb`.\"},\"sI9rStore()\":{\"notice\":\"The associated store for the interpreter.\"},\"sOrderBook()\":{\"notice\":\"`OrderBook` contract to lend and arb against.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/concrete/GenericPoolOrderBookV3FlashBorrower.sol\":\"GenericPoolOrderBookV3FlashBorrower\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@prb/test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/\",\":bytecode/=lib/rain.interpreter/src/lib/bytecode/\",\":caller/=lib/rain.interpreter/src/lib/caller/\",\":compile/=lib/rain.interpreter/src/lib/compile/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eval/=lib/rain.interpreter/src/lib/eval/\",\":extern/=lib/rain.interpreter/src/lib/extern/\",\":forge-std/=lib/forge-std/src/\",\":integrity/=lib/rain.interpreter/src/lib/integrity/\",\":ns/=lib/rain.interpreter/src/lib/ns/\",\":op/=lib/rain.interpreter/src/lib/op/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":parse/=lib/rain.interpreter/src/lib/parse/\",\":prb-math/=lib/rain.interpreter/lib/prb-math/src/\",\":prb-test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/\",\":rain.chainlink/=lib/rain.interpreter/lib/rain.chainlink/src/\",\":rain.datacontract/=lib/rain.datacontract/src/\",\":rain.erc1820/=lib/rain.erc1820/src/\",\":rain.extrospection/=lib/rain.factory/lib/rain.extrospection/\",\":rain.factory/=lib/rain.factory/\",\":rain.interpreter/=lib/rain.interpreter/\",\":rain.lib.hash/=lib/rain.lib.memkv/lib/rain.lib.hash/src/\",\":rain.lib.memkv/=lib/rain.lib.memkv/src/\",\":rain.lib.typecast/=lib/rain.interpreter/lib/rain.lib.typecast/src/\",\":rain.math.fixedpoint/=lib/rain.interpreter/lib/rain.math.fixedpoint/src/\",\":rain.math.saturating/=lib/rain.interpreter/lib/rain.math.fixedpoint/lib/rain.math.saturating/src/\",\":rain.metadata/=lib/rain.metadata/src/\",\":rain.solmem/=lib/rain.datacontract/lib/rain.solmem/src/\",\":sol.lib.binmaskflag/=lib/rain.interpreter/lib/sol.lib.binmaskflag/src/\",\":state/=lib/rain.interpreter/src/lib/state/\",\":uniswap/=lib/rain.interpreter/src/lib/uniswap/\",\":v2-core/=lib/rain.interpreter/lib/v2-core/contracts/\",\":v2-periphery/=lib/v2-periphery/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d\",\"dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/rain.datacontract/lib/rain.solmem/src/lib/LibBytes.sol\":{\"keccak256\":\"0xcdc485d90d6d8a89a842b64c83efd15266c5c80916535736aa8a05497bcf5625\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a45d0edb1d404207ad328d7a4eb16ee52d68db8dbb44796caa521a4765dfe353\",\"dweb:/ipfs/QmVT8vbFLMmD1sg1sEz21mTrDRE58yFNsmKDPnZ3LX8yYk\"]},\"lib/rain.datacontract/lib/rain.solmem/src/lib/LibMemCpy.sol\":{\"keccak256\":\"0x6a2df10cc8f19bf99711c06ddf744080d922104b2f8aab4093ca1df8849a8406\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://58cdb4a850867b5ae325c28cd588a98e9c0b313fb7b70974fcb9ad357f552102\",\"dweb:/ipfs/QmYvf96iHnS81aqt9sEcdvqpq6ghsk2fa8RVNBc6pttQJe\"]},\"lib/rain.datacontract/lib/rain.solmem/src/lib/LibPointer.sol\":{\"keccak256\":\"0xcd833cbf588ec10836cdfbddd426fc14dfa145ed2e63054f6bbd06e296e698f7\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://9ce0af4045e276c5e4c352c1c435f4ecea7552192b1d99e33732c1067bea0ad7\",\"dweb:/ipfs/Qmc5NCFTwgg2AemUz9K1fPei51ivge3eUrWP8k56kF8ADG\"]},\"lib/rain.datacontract/lib/rain.solmem/src/lib/LibUint256Array.sol\":{\"keccak256\":\"0x120ff38e1ce110465281d3d27d63c7c8d7ecbeba65aeacbffa7bec393501cbde\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://0acaffcfb7a060e2cc60940768ac2c8c25c142834336de35984d1c53eba6f7b6\",\"dweb:/ipfs/QmcFAtiTDm43ZQTqAmpJUYuCbbTg6U6ytziB37qWU5h7sL\"]},\"lib/rain.factory/src/interface/ICloneableV2.sol\":{\"keccak256\":\"0xbc1ceff073c177b6a0765abc20e897074b45cf620e6196a1d1c52f935d217a80\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://fd2bbdded11b1d41ee37c03e617b17d12dbdd8a2afebc17a91f463db296cb234\",\"dweb:/ipfs/QmWTtnexF9X6G12nEWPcmcsDVTuaYHmWKwUgJTvcak8pYP\"]},\"lib/rain.interpreter/src/abstract/DeployerDiscoverableMetaV2.sol\":{\"keccak256\":\"0x3a74582510521381a9bd2732847be9170fd58fc5baf257917854f35823cd94db\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://233812d35b959b522281af216123f7cc3c900342273e337cc9ba4418f655a78a\",\"dweb:/ipfs/QmZjZtdUbBzA55VSSKASr3fnmK1CZ36SY8LoyAYsFZ8gwA\"]},\"lib/rain.interpreter/src/interface/IExpressionDeployerV1.sol\":{\"keccak256\":\"0x42d4d91cc62778967ca5f1bb2e7b2c97ca2de2c49518bc8a08a0b50275074ab6\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://6f461a0c0f65a514799200a64bc0e9d926abe4e0bba0c4e2ca0e3d6a04677768\",\"dweb:/ipfs/QmeUggk58ypM3721672wdupquFM8W9VnY3qpn8swKoeLhA\"]},\"lib/rain.interpreter/src/interface/IInterpreterCallerV2.sol\":{\"keccak256\":\"0xdbcd86209f48d96355da6e3f1c7f09530667f62544aa43b7058fe99063a20b6e\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://b3803c98391a7db85b12c2ad9858abcda0022d0c004aabdad5ea736959a8ac0f\",\"dweb:/ipfs/QmbL5b4Rz1H4ZPVQzLET8UrQqXiUBnbwCkdUE6jHqPcapN\"]},\"lib/rain.interpreter/src/interface/IInterpreterStoreV1.sol\":{\"keccak256\":\"0xbd9baa8cd30406576f876a76f1c08396561ba93131741af338f63e2414e20619\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://30bb6f09d8b8f27f77e6c44591c4f2070286a91dad202043cf2351ae802e3df5\",\"dweb:/ipfs/QmRz5pfzf5w84iNmKaYYbqP8oQywzc5xbd3xzKmxgFyf9y\"]},\"lib/rain.interpreter/src/interface/IInterpreterV1.sol\":{\"keccak256\":\"0xebde08ca2e1c25fc733e0bb8867598715f8ba79772f86db1c8960ad7d68a5293\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://b93fb28a09aeea4afe7f0d4afc67354c0fa538e5a9b274b0c5f10ed1dd6b6b00\",\"dweb:/ipfs/QmatNhoHRSJ1ZvoCNo61YMt9jb1vvEkWy3mkcoPkB4FFA9\"]},\"lib/rain.interpreter/src/interface/unstable/IExpressionDeployerV2.sol\":{\"keccak256\":\"0x7bbcf9d3689bdecdc58537e5185f0b88e8d4e91a295f5124f19779609f19f219\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://ccdcba71f76f2a730685f956f1854355751a3c9b4caef9569e2a6d8acc8747a5\",\"dweb:/ipfs/QmQrWgCnxd9aGEHhmFTPkA8E3GVsKuwDhe2UQ5WyfA5LSA\"]},\"lib/rain.interpreter/src/lib/bytecode/LibBytecode.sol\":{\"keccak256\":\"0x2b25061fa0f327fd89856e72a3c274b35cd1ce6a97405f9885cd17008c740461\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://41277875d0ac8adbc5560e967ab2fe6c7a7edc4c4c91d13bffb01044adbe2691\",\"dweb:/ipfs/QmR3Yum5eeZ2i9yyzjpfF2o9m5pemv77KPrM2jSBX7LoRB\"]},\"lib/rain.interpreter/src/lib/caller/LibContext.sol\":{\"keccak256\":\"0x155499b7b1624484d2b03b9aecc7d7133c6c69bd17aa278b756c27e2c48af74a\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a2c9276f73ba44f1978b06847a23eed697b62f72eaa02e5e5711c30ea8097c05\",\"dweb:/ipfs/QmfKhi9K4Sp45t2dXCz5pms7mkoXARWkYgB661uc8DPrbF\"]},\"lib/rain.interpreter/src/lib/caller/LibDeployerDiscoverable.sol\":{\"keccak256\":\"0x80a4169a009519f7e94ce4416c9f4eb94b0cbf96f8e4c3f4f5ec8d65e59ad085\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://bc915a321a3913fdee0a8eadcc263c6a8d2425c3517da5107d3a4177789199eb\",\"dweb:/ipfs/QmYJAQepVmeHDTZRCAAcEY7J7ANikvH3pnS6eETf5gnVrG\"]},\"lib/rain.interpreter/src/lib/caller/LibEncodedDispatch.sol\":{\"keccak256\":\"0xc3cb89672e0d11a343ba593f3ecbc0a5441d5a0ee7af7cdb4dbe82f32f951034\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://692ff90cbc8804f320ff58ade514348049556bdbc10d485ae2cdc86033ac942f\",\"dweb:/ipfs/QmSina3eADDD1HtVw4tqtbhx8YnczFZUZ5Lwm9Lhscuvr3\"]},\"lib/rain.interpreter/src/lib/caller/LibEvaluable.sol\":{\"keccak256\":\"0x9bd77a3efb7e0762ca214efe30c3c49c3f3efae3b6c759db2c7a0aa52ff3d364\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://6125b3bd94d9966557c068dda143c930d37662da06cd84a4369a673f4ce8b07c\",\"dweb:/ipfs/QmepFEJseAU31gPAa7Hq2H3ZDfRJ3DnK94CBpe73H3v7yP\"]},\"lib/rain.lib.memkv/lib/rain.lib.hash/src/LibHashNoAlloc.sol\":{\"keccak256\":\"0x52c8b6906d61bcc7e70d594cb097f53e361569904e27019ebeed0b4c94d2aed8\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://62999b0afefbe97e1d41c2c57b67a186e5a1618758f8f9cf17776c1d67f27d24\",\"dweb:/ipfs/QmfVsV2CVp91F9dHNWziKvSo54Wgb84k5Ct7Rtxxyptw35\"]},\"lib/rain.metadata/src/IMetaV1.sol\":{\"keccak256\":\"0xd1959040fcc89be7a4dc8c9c193e4e5a78b84b05848b86c54d39c3d717ad1843\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://7d3cba2279a6b8912f783430eef89c4a6482a489632ead7e2a3594d2162fa2b3\",\"dweb:/ipfs/QmfJFn72vcnq4LXpeBs9PWuDRzJSr58uVeDVjWpxjMHFWs\"]},\"lib/rain.metadata/src/LibMeta.sol\":{\"keccak256\":\"0x04665ba6364cc67050b2a245daa780c39039dd51653f7b2029910f242f5dd285\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://4341f3462120c37c832c03c6c9a0d52a100708fad713ced970f09747badd9d6d\",\"dweb:/ipfs/QmUGovuLTuTmCSTvYWc6SehzyoYAzVsAnPBNmE3hmRDAQU\"]},\"src/abstract/OrderBookV3ArbCommon.sol\":{\"keccak256\":\"0xc77c321417500facb7f1a66baaf337f845674f805d56518d00bcbf78de929b4a\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://7244eaac97f18d1676afcb8fc35aeb37b0be8547e4e84a2ccf202089b760f830\",\"dweb:/ipfs/QmWhNnSPAMPL5g7Ey4ZbctVWGuznJVEU4Vj1pXdr4Cb4SB\"]},\"src/abstract/OrderBookV3FlashBorrower.sol\":{\"keccak256\":\"0xfb731fd88bff33bb2b2533d4d7ac3fffa420a5a69a2947e6de579a22a06a2dd0\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://045612593ab4a88d47b7c9314d8aa7067b2a98d3d56d2479e86716a2189a955b\",\"dweb:/ipfs/QmVG4p2dFXNhwcqF3VSpug4CAiu8MzWzn9WWqQnHGLQuAA\"]},\"src/concrete/GenericPoolOrderBookV3FlashBorrower.sol\":{\"keccak256\":\"0xdff3d4e95ccb841a9baac88e79f6bb5ab1beb99cb1748c29519996acd419a0e6\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://4c2ddb871122f38059962fd7888652d96ec2cb61efefe902d65216ef620c7aa2\",\"dweb:/ipfs/QmRsmjMpUmcSiD8LJmPp3VvD3AXaMRSrfUrWoZ8s61SfYb\"]},\"src/interface/ierc3156/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x493227b1bc21c04ba2506d8d63f8fab8eb828683cf41336db1076edee2e010a7\",\"license\":\"CC0\",\"urls\":[\"bzz-raw://99b27f1f11576c22462c93ab613835522dfc89a7e28e584df034b339187bc15c\",\"dweb:/ipfs/QmQZ1H8PotScE5rSbruZn97MC6pgDNTuCQcjtg8ZWU4SPB\"]},\"src/interface/ierc3156/IERC3156FlashLender.sol\":{\"keccak256\":\"0x191637dc4503bf6cc0c6c0539bf83a758b124e37abc5da05ae4d446133cf36b5\",\"license\":\"CC0\",\"urls\":[\"bzz-raw://de7dea1fd8bd0dcdae7bdb400d4ccc9e01ecb73e23ef2b2f77704a9741669273\",\"dweb:/ipfs/QmT8BAK76nEJ5kTKkDxDovD4xuAXPACAyxshUA4RX3WLe3\"]},\"src/interface/unstable/IOrderBookV3.sol\":{\"keccak256\":\"0xb5a629cd5fb8c118a93fafed2d6376d6418fdf7fd2ef44d70cbc6c314d080aab\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://c00280364761365fabb3ffd5eacdc9d9850ade84dbb6ac7ba08ec0ef72971cf6\",\"dweb:/ipfs/QmdPkPE5fn37krz2K4xaPJoEfbhPsbqY7DgPpUn8RdaYY4\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct DeployerDiscoverableMetaV2ConstructionConfig",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "meta",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "badInitiator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "BadInitiator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "badLender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "BadLender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FlashLoanFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InitializeSignatureFn"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Initializing"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "i",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidSignature"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "minimum",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "actual",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "MinimumOutput"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoOrders"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonZeroBeforeArbStack"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "unmeta",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "NotRainMetaV1"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expectedHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actualHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "UnexpectedMetaHash"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct OrderBookV3FlashBorrowerConfigV2",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "orderBook",
                  "type": "address"
                },
                {
                  "internalType": "struct EvaluableConfigV2",
                  "name": "evaluableConfig",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IExpressionDeployerV2",
                      "name": "deployer",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "bytecode",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "constants",
                      "type": "uint256[]"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "implementationData",
                  "type": "bytes"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialize",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "subject",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "meta",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetaV1",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "fallback"
        },
        {
          "inputs": [
            {
              "internalType": "struct TakeOrdersConfigV2",
              "name": "takeOrders",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "minimumInput",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maximumInput",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maximumIORatio",
                  "type": "uint256"
                },
                {
                  "internalType": "struct TakeOrderConfig[]",
                  "name": "orders",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct Order",
                      "name": "order",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "owner",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "handleIO",
                          "type": "bool"
                        },
                        {
                          "internalType": "struct Evaluable",
                          "name": "evaluable",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "contract IInterpreterV1",
                              "name": "interpreter",
                              "type": "address"
                            },
                            {
                              "internalType": "contract IInterpreterStoreV1",
                              "name": "store",
                              "type": "address"
                            },
                            {
                              "internalType": "address",
                              "name": "expression",
                              "type": "address"
                            }
                          ]
                        },
                        {
                          "internalType": "struct IO[]",
                          "name": "validInputs",
                          "type": "tuple[]",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint8",
                              "name": "decimals",
                              "type": "uint8"
                            },
                            {
                              "internalType": "uint256",
                              "name": "vaultId",
                              "type": "uint256"
                            }
                          ]
                        },
                        {
                          "internalType": "struct IO[]",
                          "name": "validOutputs",
                          "type": "tuple[]",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint8",
                              "name": "decimals",
                              "type": "uint8"
                            },
                            {
                              "internalType": "uint256",
                              "name": "vaultId",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "inputIOIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "outputIOIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SignedContextV1[]",
                      "name": "signedContext",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "signer",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256[]",
                          "name": "context",
                          "type": "uint256[]"
                        },
                        {
                          "internalType": "bytes",
                          "name": "signature",
                          "type": "bytes"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "minimumSenderOutput",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "exchangeData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "arb"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OrderBookV3FlashBorrowerConfigV2",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "orderBook",
                  "type": "address"
                },
                {
                  "internalType": "struct EvaluableConfigV2",
                  "name": "evaluableConfig",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IExpressionDeployerV2",
                      "name": "deployer",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "bytecode",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "constants",
                      "type": "uint256[]"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "implementationData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "initialize",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initiator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onFlashLoan",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sI9r",
          "outputs": [
            {
              "internalType": "contract IInterpreterV1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sI9rDispatch",
          "outputs": [
            {
              "internalType": "EncodedDispatch",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sI9rStore",
          "outputs": [
            {
              "internalType": "contract IInterpreterStoreV1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sOrderBook",
          "outputs": [
            {
              "internalType": "contract IOrderBookV3",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "arb((uint256,uint256,uint256,((address,bool,(address,address,address),(address,uint8,uint256)[],(address,uint8,uint256)[]),uint256,uint256,(address,uint256[],bytes)[])[],bytes),uint256,bytes)": {
            "params": {
              "exchangeData": "Arbitrary bytes that will be passed to `_exchange` after the flash loan is taken. The inheriting contract is responsible for decoding this data and defining how it controls interactions with the external liquidity. For example, `GenericPoolOrderBookFlashBorrower` uses this data as a literal encoded external call.",
              "minimumSenderOutput": "The minimum output that must be sent to the sender by the end of the arb call. This, in combination with the orderbook's own asset handling, is expected to REPLACE the standard slippage protection that would be provided by a DEX. The sender is expected to calculate absolute values based on prevailing conditions such as gas price and the risk of holding the assets any arb profit is denominated in.",
              "takeOrders": "As per `IOrderBookV3.takeOrders`."
            }
          },
          "initialize(bytes)": {
            "details": "The `ICloneableV2` interface is identical to `ICloneableV1` except that it returns a `bytes32` success hash.",
            "params": {
              "data": "The initialization data."
            },
            "returns": {
              "_0": "keccak256(\"ICloneableV2.initialize\") if successful."
            }
          },
          "onFlashLoan(address,address,uint256,uint256,bytes)": {
            "details": "Receive a flash loan.",
            "params": {
              "amount": "The amount of tokens lent.",
              "data": "Arbitrary data structure, intended to contain user-defined parameters.",
              "fee": "The additional amount of tokens to repay.",
              "initiator": "The initiator of the loan.",
              "token": "The loan currency."
            },
            "returns": {
              "_0": "The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\""
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "arb((uint256,uint256,uint256,((address,bool,(address,address,address),(address,uint8,uint256)[],(address,uint8,uint256)[]),uint256,uint256,(address,uint256[],bytes)[])[],bytes),uint256,bytes)": {
            "notice": "Primary function to process arbitrage opportunities. Firstly the access gate is evaluated to ensure the sender is allowed to submit arbitrage. If there is no access control the sender should expect to be front run on the arb for any sufficiently profitable opportunity. This may be desirable in some cases, as the sender may simply want to be clearing the orderbook and they are expecting profit/utility from the orderbook strategies themselves somehow. Secondly the flash loan is taken and the `_exchange` hook is called to allow the inheriting contract to convert the flash loaned assets into the assets required to fill the orders. Finally the orders are taken and the remaining assets are sent to the sender."
          },
          "initialize((address,(address,bytes,uint256[]),bytes))": {
            "notice": "Type hints for the input encoding for the `initialize` function. Reverts ALWAYS with `InitializeSignatureFn` as per ICloneableV2."
          },
          "initialize(bytes)": {
            "notice": "Initialize is intended to work like constructors but for cloneable proxies. The `ICloneableV2` contract MUST ensure that initialize can NOT be called more than once. The `ICloneableV2` contract is designed to be deployed by an `ICloneableFactoryV2` but MUST NOT assume that it will be. It is possible for someone to directly deploy an `ICloneableV2` and fail to call initialize before other functions are called, and end users MAY NOT realise or know how to confirm a safe deployment state. The `ICloneableV2` MUST take appropriate measures to ensure that functions called before initialize are safe to do so, or revert. To be fully generic, `initilize` accepts `bytes` and so MUST ABI decode within the initialize function. This allows a single factory to service arbitrary cloneable proxies but also erases the type of the initialization config from the ABI. As tooling will inevitably require the ABI to be known, it is RECOMMENDED that the `ICloneableV2` contract implements a typed `initialize` function that overloads the generic `initialize(bytes)` function. This overloaded function MUST revert with `InitializeSignatureFn` always, so that it is NEVER accidentally called. This avoids complex and expensive delegate call style patterns where a typed overload has to call back to itself and preserve the sender, instead we force the caller to know the correct signature and call the correct function directly with encoded bytes. If initialization is successful the `ICloneableV2` MUST return the keccak256 hash of the string \"ICloneableV2.initialize\". This avoids false positives where a contract building a proxy, such as an `ICloneableFactoryV2`, may incorrectly believe that the clone has been initialized but the implementation doesn't support `ICloneableV2`."
          },
          "sI9r()": {
            "notice": "The interpreter that will eval access control to `arb`."
          },
          "sI9rDispatch()": {
            "notice": "The encoded dispatch that will run for access control to `arb`."
          },
          "sI9rStore()": {
            "notice": "The associated store for the interpreter."
          },
          "sOrderBook()": {
            "notice": "`OrderBook` contract to lend and arb against."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@prb/test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/",
        "bytecode/=lib/rain.interpreter/src/lib/bytecode/",
        "caller/=lib/rain.interpreter/src/lib/caller/",
        "compile/=lib/rain.interpreter/src/lib/compile/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "eval/=lib/rain.interpreter/src/lib/eval/",
        "extern/=lib/rain.interpreter/src/lib/extern/",
        "forge-std/=lib/forge-std/src/",
        "integrity/=lib/rain.interpreter/src/lib/integrity/",
        "ns/=lib/rain.interpreter/src/lib/ns/",
        "op/=lib/rain.interpreter/src/lib/op/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "parse/=lib/rain.interpreter/src/lib/parse/",
        "prb-math/=lib/rain.interpreter/lib/prb-math/src/",
        "prb-test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/",
        "rain.chainlink/=lib/rain.interpreter/lib/rain.chainlink/src/",
        "rain.datacontract/=lib/rain.datacontract/src/",
        "rain.erc1820/=lib/rain.erc1820/src/",
        "rain.extrospection/=lib/rain.factory/lib/rain.extrospection/",
        "rain.factory/=lib/rain.factory/",
        "rain.interpreter/=lib/rain.interpreter/",
        "rain.lib.hash/=lib/rain.lib.memkv/lib/rain.lib.hash/src/",
        "rain.lib.memkv/=lib/rain.lib.memkv/src/",
        "rain.lib.typecast/=lib/rain.interpreter/lib/rain.lib.typecast/src/",
        "rain.math.fixedpoint/=lib/rain.interpreter/lib/rain.math.fixedpoint/src/",
        "rain.math.saturating/=lib/rain.interpreter/lib/rain.math.fixedpoint/lib/rain.math.saturating/src/",
        "rain.metadata/=lib/rain.metadata/src/",
        "rain.solmem/=lib/rain.datacontract/lib/rain.solmem/src/",
        "sol.lib.binmaskflag/=lib/rain.interpreter/lib/sol.lib.binmaskflag/src/",
        "state/=lib/rain.interpreter/src/lib/state/",
        "uniswap/=lib/rain.interpreter/src/lib/uniswap/",
        "v2-core/=lib/rain.interpreter/lib/v2-core/contracts/",
        "v2-periphery/=lib/v2-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "src/concrete/GenericPoolOrderBookV3FlashBorrower.sol": "GenericPoolOrderBookV3FlashBorrower"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6",
        "urls": [
          "bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed",
          "dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa",
        "urls": [
          "bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4",
          "dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol": {
        "keccak256": "0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80",
        "urls": [
          "bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d",
          "dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/rain.datacontract/lib/rain.solmem/src/lib/LibBytes.sol": {
        "keccak256": "0xcdc485d90d6d8a89a842b64c83efd15266c5c80916535736aa8a05497bcf5625",
        "urls": [
          "bzz-raw://a45d0edb1d404207ad328d7a4eb16ee52d68db8dbb44796caa521a4765dfe353",
          "dweb:/ipfs/QmVT8vbFLMmD1sg1sEz21mTrDRE58yFNsmKDPnZ3LX8yYk"
        ],
        "license": "CAL"
      },
      "lib/rain.datacontract/lib/rain.solmem/src/lib/LibMemCpy.sol": {
        "keccak256": "0x6a2df10cc8f19bf99711c06ddf744080d922104b2f8aab4093ca1df8849a8406",
        "urls": [
          "bzz-raw://58cdb4a850867b5ae325c28cd588a98e9c0b313fb7b70974fcb9ad357f552102",
          "dweb:/ipfs/QmYvf96iHnS81aqt9sEcdvqpq6ghsk2fa8RVNBc6pttQJe"
        ],
        "license": "CAL"
      },
      "lib/rain.datacontract/lib/rain.solmem/src/lib/LibPointer.sol": {
        "keccak256": "0xcd833cbf588ec10836cdfbddd426fc14dfa145ed2e63054f6bbd06e296e698f7",
        "urls": [
          "bzz-raw://9ce0af4045e276c5e4c352c1c435f4ecea7552192b1d99e33732c1067bea0ad7",
          "dweb:/ipfs/Qmc5NCFTwgg2AemUz9K1fPei51ivge3eUrWP8k56kF8ADG"
        ],
        "license": "CAL"
      },
      "lib/rain.datacontract/lib/rain.solmem/src/lib/LibUint256Array.sol": {
        "keccak256": "0x120ff38e1ce110465281d3d27d63c7c8d7ecbeba65aeacbffa7bec393501cbde",
        "urls": [
          "bzz-raw://0acaffcfb7a060e2cc60940768ac2c8c25c142834336de35984d1c53eba6f7b6",
          "dweb:/ipfs/QmcFAtiTDm43ZQTqAmpJUYuCbbTg6U6ytziB37qWU5h7sL"
        ],
        "license": "CAL"
      },
      "lib/rain.factory/src/interface/ICloneableV2.sol": {
        "keccak256": "0xbc1ceff073c177b6a0765abc20e897074b45cf620e6196a1d1c52f935d217a80",
        "urls": [
          "bzz-raw://fd2bbdded11b1d41ee37c03e617b17d12dbdd8a2afebc17a91f463db296cb234",
          "dweb:/ipfs/QmWTtnexF9X6G12nEWPcmcsDVTuaYHmWKwUgJTvcak8pYP"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/abstract/DeployerDiscoverableMetaV2.sol": {
        "keccak256": "0x3a74582510521381a9bd2732847be9170fd58fc5baf257917854f35823cd94db",
        "urls": [
          "bzz-raw://233812d35b959b522281af216123f7cc3c900342273e337cc9ba4418f655a78a",
          "dweb:/ipfs/QmZjZtdUbBzA55VSSKASr3fnmK1CZ36SY8LoyAYsFZ8gwA"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IExpressionDeployerV1.sol": {
        "keccak256": "0x42d4d91cc62778967ca5f1bb2e7b2c97ca2de2c49518bc8a08a0b50275074ab6",
        "urls": [
          "bzz-raw://6f461a0c0f65a514799200a64bc0e9d926abe4e0bba0c4e2ca0e3d6a04677768",
          "dweb:/ipfs/QmeUggk58ypM3721672wdupquFM8W9VnY3qpn8swKoeLhA"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IInterpreterCallerV2.sol": {
        "keccak256": "0xdbcd86209f48d96355da6e3f1c7f09530667f62544aa43b7058fe99063a20b6e",
        "urls": [
          "bzz-raw://b3803c98391a7db85b12c2ad9858abcda0022d0c004aabdad5ea736959a8ac0f",
          "dweb:/ipfs/QmbL5b4Rz1H4ZPVQzLET8UrQqXiUBnbwCkdUE6jHqPcapN"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IInterpreterStoreV1.sol": {
        "keccak256": "0xbd9baa8cd30406576f876a76f1c08396561ba93131741af338f63e2414e20619",
        "urls": [
          "bzz-raw://30bb6f09d8b8f27f77e6c44591c4f2070286a91dad202043cf2351ae802e3df5",
          "dweb:/ipfs/QmRz5pfzf5w84iNmKaYYbqP8oQywzc5xbd3xzKmxgFyf9y"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IInterpreterV1.sol": {
        "keccak256": "0xebde08ca2e1c25fc733e0bb8867598715f8ba79772f86db1c8960ad7d68a5293",
        "urls": [
          "bzz-raw://b93fb28a09aeea4afe7f0d4afc67354c0fa538e5a9b274b0c5f10ed1dd6b6b00",
          "dweb:/ipfs/QmatNhoHRSJ1ZvoCNo61YMt9jb1vvEkWy3mkcoPkB4FFA9"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/unstable/IExpressionDeployerV2.sol": {
        "keccak256": "0x7bbcf9d3689bdecdc58537e5185f0b88e8d4e91a295f5124f19779609f19f219",
        "urls": [
          "bzz-raw://ccdcba71f76f2a730685f956f1854355751a3c9b4caef9569e2a6d8acc8747a5",
          "dweb:/ipfs/QmQrWgCnxd9aGEHhmFTPkA8E3GVsKuwDhe2UQ5WyfA5LSA"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/bytecode/LibBytecode.sol": {
        "keccak256": "0x2b25061fa0f327fd89856e72a3c274b35cd1ce6a97405f9885cd17008c740461",
        "urls": [
          "bzz-raw://41277875d0ac8adbc5560e967ab2fe6c7a7edc4c4c91d13bffb01044adbe2691",
          "dweb:/ipfs/QmR3Yum5eeZ2i9yyzjpfF2o9m5pemv77KPrM2jSBX7LoRB"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibContext.sol": {
        "keccak256": "0x155499b7b1624484d2b03b9aecc7d7133c6c69bd17aa278b756c27e2c48af74a",
        "urls": [
          "bzz-raw://a2c9276f73ba44f1978b06847a23eed697b62f72eaa02e5e5711c30ea8097c05",
          "dweb:/ipfs/QmfKhi9K4Sp45t2dXCz5pms7mkoXARWkYgB661uc8DPrbF"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibDeployerDiscoverable.sol": {
        "keccak256": "0x80a4169a009519f7e94ce4416c9f4eb94b0cbf96f8e4c3f4f5ec8d65e59ad085",
        "urls": [
          "bzz-raw://bc915a321a3913fdee0a8eadcc263c6a8d2425c3517da5107d3a4177789199eb",
          "dweb:/ipfs/QmYJAQepVmeHDTZRCAAcEY7J7ANikvH3pnS6eETf5gnVrG"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibEncodedDispatch.sol": {
        "keccak256": "0xc3cb89672e0d11a343ba593f3ecbc0a5441d5a0ee7af7cdb4dbe82f32f951034",
        "urls": [
          "bzz-raw://692ff90cbc8804f320ff58ade514348049556bdbc10d485ae2cdc86033ac942f",
          "dweb:/ipfs/QmSina3eADDD1HtVw4tqtbhx8YnczFZUZ5Lwm9Lhscuvr3"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibEvaluable.sol": {
        "keccak256": "0x9bd77a3efb7e0762ca214efe30c3c49c3f3efae3b6c759db2c7a0aa52ff3d364",
        "urls": [
          "bzz-raw://6125b3bd94d9966557c068dda143c930d37662da06cd84a4369a673f4ce8b07c",
          "dweb:/ipfs/QmepFEJseAU31gPAa7Hq2H3ZDfRJ3DnK94CBpe73H3v7yP"
        ],
        "license": "CAL"
      },
      "lib/rain.lib.memkv/lib/rain.lib.hash/src/LibHashNoAlloc.sol": {
        "keccak256": "0x52c8b6906d61bcc7e70d594cb097f53e361569904e27019ebeed0b4c94d2aed8",
        "urls": [
          "bzz-raw://62999b0afefbe97e1d41c2c57b67a186e5a1618758f8f9cf17776c1d67f27d24",
          "dweb:/ipfs/QmfVsV2CVp91F9dHNWziKvSo54Wgb84k5Ct7Rtxxyptw35"
        ],
        "license": "CAL"
      },
      "lib/rain.metadata/src/IMetaV1.sol": {
        "keccak256": "0xd1959040fcc89be7a4dc8c9c193e4e5a78b84b05848b86c54d39c3d717ad1843",
        "urls": [
          "bzz-raw://7d3cba2279a6b8912f783430eef89c4a6482a489632ead7e2a3594d2162fa2b3",
          "dweb:/ipfs/QmfJFn72vcnq4LXpeBs9PWuDRzJSr58uVeDVjWpxjMHFWs"
        ],
        "license": "CAL"
      },
      "lib/rain.metadata/src/LibMeta.sol": {
        "keccak256": "0x04665ba6364cc67050b2a245daa780c39039dd51653f7b2029910f242f5dd285",
        "urls": [
          "bzz-raw://4341f3462120c37c832c03c6c9a0d52a100708fad713ced970f09747badd9d6d",
          "dweb:/ipfs/QmUGovuLTuTmCSTvYWc6SehzyoYAzVsAnPBNmE3hmRDAQU"
        ],
        "license": "CAL"
      },
      "src/abstract/OrderBookV3ArbCommon.sol": {
        "keccak256": "0xc77c321417500facb7f1a66baaf337f845674f805d56518d00bcbf78de929b4a",
        "urls": [
          "bzz-raw://7244eaac97f18d1676afcb8fc35aeb37b0be8547e4e84a2ccf202089b760f830",
          "dweb:/ipfs/QmWhNnSPAMPL5g7Ey4ZbctVWGuznJVEU4Vj1pXdr4Cb4SB"
        ],
        "license": "CAL"
      },
      "src/abstract/OrderBookV3FlashBorrower.sol": {
        "keccak256": "0xfb731fd88bff33bb2b2533d4d7ac3fffa420a5a69a2947e6de579a22a06a2dd0",
        "urls": [
          "bzz-raw://045612593ab4a88d47b7c9314d8aa7067b2a98d3d56d2479e86716a2189a955b",
          "dweb:/ipfs/QmVG4p2dFXNhwcqF3VSpug4CAiu8MzWzn9WWqQnHGLQuAA"
        ],
        "license": "CAL"
      },
      "src/concrete/GenericPoolOrderBookV3FlashBorrower.sol": {
        "keccak256": "0xdff3d4e95ccb841a9baac88e79f6bb5ab1beb99cb1748c29519996acd419a0e6",
        "urls": [
          "bzz-raw://4c2ddb871122f38059962fd7888652d96ec2cb61efefe902d65216ef620c7aa2",
          "dweb:/ipfs/QmRsmjMpUmcSiD8LJmPp3VvD3AXaMRSrfUrWoZ8s61SfYb"
        ],
        "license": "CAL"
      },
      "src/interface/ierc3156/IERC3156FlashBorrower.sol": {
        "keccak256": "0x493227b1bc21c04ba2506d8d63f8fab8eb828683cf41336db1076edee2e010a7",
        "urls": [
          "bzz-raw://99b27f1f11576c22462c93ab613835522dfc89a7e28e584df034b339187bc15c",
          "dweb:/ipfs/QmQZ1H8PotScE5rSbruZn97MC6pgDNTuCQcjtg8ZWU4SPB"
        ],
        "license": "CC0"
      },
      "src/interface/ierc3156/IERC3156FlashLender.sol": {
        "keccak256": "0x191637dc4503bf6cc0c6c0539bf83a758b124e37abc5da05ae4d446133cf36b5",
        "urls": [
          "bzz-raw://de7dea1fd8bd0dcdae7bdb400d4ccc9e01ecb73e23ef2b2f77704a9741669273",
          "dweb:/ipfs/QmT8BAK76nEJ5kTKkDxDovD4xuAXPACAyxshUA4RX3WLe3"
        ],
        "license": "CC0"
      },
      "src/interface/unstable/IOrderBookV3.sol": {
        "keccak256": "0xb5a629cd5fb8c118a93fafed2d6376d6418fdf7fd2ef44d70cbc6c314d080aab",
        "urls": [
          "bzz-raw://c00280364761365fabb3ffd5eacdc9d9850ade84dbb6ac7ba08ec0ef72971cf6",
          "dweb:/ipfs/QmdPkPE5fn37krz2K4xaPJoEfbhPsbqY7DgPpUn8RdaYY4"
        ],
        "license": "CAL"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/concrete/GenericPoolOrderBookV3FlashBorrower.sol",
    "id": 73649,
    "exportedSymbols": {
      "Address": [
        44651
      ],
      "BEFORE_ARB_MAX_OUTPUTS": [
        72455
      ],
      "BEFORE_ARB_MIN_OUTPUTS": [
        72451
      ],
      "BEFORE_ARB_SOURCE_INDEX": [
        72447
      ],
      "BadInitiator": [
        72425
      ],
      "BadLender": [
        71850
      ],
      "CALLER_META_HASH": [
        73531
      ],
      "ClearConfig": [
        76595
      ],
      "ClearStateChange": [
        76604
      ],
      "DEFAULT_STATE_NAMESPACE": [
        56619
      ],
      "DeployerDiscoverableMetaV2": [
        55564
      ],
      "DeployerDiscoverableMetaV2ConstructionConfig": [
        55519
      ],
      "ECDSA": [
        45323
      ],
      "ERC165": [
        45446
      ],
      "EncodedDispatch": [
        56607
      ],
      "Evaluable": [
        57613
      ],
      "EvaluableConfig": [
        57595
      ],
      "EvaluableConfigV2": [
        57604
      ],
      "FlashLoanFailed": [
        72428
      ],
      "FullyQualifiedNamespace": [
        56568
      ],
      "GenericPoolOrderBookV3FlashBorrower": [
        73648
      ],
      "HASH_NIL": [
        71058
      ],
      "ICLONEABLE_V2_SUCCESS": [
        47299
      ],
      "ICloneableV2": [
        47312
      ],
      "IERC165": [
        45458
      ],
      "IERC1820_NAME_IEXPRESSION_DEPLOYER_V1": [
        56497
      ],
      "IERC1820_NAME_IEXPRESSION_DEPLOYER_V2": [
        56736
      ],
      "IERC20": [
        43884
      ],
      "IERC3156FlashBorrower": [
        76475
      ],
      "IERC3156FlashLender": [
        76512
      ],
      "IExpressionDeployerV1": [
        56533
      ],
      "IExpressionDeployerV2": [
        56771
      ],
      "IInterpreterCallerV2": [
        56563
      ],
      "IInterpreterStoreV1": [
        56600
      ],
      "IInterpreterV1": [
        56650
      ],
      "IO": [
        76527
      ],
      "IOrderBookV3": [
        76846
      ],
      "Initializable": [
        43154
      ],
      "Initializing": [
        71842
      ],
      "InvalidSignature": [
        57109
      ],
      "LibBytecode": [
        57095
      ],
      "LibBytes": [
        46507
      ],
      "LibContext": [
        57394
      ],
      "LibEncodedDispatch": [
        57579
      ],
      "LibEvaluable": [
        57626
      ],
      "LibHashNoAlloc": [
        71100
      ],
      "LibMemCpy": [
        46539
      ],
      "LibMeta": [
        71304
      ],
      "LibPointer": [
        46674
      ],
      "LibUint256Array": [
        47065
      ],
      "MinimumOutput": [
        71839
      ],
      "NO_STORE": [
        56577
      ],
      "NoOrders": [
        76520
      ],
      "NonZeroBeforeArbStack": [
        71845
      ],
      "ON_FLASH_LOAN_CALLBACK_SUCCESS": [
        76458
      ],
      "Operand": [
        56611
      ],
      "Order": [
        76557
      ],
      "OrderBookV3FlashBorrower": [
        73032
      ],
      "OrderBookV3FlashBorrowerConfigV2": [
        72439
      ],
      "OrderConfigV2": [
        76541
      ],
      "OutOfBoundsTruncate": [
        46847
      ],
      "Pointer": [
        46554
      ],
      "ReentrancyGuard": [
        43219
      ],
      "SIGNED_CONTEXT_CONTEXT_OFFSET": [
        56549
      ],
      "SIGNED_CONTEXT_SIGNATURE_OFFSET": [
        56552
      ],
      "SIGNED_CONTEXT_SIGNER_OFFSET": [
        56546
      ],
      "SafeERC20": [
        44321
      ],
      "SignatureChecker": [
        45422
      ],
      "SignedContextV1": [
        56543
      ],
      "SourceIndex": [
        56605
      ],
      "SourceOffsetOutOfBounds": [
        56826
      ],
      "StateNamespace": [
        56609
      ],
      "SwapFailed": [
        72431
      ],
      "TakeOrderConfig": [
        76582
      ],
      "TakeOrdersConfigV2": [
        76570
      ],
      "TruncateError": [
        46439
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2339:160",
    "nodes": [
      {
        "id": 73521,
        "nodeType": "PragmaDirective",
        "src": "32:24:160",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 73522,
        "nodeType": "ImportDirective",
        "src": "58:56:160",
        "nodes": [],
        "absolutePath": "src/interface/ierc3156/IERC3156FlashLender.sol",
        "file": "src/interface/ierc3156/IERC3156FlashLender.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 73649,
        "sourceUnit": 76513,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 73523,
        "nodeType": "ImportDirective",
        "src": "115:58:160",
        "nodes": [],
        "absolutePath": "src/interface/ierc3156/IERC3156FlashBorrower.sol",
        "file": "src/interface/ierc3156/IERC3156FlashBorrower.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 73649,
        "sourceUnit": 76476,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 73524,
        "nodeType": "ImportDirective",
        "src": "175:51:160",
        "nodes": [],
        "absolutePath": "src/abstract/OrderBookV3FlashBorrower.sol",
        "file": "src/abstract/OrderBookV3FlashBorrower.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 73649,
        "sourceUnit": 73033,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 73531,
        "nodeType": "VariableDeclaration",
        "src": "408:111:160",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "CALLER_META_HASH",
        "nameLocation": "425:16:160",
        "scope": 73649,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_bytes32",
          "typeString": "bytes32"
        },
        "typeName": {
          "id": 73526,
          "name": "bytes32",
          "nodeType": "ElementaryTypeName",
          "src": "408:7:160",
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "value": {
          "arguments": [
            {
              "hexValue": "307833643639303934383138323066633639323930366230343737653866393832343865383439373362633862386435616339333531333238353764346634313235",
              "id": 73529,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "452:66:160",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_27776666764755325840291907462788228669295272623583244789707041676659769950501_by_1",
                "typeString": "int_const 2777...(69 digits omitted)...0501"
              },
              "value": "0x3d6909481820fc692906b0477e8f98248e84973bc8b8d5ac935132857d4f4125"
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_rational_27776666764755325840291907462788228669295272623583244789707041676659769950501_by_1",
                "typeString": "int_const 2777...(69 digits omitted)...0501"
              }
            ],
            "id": 73528,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "nodeType": "ElementaryTypeNameExpression",
            "src": "444:7:160",
            "typeDescriptions": {
              "typeIdentifier": "t_type$_t_bytes32_$",
              "typeString": "type(bytes32)"
            },
            "typeName": {
              "id": 73527,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "444:7:160",
              "typeDescriptions": {}
            }
          },
          "id": 73530,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "typeConversion",
          "lValueRequested": false,
          "nameLocations": [],
          "names": [],
          "nodeType": "FunctionCall",
          "src": "444:75:160",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 73648,
        "nodeType": "ContractDefinition",
        "src": "1200:1170:160",
        "nodes": [
          {
            "id": 73538,
            "nodeType": "UsingForDirective",
            "src": "1279:27:160",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 73535,
              "name": "SafeERC20",
              "nameLocations": [
                "1285:9:160"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44321,
              "src": "1285:9:160"
            },
            "typeName": {
              "id": 73537,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 73536,
                "name": "IERC20",
                "nameLocations": [
                  "1299:6:160"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 43884,
                "src": "1299:6:160"
              },
              "referencedDeclaration": 43884,
              "src": "1299:6:160",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$43884",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 73541,
            "nodeType": "UsingForDirective",
            "src": "1311:26:160",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 73539,
              "name": "Address",
              "nameLocations": [
                "1317:7:160"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44651,
              "src": "1317:7:160"
            },
            "typeName": {
              "id": 73540,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1329:7:160",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 73552,
            "nodeType": "FunctionDefinition",
            "src": "1343:137:160",
            "nodes": [],
            "body": {
              "id": 73551,
              "nodeType": "Block",
              "src": "1478:2:160",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 73547,
                    "name": "CALLER_META_HASH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 73531,
                    "src": "1448:16:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 73548,
                    "name": "config",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 73544,
                    "src": "1466:6:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DeployerDiscoverableMetaV2ConstructionConfig_$55519_memory_ptr",
                      "typeString": "struct DeployerDiscoverableMetaV2ConstructionConfig memory"
                    }
                  }
                ],
                "id": 73549,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 73546,
                  "name": "OrderBookV3FlashBorrower",
                  "nameLocations": [
                    "1423:24:160"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73032,
                  "src": "1423:24:160"
                },
                "nodeType": "ModifierInvocation",
                "src": "1423:50:160"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 73545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73544,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "1407:6:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 73552,
                  "src": "1355:58:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DeployerDiscoverableMetaV2ConstructionConfig_$55519_memory_ptr",
                    "typeString": "struct DeployerDiscoverableMetaV2ConstructionConfig"
                  },
                  "typeName": {
                    "id": 73543,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 73542,
                      "name": "DeployerDiscoverableMetaV2ConstructionConfig",
                      "nameLocations": [
                        "1355:44:160"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55519,
                      "src": "1355:44:160"
                    },
                    "referencedDeclaration": 55519,
                    "src": "1355:44:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DeployerDiscoverableMetaV2ConstructionConfig_$55519_storage_ptr",
                      "typeString": "struct DeployerDiscoverableMetaV2ConstructionConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1354:60:160"
            },
            "returnParameters": {
              "id": 73550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1478:0:160"
            },
            "scope": 73648,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 73640,
            "nodeType": "FunctionDefinition",
            "src": "1531:760:160",
            "nodes": [],
            "body": {
              "id": 73639,
              "nodeType": "Block",
              "src": "1641:650:160",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    73563,
                    73565,
                    73567
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73563,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "1660:7:160",
                      "nodeType": "VariableDeclaration",
                      "scope": 73639,
                      "src": "1652:15:160",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 73562,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1652:7:160",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 73565,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "1677:4:160",
                      "nodeType": "VariableDeclaration",
                      "scope": 73639,
                      "src": "1669:12:160",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 73564,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1669:7:160",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 73567,
                      "mutability": "mutable",
                      "name": "encodedFunctionCall",
                      "nameLocation": "1696:19:160",
                      "nodeType": "VariableDeclaration",
                      "scope": 73639,
                      "src": "1683:32:160",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 73566,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1683:5:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73579,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 73570,
                        "name": "exchangeData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73558,
                        "src": "1742:12:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 73572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1757:7:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 73571,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1757:7:160",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 73574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1766:7:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 73573,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1766:7:160",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 73576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1775:5:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 73575,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1775:5:160",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 73577,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1756:25:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$",
                          "typeString": "tuple(type(address),type(address),type(bytes storage pointer))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$",
                          "typeString": "tuple(type(address),type(address),type(bytes storage pointer))"
                        }
                      ],
                      "expression": {
                        "id": 73568,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1731:3:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 73569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1735:6:160",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1731:10:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 73578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1731:51:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(address payable,address payable,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1651:131:160"
                },
                {
                  "assignments": [
                    73581
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73581,
                      "mutability": "mutable",
                      "name": "borrowedToken",
                      "nameLocation": "1801:13:160",
                      "nodeType": "VariableDeclaration",
                      "scope": 73639,
                      "src": "1793:21:160",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 73580,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1793:7:160",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73595,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "id": 73582,
                                "name": "takeOrders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73556,
                                "src": "1817:10:160",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TakeOrdersConfigV2_$76570_memory_ptr",
                                  "typeString": "struct TakeOrdersConfigV2 memory"
                                }
                              },
                              "id": 73583,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1828:6:160",
                              "memberName": "orders",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 76567,
                              "src": "1817:17:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TakeOrderConfig_$76582_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct TakeOrderConfig memory[] memory"
                              }
                            },
                            "id": 73585,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 73584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1835:1:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1817:20:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakeOrderConfig_$76582_memory_ptr",
                              "typeString": "struct TakeOrderConfig memory"
                            }
                          },
                          "id": 73586,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1838:5:160",
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 76573,
                          "src": "1817:26:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$76557_memory_ptr",
                            "typeString": "struct Order memory"
                          }
                        },
                        "id": 73587,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1844:12:160",
                        "memberName": "validOutputs",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 76556,
                        "src": "1817:39:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_IO_$76527_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IO memory[] memory"
                        }
                      },
                      "id": 73593,
                      "indexExpression": {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "id": 73588,
                              "name": "takeOrders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73556,
                              "src": "1857:10:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TakeOrdersConfigV2_$76570_memory_ptr",
                                "typeString": "struct TakeOrdersConfigV2 memory"
                              }
                            },
                            "id": 73589,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1868:6:160",
                            "memberName": "orders",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 76567,
                            "src": "1857:17:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TakeOrderConfig_$76582_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct TakeOrderConfig memory[] memory"
                            }
                          },
                          "id": 73591,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 73590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1875:1:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1857:20:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakeOrderConfig_$76582_memory_ptr",
                            "typeString": "struct TakeOrderConfig memory"
                          }
                        },
                        "id": 73592,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1878:13:160",
                        "memberName": "outputIOIndex",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 76577,
                        "src": "1857:34:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1817:75:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IO_$76527_memory_ptr",
                        "typeString": "struct IO memory"
                      }
                    },
                    "id": 73594,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1893:5:160",
                    "memberName": "token",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 76522,
                    "src": "1817:81:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1793:105:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73600,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73563,
                        "src": "1943:7:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 73601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1952:1:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 73597,
                            "name": "borrowedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73581,
                            "src": "1916:13:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 73596,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43884,
                          "src": "1909:6:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$43884_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 73598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1909:21:160",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$43884",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 73599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1931:11:160",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44049,
                      "src": "1909:33:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$43884_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$43884_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 73602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1909:45:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73603,
                  "nodeType": "ExpressionStatement",
                  "src": "1909:45:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73608,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73563,
                        "src": "1998:7:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 73611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2012:7:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 73610,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2012:7:160",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 73609,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2007:4:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 73612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2007:13:160",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 73613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2021:3:160",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "2007:17:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 73605,
                            "name": "borrowedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73581,
                            "src": "1971:13:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 73604,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43884,
                          "src": "1964:6:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$43884_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 73606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1964:21:160",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$43884",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 73607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1986:11:160",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44049,
                      "src": "1964:33:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$43884_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$43884_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 73614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1964:61:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73615,
                  "nodeType": "ExpressionStatement",
                  "src": "1964:61:160"
                },
                {
                  "assignments": [
                    73617
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73617,
                      "mutability": "mutable",
                      "name": "returnData",
                      "nameLocation": "2048:10:160",
                      "nodeType": "VariableDeclaration",
                      "scope": 73639,
                      "src": "2035:23:160",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 73616,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2035:5:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73627,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 73620,
                        "name": "encodedFunctionCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73567,
                        "src": "2088:19:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 73623,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2117:4:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GenericPoolOrderBookV3FlashBorrower_$73648",
                                "typeString": "contract GenericPoolOrderBookV3FlashBorrower"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_GenericPoolOrderBookV3FlashBorrower_$73648",
                                "typeString": "contract GenericPoolOrderBookV3FlashBorrower"
                              }
                            ],
                            "id": 73622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2109:7:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 73621,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2109:7:160",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 73624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2109:13:160",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 73625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2123:7:160",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2109:21:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 73618,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73565,
                        "src": "2061:4:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 73619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2066:21:160",
                      "memberName": "functionCallWithValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44431,
                      "src": "2061:26:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
                        "typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
                      }
                    },
                    "id": 73626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2061:70:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2035:96:160"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 73628,
                        "name": "returnData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73617,
                        "src": "2218:10:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "id": 73629,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2217:12:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 73630,
                  "nodeType": "ExpressionStatement",
                  "src": "2217:12:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73635,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73563,
                        "src": "2273:7:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 73636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2282:1:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 73632,
                            "name": "borrowedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73581,
                            "src": "2246:13:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 73631,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43884,
                          "src": "2239:6:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$43884_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 73633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2239:21:160",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$43884",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 73634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2261:11:160",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44049,
                      "src": "2239:33:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$43884_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$43884_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 73637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2239:45:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73638,
                  "nodeType": "ExpressionStatement",
                  "src": "2239:45:160"
                }
              ]
            },
            "baseFunctions": [
              72689
            ],
            "documentation": {
              "id": 73553,
              "nodeType": "StructuredDocumentation",
              "src": "1486:40:160",
              "text": "@inheritdoc OrderBookV3FlashBorrower"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exchange",
            "nameLocation": "1540:9:160",
            "overrides": {
              "id": 73560,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1632:8:160"
            },
            "parameters": {
              "id": 73559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73556,
                  "mutability": "mutable",
                  "name": "takeOrders",
                  "nameLocation": "1576:10:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 73640,
                  "src": "1550:36:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TakeOrdersConfigV2_$76570_memory_ptr",
                    "typeString": "struct TakeOrdersConfigV2"
                  },
                  "typeName": {
                    "id": 73555,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 73554,
                      "name": "TakeOrdersConfigV2",
                      "nameLocations": [
                        "1550:18:160"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76570,
                      "src": "1550:18:160"
                    },
                    "referencedDeclaration": 76570,
                    "src": "1550:18:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakeOrdersConfigV2_$76570_storage_ptr",
                      "typeString": "struct TakeOrdersConfigV2"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73558,
                  "mutability": "mutable",
                  "name": "exchangeData",
                  "nameLocation": "1601:12:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 73640,
                  "src": "1588:25:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 73557,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1588:5:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1549:65:160"
            },
            "returnParameters": {
              "id": 73561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1641:0:160"
            },
            "scope": 73648,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 73647,
            "nodeType": "FunctionDefinition",
            "src": "2326:42:160",
            "nodes": [],
            "body": {
              "id": 73646,
              "nodeType": "Block",
              "src": "2366:2:160",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 73641,
              "nodeType": "StructuredDocumentation",
              "src": "2297:24:160",
              "text": "Allow receiving gas."
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [
              {
                "id": 73644,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 73643,
                  "name": "onlyNotInitializing",
                  "nameLocations": [
                    "2346:19:160"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 72679,
                  "src": "2346:19:160"
                },
                "nodeType": "ModifierInvocation",
                "src": "2346:19:160"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 73642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2334:2:160"
            },
            "returnParameters": {
              "id": 73645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2366:0:160"
            },
            "scope": 73648,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 73533,
              "name": "OrderBookV3FlashBorrower",
              "nameLocations": [
                "1248:24:160"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 73032,
              "src": "1248:24:160"
            },
            "id": 73534,
            "nodeType": "InheritanceSpecifier",
            "src": "1248:24:160"
          }
        ],
        "canonicalName": "GenericPoolOrderBookV3FlashBorrower",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 73532,
          "nodeType": "StructuredDocumentation",
          "src": "522:678:160",
          "text": "@title GenericPoolOrderBookV3FlashBorrower\n Implements the OrderBookV3FlashBorrower interface for a external liquidity\n source that behaves vaguely like a standard AMM. The `exchangeData` from\n `arb` is decoded into a spender, pool and callData. The `callData` is\n literally the encoded function call to the pool. This allows the `arb`\n caller to process a trade against any liquidity source that can swap tokens\n within a single function call.\n The `spender` is the address that will be approved to spend the input token\n on `takeOrders`, which is almost always going to be the pool itself. If you\n are unsure, simply set it to the pool address."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          73648,
          73032,
          45446,
          45458,
          55564,
          71220,
          43154,
          43219,
          47312,
          76475
        ],
        "name": "GenericPoolOrderBookV3FlashBorrower",
        "nameLocation": "1209:35:160",
        "scope": 73649,
        "usedErrors": [
          47303,
          57109,
          71200,
          71205,
          71839,
          71842,
          71845,
          71850,
          72425,
          72428,
          76520
        ]
      }
    ],
    "license": "CAL"
  },
  "id": 160
}